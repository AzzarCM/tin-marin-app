[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/api/covid.js",
    "content": "import { API_DEV, API_HOST } from '../constants/URL';\r\n\r\n/**\r\n * Petición fetch que consume el endpoint para obtener un JSON con las Recomendaciones Covid-19\r\n * @property {string} url - Contiene la ruta del endpoint.\r\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo\r\n *  de tipo String con toda la\r\n * información de las recomendaciones.\r\n * @todo Agregue validaciones cuando hay problemas en la conectividad\r\n * @example getAllCovidRecommendations()\r\n * .then((response) => {...});\r\n */\r\nexport const getAllCovidRecommendations = () => {\r\n  const url = `${API_DEV}/recommendations`;\r\n\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .then((result) => result);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/api/covid.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "getAllCovidRecommendations",
    "memberof": "src/api/covid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/covid.js~getAllCovidRecommendations",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/covid.js",
    "importStyle": "{getAllCovidRecommendations}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con las Recomendaciones Covid-19",
    "examples": [
      "getAllCovidRecommendations()\n.then((response) => {...});"
    ],
    "lineNumber": 13,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo\n de tipo String con toda la\ninformación de las recomendaciones."
    },
    "params": []
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/api/exhibitions.js",
    "content": "import { API_HOST } from '../constants/URL';\r\n\r\n/**\r\n * Petición fetch que consume el endpoint para obtener un JSON con las Exhibiciones.\r\n * @property {string} url - Contiene la ruta del endpoint.\r\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo\r\n *  de tipo String con toda la\r\n * información de las exhibiciones.\r\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\r\n * @example getAllExhibitions()\r\n * .then((response) => {...});\r\n */\r\nexport function getAllExhibitions() {\r\n  const url = `${API_HOST}/exhibitions`;\r\n\r\n  return fetch(url)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    });\r\n}\r\n\r\n/**\r\n * Petición fetch que consume el endpoint para obtener un JSON con el detalle de una Exhibición.\r\n * @param {string} idExhibition - ID de la exhibición a mostrar.\r\n * @property {string} url - Contiene la ruta del endpoint.\r\n * @return {Promise<string[], MyError>} Esta promesa retorna un objeto JSON\r\n * con el detalle de una exhibición.\r\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\r\n * @example getExhibitionById('5ff944b427c7c600175674ef')\r\n * .then((response) => {...});\r\n */\r\nexport function getExhibitionById(idExhibition) {\r\n  const url = `${API_HOST}/exhibitions/${idExhibition}`;\r\n\r\n  return fetch(url)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    });\r\n}\r\n\r\n/**\r\n * Petición fetch que consume el endpoint para obtener un arreglo de Nombres que coincidan con una variable nombre definida por el Usuario.\r\n * @param {string} name - Nombre de la exhibición a mostrar.\r\n * @property {string} url - Contiene la ruta del endpoint.\r\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo\r\n *  de tipo String con toda la\r\n * información de las exhibiciones que coincidan con el nombre.\r\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\r\n * @example getExhibitionByName('El Avión')\r\n * .then((response) => {...});\r\n */\r\nexport function getExhibitionByName(name) {\r\n  const url = `${API_HOST}/exhibitions/?name=${name}`;\r\n\r\n  return fetch(url)\r\n    .then((response) => {\r\n      // console.log(response)\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      // console.log(result)\r\n      return result;\r\n    });\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/api/exhibitions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "getAllExhibitions",
    "memberof": "src/api/exhibitions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/exhibitions.js~getAllExhibitions",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/exhibitions.js",
    "importStyle": "{getAllExhibitions}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con las Exhibiciones.",
    "examples": [
      "getAllExhibitions()\n.then((response) => {...});"
    ],
    "lineNumber": 13,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo\n de tipo String con toda la\ninformación de las exhibiciones."
    },
    "params": []
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "getExhibitionById",
    "memberof": "src/api/exhibitions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/exhibitions.js~getExhibitionById",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/exhibitions.js",
    "importStyle": "{getExhibitionById}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con el detalle de una Exhibición.",
    "examples": [
      "getExhibitionById('5ff944b427c7c600175674ef')\n.then((response) => {...});"
    ],
    "lineNumber": 35,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "idExhibition",
        "description": "ID de la exhibición a mostrar."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un objeto JSON\ncon el detalle de una exhibición."
    }
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "getExhibitionByName",
    "memberof": "src/api/exhibitions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/exhibitions.js~getExhibitionByName",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/exhibitions.js",
    "importStyle": "{getExhibitionByName}",
    "description": "Petición fetch que consume el endpoint para obtener un arreglo de Nombres que coincidan con una variable nombre definida por el Usuario.",
    "examples": [
      "getExhibitionByName('El Avión')\n.then((response) => {...});"
    ],
    "lineNumber": 58,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Nombre de la exhibición a mostrar."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo\n de tipo String con toda la\ninformación de las exhibiciones que coincidan con el nombre."
    }
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/api/faqs.js",
    "content": "import { API_DEV, API_HOST } from '../constants/URL';\r\n\r\n/**\r\n * Petición fetch que consume el endpoint para obtener un JSON con las Preguntas Frecuentes.\r\n * @property {string} url - Contiene la ruta del endpoint.\r\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo.\r\n *  de tipo String con toda la\r\n * información de las preguntas frecuentes.\r\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\r\n *  @example getAllFAQs()\r\n * .then((response) => {...});\r\n */\r\nexport const getAllFAQs = () => {\r\n  const url = `${API_DEV}/faqs`;\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .then((result) => result);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/api/faqs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "getAllFAQs",
    "memberof": "src/api/faqs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/faqs.js~getAllFAQs",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/faqs.js",
    "importStyle": "{getAllFAQs}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con las Preguntas Frecuentes.",
    "examples": [
      "getAllFAQs()\n.then((response) => {...});"
    ],
    "lineNumber": 13,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo.\n de tipo String con toda la\ninformación de las preguntas frecuentes."
    },
    "params": []
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/api/sugerences.js",
    "content": "import { API_DEV, API_HOST } from '../constants/URL';\r\n\r\n/**\r\n * Petición fetch que consume el endpoint para obtener un JSON con los Tipos de Sugerencia.\r\n * @property {string} url - Contiene la ruta del endpoint.\r\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo\r\n *  de tipo String con toda la\r\n * información de los Tipos de Sugerencia.\r\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\r\n * @example getAllSuperenceTypes()\r\n * .then((response) => {...});\r\n */\r\nexport const getAllSuperenceTypes = () => {\r\n  const url = `${API_DEV}/suggestiontypes`;\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .then((result) => result);\r\n};\r\n\r\n/**\r\n * Petición fetch de tipo POST que consume el endpoint para enviar un JSON y crear una nueva Sugerencia en la base de datos.\r\n * @property {string} url - Contiene la ruta del endpoint\r\n * @return {Promise<string[], MyError>}\r\n * Esta promesa realiza una petición de tipo POST y crea un nuevo registro\r\n * con la información de una sugerencia.\r\n * @param {string} suggestionType - Aquí se almacena el tipo de sugerencia.\r\n * @param {string} suggestion - Aquí se guarda la sugerencia que realiza un usuario.\r\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\r\n * @example storeSugerence(sugerenceType, comment)\r\n * .then((response) => {...});\r\n */\r\nexport const storeSugerence = (suggestionType, suggestion) => {\r\n  const url = `${API_DEV}/suggestions`;\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      suggestionType,\r\n      suggestion,\r\n    }),\r\n  });\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/api/sugerences.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "getAllSuperenceTypes",
    "memberof": "src/api/sugerences.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/sugerences.js~getAllSuperenceTypes",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/sugerences.js",
    "importStyle": "{getAllSuperenceTypes}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con los Tipos de Sugerencia.",
    "examples": [
      "getAllSuperenceTypes()\n.then((response) => {...});"
    ],
    "lineNumber": 13,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo\n de tipo String con toda la\ninformación de los Tipos de Sugerencia."
    },
    "params": []
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "storeSugerence",
    "memberof": "src/api/sugerences.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/sugerences.js~storeSugerence",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/sugerences.js",
    "importStyle": "{storeSugerence}",
    "description": "Petición fetch de tipo POST que consume el endpoint para enviar un JSON y crear una nueva Sugerencia en la base de datos.",
    "examples": [
      "storeSugerence(sugerenceType, comment)\n.then((response) => {...});"
    ],
    "lineNumber": 32,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "suggestionType",
        "description": "Aquí se almacena el tipo de sugerencia."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "suggestion",
        "description": "Aquí se guarda la sugerencia que realiza un usuario."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa realiza una petición de tipo POST y crea un nuevo registro\ncon la información de una sugerencia."
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/api/weblinks.js",
    "content": "import { API_DEV, API_HOST } from '../constants/URL';\r\n\r\n/**\r\n * Petición fetch que consume el endpoint para obtener un JSON con los Sitios de Interés.\r\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo\r\n *  de tipo String con toda la\r\n * información de los Sitios de Interés.\r\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n * @param {AbortController.signal} signal - Se le pasa como parámetro a la funcion fetch\r\n * permite abortar la petición en caso esta se tarde más de lo esperado.\r\n */\r\nexport const getAllLinks = (signal) => {\r\n  const url = `${API_DEV}/recommended-websites`;\r\n\r\n  return fetch(url, { signal: signal })\r\n    .then((response) => response.json())\r\n    .then((result) => result);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/api/weblinks.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "getAllLinks",
    "memberof": "src/api/weblinks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/weblinks.js~getAllLinks",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/weblinks.js",
    "importStyle": "{getAllLinks}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con los Sitios de Interés.",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal"
    ],
    "lineNumber": 13,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "AbortController.signal"
        ],
        "spread": false,
        "optional": false,
        "name": "signal",
        "description": "Se le pasa como parámetro a la funcion fetch\npermite abortar la petición en caso esta se tarde más de lo esperado."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo\n de tipo String con toda la\ninformación de los Sitios de Interés."
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/components/BasicCard.js",
    "content": "import React from 'react';\r\nimport { Linking } from 'react-native';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { coinButton } from '../helpers/audio';\r\n\r\n/**\r\n * Tarjeta utilizada para mostrar información, de la pantalla Sitios de Interes.\r\n * @param {string} title - Almacena el titulo en una cadena de texto, que se muestra en pantalla. \r\n * @param {image} imageURL - Componente que muestra imagen en pantalla.\r\n * @param {style} color - Cambia el color del fondo del titulo de nuestra tarjeta.\r\n * @param {string} textBtn - Cadena de texto que almacena el nombre que tendra el boton de la tarjeta.  \r\n * @param {uri} url - Componente que almacena una dirección web\r\n * @see https://reactnative.dev/docs/image \r\n * @see https://reactnative.dev/docs/text\r\n * @see https://reactnative.dev/docs/colors\r\n * @return {SafeAreaView} Retorna un layout cuyos limites se encuentran en un area segura.\r\n */\r\n\r\nconst BasicCard = ({ title, imageURL, color, textBtn, url }) => {\r\n  // console.log(`Width: ${Dimensions.get('window').width}`);\r\n  // console.log(`Height: ${Dimensions.get('window').height}`);\r\n  return (\r\n    <SafeAreaView style={styles.card}>\r\n      <View style={[styles.tituloView, { backgroundColor: color }]}>\r\n        <Text style={styles.titulo}>{title}</Text>\r\n      </View>\r\n      <Image source={{ uri: imageURL }} style={styles.img} />\r\n      <View style={styles.viewCard}>\r\n        <View style={[styles.button, { backgroundColor: color }]}>\r\n          <TouchableOpacity\r\n            onPressIn={coinButton}\r\n            style={styles.opacity}\r\n            onPress={() => Linking.openURL(url)}>\r\n            <Text style={styles.buttonText}>{textBtn}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default BasicCard;\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    borderRadius: 15,\r\n    marginVertical: 40,\r\n    width: '90%',\r\n    height: Dimensions.get('window').height / 3,\r\n  },\r\n  viewCard: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  tituloView: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderTopRightRadius: 15,\r\n    borderTopLeftRadius: 15,\r\n    height: '35%',\r\n  },\r\n  titulo: {\r\n    marginHorizontal: 10,\r\n    fontSize: Dimensions.get('window').height > 600 ? 19 : 14,\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    textAlign: 'justify',\r\n  },\r\n  button: {\r\n    paddingVertical: 7,\r\n    borderRadius: 10,\r\n    width: '35%',\r\n    opacity: 0.8,\r\n    height: 40,\r\n    marginTop: -60,\r\n  },\r\n  buttonText: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 17,\r\n    opacity: 1,\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    height: '90%',\r\n    borderBottomLeftRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/components/BasicCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/BasicCard.js",
    "static": true,
    "longname": "src/components/BasicCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/BasicCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 55,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "BasicCard",
    "memberof": "src/components/BasicCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/BasicCard.js~BasicCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/BasicCard.js",
    "importStyle": "BasicCard",
    "description": "Tarjeta utilizada para mostrar información, de la pantalla Sitios de Interes.",
    "see": [
      "https://reactnative.dev/docs/image ",
      "https://reactnative.dev/docs/text",
      "https://reactnative.dev/docs/colors"
    ],
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Almacena el titulo en una cadena de texto, que se muestra en pantalla."
      },
      {
        "nullable": null,
        "types": [
          "image"
        ],
        "spread": false,
        "optional": false,
        "name": "imageURL",
        "description": "Componente que muestra imagen en pantalla."
      },
      {
        "nullable": null,
        "types": [
          "style"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "Cambia el color del fondo del titulo de nuestra tarjeta."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "textBtn",
        "description": "Cadena de texto que almacena el nombre que tendra el boton de la tarjeta."
      },
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Componente que almacena una dirección web"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Retorna un layout cuyos limites se encuentran en un area segura."
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/components/BasicCard2.js",
    "content": "import React from 'react';\r\nimport { Linking } from 'react-native';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n} from 'react-native';\r\nimport { coinButton } from '../helpers/audio'\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst BasicCard2 = ({title, imageURL,  color, textBtn, navigation,screenName}) => {\r\n\r\n  \r\n  return (\r\n    <SafeAreaView style={styles.card}>\r\n      <View style={[styles.tituloView, {backgroundColor: color}]}>\r\n        <Text style={styles.titulo}>{title}</Text>\r\n      </View>\r\n      <Image source={{uri: imageURL}} style={styles.img} />\r\n      <View style={styles.viewCard}>\r\n        <View style={[styles.button, {backgroundColor: color}]}>\r\n          <TouchableOpacity\r\n            style={styles.opacity}\r\n            onPressIn={coinButton}\r\n            onPress={()=> Linking.openURL('https://www.paho.org/es')}\r\n            >\r\n            <Text style={styles.buttonText}>{textBtn}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default BasicCard2;\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    borderRadius: 15,\r\n    marginBottom: 40,\r\n    marginTop: 20,\r\n    width: '90%',\r\n    height: 200,\r\n  },\r\n  viewCard: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  tituloView: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    borderTopRightRadius: 15,\r\n    borderTopLeftRadius: 15,\r\n  },\r\n  titulo: {fontSize: 19, color: '#fff', fontWeight: 'bold'},\r\n  button: {\r\n    paddingVertical: 7,\r\n    borderRadius: 10,\r\n    width: '35%',\r\n    opacity: 0.8,\r\n    height: 40,\r\n    marginTop: -60,\r\n  },\r\n  buttonText: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 17,\r\n    opacity: 1,\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    height: '90%',\r\n    borderBottomLeftRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/components/BasicCard2.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/BasicCard2.js",
    "static": true,
    "longname": "src/components/BasicCard2.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/BasicCard2.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 45,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "BasicCard2",
    "memberof": "src/components/BasicCard2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/BasicCard2.js~BasicCard2",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/BasicCard2.js",
    "importStyle": "BasicCard2",
    "description": "",
    "lineNumber": 16,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"title\": *, \"imageURL\": *, \"color\": *, \"textBtn\": *, \"navigation\": *, \"screenName\": *}"
        ],
        "defaultRaw": {
          "title": null,
          "imageURL": null,
          "color": null,
          "textBtn": null,
          "navigation": null,
          "screenName": null
        },
        "defaultValue": "{\"title\":null,\"imageURL\":null,\"color\":null,\"textBtn\":null,\"navigation\":null,\"screenName\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "src/components/Card.js",
    "content": "import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n} from 'react-native';\r\nimport { coinButton } from '../helpers/audio'\r\n\r\n/**\r\n * Tarjeta utilizada para mostrar la información de las pantallas: Información de Covid, Exhibiciones, Preguntas Frecuentes, Busqueda    \r\n * @param {style} color - Cambia el color del fondo del titulo de nuestra tarjeta.\r\n * @param {string} textBtn - Cadena de texto que almacena el nombre que tendra el boton de la tarjeta.\r\n * @param {prop} navigation - Contiene información básica de navegación\r\n * @property {function} exhibition - Método de acceso indirecto para acceder a parametros.\r\n * @property {function} imageURL - Método de acceso\r\n * @see https://reactnative.dev/docs/intro-react\r\n * @see https://reactnative.dev/docs/text\r\n * @see https://reactnavigation.org/docs/navigation-prop/  \r\n * @see https://reactnative.dev/docs/safeareaview\r\n * @return {SafeAreaView} Retorna un layout cuyos limites se encuentran en un area segura.\r\n }}\r\n */\r\n\r\nconst Card = ({ exhibition, color, textBtn, navigation}) => {\r\n  const {images, name, _id } = exhibition;\r\n  const [imageURL] = images;\r\n  \r\n  return (\r\n    <SafeAreaView style={styles.card}>\r\n      <View style={[styles.tituloView, {backgroundColor: color}]}>\r\n        <Text style={styles.titulo}>{name}</Text>\r\n      </View>\r\n      <Image source={{uri: imageURL}} style={styles.img} />\r\n      <View style={styles.viewCard}>\r\n        <View style={[styles.button, {backgroundColor: color}]}>\r\n          <TouchableOpacity\r\n            style={styles.opacity}\r\n            onPressIn={coinButton}\r\n            onPress={() => navigation.navigate('information', {_id})}>\r\n            <Text style={styles.buttonText}>{textBtn}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    borderRadius: 15,\r\n    marginBottom: 40,\r\n    marginTop: 20,\r\n    width: '90%',\r\n    height: 200,\r\n  },\r\n  viewCard: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  tituloView: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    borderTopRightRadius: 15,\r\n    borderTopLeftRadius: 15,\r\n  },\r\n  titulo: {fontSize: 19, color: '#fff', fontWeight: 'bold'},\r\n  button: {\r\n    paddingVertical: 7,\r\n    borderRadius: 10,\r\n    width: '35%',\r\n    opacity: 0.8,\r\n    height: 40,\r\n    marginTop: -60,\r\n  },\r\n  buttonText: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 17,\r\n    opacity: 1,\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    height: '90%',\r\n    borderBottomLeftRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/components/Card.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Card.js",
    "static": true,
    "longname": "src/components/Card.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/Card.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 56,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "Card",
    "memberof": "src/components/Card.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Card.js~Card",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/Card.js",
    "importStyle": "Card",
    "description": "Tarjeta utilizada para mostrar la información de las pantallas: Información de Covid, Exhibiciones, Preguntas Frecuentes, Busqueda    ",
    "see": [
      "https://reactnative.dev/docs/intro-react",
      "https://reactnative.dev/docs/text",
      "https://reactnavigation.org/docs/navigation-prop/  ",
      "https://reactnative.dev/docs/safeareaview"
    ],
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "style"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "Cambia el color del fondo del titulo de nuestra tarjeta."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "textBtn",
        "description": "Cadena de texto que almacena el nombre que tendra el boton de la tarjeta."
      },
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "exhibition",
        "description": "Método de acceso indirecto para acceder a parametros."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "imageURL",
        "description": "Método de acceso"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Retorna un layout cuyos limites se encuentran en un area segura.\n}}"
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/components/ContactCard.js",
    "content": "import React from 'react';\r\nimport { StyleSheet, Text, View, SafeAreaView } from 'react-native';\r\n\r\n/**\r\n * Tarjeta utilizada para mostrar la información de la pantalla Contacto.\r\n * @param {string} charge - Cadena que almacena el cargo que tiene cada contacto del museo.\r\n * @param {style} color - Cambia el color del fondo del titulo de nuestra tarjeta.\r\n * @param {string} name - Cadena que almacena el nombre de los contactos.\r\n * @param {string} email - Cadena que almacena el email de los contactos.\r\n * @see https://reactnative.dev/docs/text\r\n * @see https://reactnative.dev/docs/safeareaview\r\n * @return {SafeAreaView} - Retorna un layout cuyos limites se encuentran en un area segura.\r\n */\r\n\r\nconst GenericCard = ({ charge, color, name, email }) => {\r\n  return (\r\n    <SafeAreaView style={styles.card}>\r\n      <View style={[styles.tituloView, { backgroundColor: color }]}>\r\n        <Text style={styles.titulo}>{charge}</Text>\r\n      </View>\r\n      <View style={styles.viewCard}>\r\n        <Text style={styles.subTitulo}>{name}</Text>\r\n        <Text style={styles.subTitulo}>{email}</Text>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default GenericCard;\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    // marginBottom: 40,\r\n    marginTop: 20,\r\n    width: '100%',\r\n  },\r\n  viewCard: {\r\n    borderColor: '#d1d3e2',\r\n    borderWidth: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff',\r\n    height: 100,\r\n    borderBottomRightRadius: 15,\r\n    borderBottomLeftRadius: 15,\r\n  },\r\n  tituloView: {\r\n    borderColor: '#d1d3e2',\r\n    borderWidth: 1,\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    borderTopRightRadius: 15,\r\n    borderTopLeftRadius: 15,\r\n  },\r\n  titulo: { fontSize: 19, color: '#fff', fontWeight: 'bold' },\r\n  subTitulo: { fontSize: 19, color: '#858796', fontWeight: 'normal' },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/components/ContactCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/ContactCard.js",
    "static": true,
    "longname": "src/components/ContactCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/ContactCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 34,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "GenericCard",
    "memberof": "src/components/ContactCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/ContactCard.js~GenericCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/ContactCard.js",
    "importStyle": "GenericCard",
    "description": "Tarjeta utilizada para mostrar la información de la pantalla Contacto.",
    "see": [
      "https://reactnative.dev/docs/text",
      "https://reactnative.dev/docs/safeareaview"
    ],
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "charge",
        "description": "Cadena que almacena el cargo que tiene cada contacto del museo."
      },
      {
        "nullable": null,
        "types": [
          "style"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "Cambia el color del fondo del titulo de nuestra tarjeta."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Cadena que almacena el nombre de los contactos."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "Cadena que almacena el email de los contactos."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Retorna un layout cuyos limites se encuentran en un area segura."
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/components/DrawerMenu.js",
    "content": "import React from 'react';\r\nimport {StyleSheet} from 'react-native';\r\nimport {Icon} from 'react-native-elements';\r\n\r\n/**\r\n * Menu desplegable que se muestra a un costado, al presionar el boton respectivo en la pantalla principal.\r\n * @param {*} props - Componentes a los que se les aplica personalizacion.\r\n * @see https://reactnative.dev/docs/props \r\n */\r\nexport const DrawerMenu = (props) => {\r\n  return (\r\n    <Icon\r\n      name=\"menu\"\r\n      type=\"material-community\"\r\n      size={30}\r\n      color=\"black\"\r\n      onPress={props.onPress}\r\n      containerStyle={styles.containerStyle}\r\n    />\r\n  );\r\n};\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  containerStyle: {flexDirection: 'row', marginLeft: 10},\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/components/DrawerMenu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "DrawerMenu",
    "memberof": "src/components/DrawerMenu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/DrawerMenu.js~DrawerMenu",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/DrawerMenu.js",
    "importStyle": "{DrawerMenu}",
    "description": "Menu desplegable que se muestra a un costado, al presionar el boton respectivo en la pantalla principal.",
    "see": [
      "https://reactnative.dev/docs/props "
    ],
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Componentes a los que se les aplica personalizacion."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/DrawerMenu.js",
    "static": true,
    "longname": "src/components/DrawerMenu.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/DrawerMenu.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 26,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "src/components/GenericCard.js",
    "content": "import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { coinButton } from '../helpers/audio';\r\n\r\n/**\r\n * Tarjeta utilizada por la pantalla Covid-19, para mostrar las opciones en dicho apartado.\r\n * @param {prop} navigation - Contiene información básica de navegación.\r\n * @param {string} id - Contiene en una cadena de texto el id.\r\n * @param {string} title - Contiene en una cadena de texto el titulo.\r\n * @param {string} description - Se almacena en una cadena la descripción.\r\n * @param {image} imageURL - Componente que muestra imagen en pantalla.\r\n * @param {style} color - Cambia el color del fondo del titulo de nuestra tarjeta.\r\n * @param {string} textBtn - Cadena de texto que almacena el nombre que tendra el boton de la tarjeta.\r\n * @param {string} screenName - Cadena que almacena el nombre de la pantalla.\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @see https://reactnative.dev/docs/image\r\n * @see https://reactnative.dev/docs/text\r\n * @return {SafeAreaView} - Retorna un layout cuyos limites se encuentran en un area segura.\r\n */\r\nconst GenericCard = ({\r\n  id,\r\n  title,\r\n  description,\r\n  imageURL,\r\n  steps,\r\n  color,\r\n  textBtn,\r\n  navigation,\r\n  screenName,\r\n}) => {\r\n  const navigating = () => {\r\n    navigation.navigate(screenName, {\r\n      id: id,\r\n      title: title,\r\n      description: description,\r\n      image: imageURL,\r\n      steps: steps,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.card}>\r\n      <View style={[styles.tituloView, { backgroundColor: color }]}>\r\n        <Text style={styles.titulo}>{title}</Text>\r\n      </View>\r\n      <Image source={{ uri: imageURL }} style={styles.img} />\r\n      <View style={styles.viewCard}>\r\n        <View style={[styles.button, { backgroundColor: color }]}>\r\n          <TouchableOpacity style={styles.opacity} onPressIn={coinButton} onPress={() => navigating()}>\r\n            <Text style={styles.buttonText}>{textBtn}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default GenericCard;\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    borderRadius: 15,\r\n    marginBottom: 40,\r\n    marginTop: 20,\r\n    width: '90%',\r\n    height: Dimensions.get('window').height / 3.4,\r\n  },\r\n  viewCard: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  tituloView: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    borderTopRightRadius: 15,\r\n    borderTopLeftRadius: 15,\r\n  },\r\n  titulo: { fontSize: 19, color: '#fff', fontWeight: 'bold' },\r\n  button: {\r\n    paddingVertical: 7,\r\n    borderRadius: 10,\r\n    width: '35%',\r\n    opacity: 0.8,\r\n    height: 40,\r\n    marginTop: -60,\r\n  },\r\n  buttonText: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 17,\r\n    opacity: 1,\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    height: '90%',\r\n    borderBottomLeftRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/components/GenericCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/GenericCard.js",
    "static": true,
    "longname": "src/components/GenericCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/GenericCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 72,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "GenericCard",
    "memberof": "src/components/GenericCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/GenericCard.js~GenericCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/GenericCard.js",
    "importStyle": "GenericCard",
    "description": "Tarjeta utilizada por la pantalla Covid-19, para mostrar las opciones en dicho apartado.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactnative.dev/docs/image",
      "https://reactnative.dev/docs/text"
    ],
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Contiene en una cadena de texto el id."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Contiene en una cadena de texto el titulo."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "Se almacena en una cadena la descripción."
      },
      {
        "nullable": null,
        "types": [
          "image"
        ],
        "spread": false,
        "optional": false,
        "name": "imageURL",
        "description": "Componente que muestra imagen en pantalla."
      },
      {
        "nullable": null,
        "types": [
          "style"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "Cambia el color del fondo del titulo de nuestra tarjeta."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "textBtn",
        "description": "Cadena de texto que almacena el nombre que tendra el boton de la tarjeta."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "screenName",
        "description": "Cadena que almacena el nombre de la pantalla."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Retorna un layout cuyos limites se encuentran en un area segura."
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/components/KnoMoreCard.js",
    "content": "import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { coinButton } from '../helpers/audio';\r\n\r\n\r\n/**\r\n * Tarjeta utilizada por la pantalla Covid-19, para mostrar las opciones en dicho apartado.\r\n * @param {prop} navigation - Contiene información básica de navegación.\r\n * @param {string} id - Contiene en una cadena de texto el id.\r\n * @param {string} title - Contiene en una cadena de texto el titulo.\r\n * @param {string} description - Se almacena en una cadena la descripción.\r\n * @param {image} imageURL - Componente que muestra imagen en pantalla.\r\n * @param {style} color - Cambia el color del fondo del titulo de nuestra tarjeta.\r\n * @param {string} textBtn - Cadena de texto que almacena el nombre que tendra el boton de la tarjeta.\r\n * @param {string} screenName - Cadena que almacena el nombre de la pantalla.\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @see https://reactnative.dev/docs/image\r\n * @see https://reactnative.dev/docs/text\r\n * @return {SafeAreaView} - Retorna un layout cuyos limites se encuentran en un area segura.\r\n */\r\nconst KnoMoreCard = ({\r\n  id,\r\n  title,\r\n  description,\r\n  imageURL,\r\n  steps,\r\n  color,\r\n  textBtn,\r\n  navigation,\r\n  screenName,\r\n}) => {\r\n  const navigating = () => {\r\n    navigation.navigate(screenName, {\r\n      id: id,\r\n      title: title,\r\n      description: description,\r\n      image: imageURL,\r\n      steps: steps,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.card}>\r\n      <View style={[styles.tituloView, { backgroundColor: color }]}>\r\n        <Text style={styles.titulo}>{title}</Text>\r\n      </View>\r\n      <Image source={(imageURL)} style={styles.img} />\r\n      <View style={styles.viewCard}>\r\n        <View style={[styles.button, { backgroundColor: color }]}>\r\n          <TouchableOpacity style={styles.opacity} onPressIn={coinButton} onPress={() => navigating()}>\r\n            <Text style={styles.buttonText}>{textBtn}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default KnoMoreCard;\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    borderRadius: 15,\r\n    marginBottom: 40,\r\n    marginTop: 20,\r\n    width: '90%',\r\n    height: Dimensions.get('window').height / 3.4,\r\n  },\r\n  viewCard: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  tituloView: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    borderTopRightRadius: 15,\r\n    borderTopLeftRadius: 15,\r\n  },\r\n  titulo: { fontSize: 19, color: '#fff', fontWeight: 'bold' },\r\n  button: {\r\n    paddingVertical: 7,\r\n    borderRadius: 10,\r\n    width: '35%',\r\n    opacity: 0.8,\r\n    height: 40,\r\n    marginTop: -60,\r\n  },\r\n  buttonText: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 17,\r\n    opacity: 1,\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    height: '90%',\r\n    borderBottomLeftRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/components/KnoMoreCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/KnoMoreCard.js",
    "static": true,
    "longname": "src/components/KnoMoreCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/KnoMoreCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 72,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "KnoMoreCard",
    "memberof": "src/components/KnoMoreCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/KnoMoreCard.js~KnoMoreCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/KnoMoreCard.js",
    "importStyle": "KnoMoreCard",
    "description": "Tarjeta utilizada por la pantalla Covid-19, para mostrar las opciones en dicho apartado.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactnative.dev/docs/image",
      "https://reactnative.dev/docs/text"
    ],
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Contiene en una cadena de texto el id."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Contiene en una cadena de texto el titulo."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "Se almacena en una cadena la descripción."
      },
      {
        "nullable": null,
        "types": [
          "image"
        ],
        "spread": false,
        "optional": false,
        "name": "imageURL",
        "description": "Componente que muestra imagen en pantalla."
      },
      {
        "nullable": null,
        "types": [
          "style"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "Cambia el color del fondo del titulo de nuestra tarjeta."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "textBtn",
        "description": "Cadena de texto que almacena el nombre que tendra el boton de la tarjeta."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "screenName",
        "description": "Cadena que almacena el nombre de la pantalla."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Retorna un layout cuyos limites se encuentran en un area segura."
    }
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/components/Modal.js",
    "content": "import React from 'react';\r\nimport { StyleSheet, Text, View, Image } from 'react-native';\r\nimport Tin from '../assets/tin.png';\r\n\r\nconst Modal = ({ curiousInfo }) => {\r\n  return (\r\n    <View style={styles.content}>\r\n      <Image source={Tin} style={styles.img} />\r\n      <Text style={styles.text}>{curiousInfo}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nconst styles = StyleSheet.create({\r\n  content: {\r\n    maxWidth: '90%',\r\n    minWidth: '60%',\r\n    height: 120,\r\n    marginTop: 20,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  img: {\r\n    height: 110,\r\n    width: 110,\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  text: {\r\n    fontSize: 16.5,\r\n    width: '63%',\r\n    textAlign: 'left',\r\n    paddingLeft: 10,\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/components/Modal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Modal.js",
    "static": true,
    "longname": "src/components/Modal.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/Modal.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "Modal",
    "memberof": "src/components/Modal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Modal.js~Modal",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/Modal.js",
    "importStyle": "Modal",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"curiousInfo\": *}"
        ],
        "defaultRaw": {
          "curiousInfo": null
        },
        "defaultValue": "{\"curiousInfo\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/components/ModalBody.js",
    "content": "import React, { useState } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { playButtonPress } from '../helpers/audio';\r\nimport {\r\n  Modal,\r\n  ModalButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  SlideAnimation,\r\n  ModalTitle,\r\n} from 'react-native-modals';\r\n\r\nimport MContent from './Modal';\r\n\r\nconst ModalBody = ({ showModal, visible, curiousInfo }) => {\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onTouchOutside={showModal}\r\n      modalAnimation={\r\n        new SlideAnimation({\r\n          slideFrom: 'bottom',\r\n        })\r\n      }\r\n      modalTitle={<ModalTitle title=\"¿Sabías qué?\" />}\r\n      footer={\r\n        <ModalFooter>\r\n          <ModalButton text=\"OK\" onPress={showModal} />\r\n        </ModalFooter>\r\n      }>\r\n      <ModalContent>\r\n        <MContent curiousInfo={curiousInfo} />\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalBody;\r\n\r\nconst styles = StyleSheet.create({});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/components/ModalBody.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/ModalBody.js",
    "static": true,
    "longname": "src/components/ModalBody.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/ModalBody.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "ModalBody",
    "memberof": "src/components/ModalBody.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/ModalBody.js~ModalBody",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/ModalBody.js",
    "importStyle": "ModalBody",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"showModal\": *, \"visible\": *, \"curiousInfo\": *}"
        ],
        "defaultRaw": {
          "showModal": null,
          "visible": null,
          "curiousInfo": null
        },
        "defaultValue": "{\"showModal\":null,\"visible\":null,\"curiousInfo\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "src/components/SugerenceCard.js",
    "content": "import React from 'react';\r\nimport { StyleSheet, Text, View, SafeAreaView, TextInput } from 'react-native';\r\n\r\nconst GenericCard = ({ sugerenceType, color, comment, onCommentChange }) => {\r\n  const handleComment = (text) => {\r\n    onCommentChange(text);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.card}>\r\n      <View style={[styles.tituloView, { backgroundColor: color }]}>\r\n        <Text style={styles.titulo}>{`Comentario: ${sugerenceType}`}</Text>\r\n      </View>\r\n      <View style={styles.textAreaContainer}>\r\n        <TextInput\r\n          style={styles.textArea}\r\n          underlineColorAndroid=\"transparent\"\r\n          placeholder=\"Escribe tu comentario aqui\"\r\n          placeholderTextColor=\"grey\"\r\n          numberOfLines={10}\r\n          multiline={true}\r\n          value={comment}\r\n          onChangeText={(text) => {\r\n            handleComment(text);\r\n            // console.log(text);\r\n          }}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default GenericCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    marginBottom: 40,\r\n    marginTop: 20,\r\n    width: '100%',\r\n  },\r\n  textAreaContainer: {\r\n    paddingHorizontal: 10,\r\n    width: '100%',\r\n    borderColor: '#d1d3e2',\r\n    borderLeftWidth: 1,\r\n    borderRightWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderBottomRightRadius: 15,\r\n    borderBottomLeftRadius: 15,\r\n  },\r\n  textArea: {\r\n    textAlignVertical: 'top',\r\n  },\r\n  viewCard: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff',\r\n    height: 100,\r\n  },\r\n  tituloView: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    borderTopRightRadius: 15,\r\n    borderTopLeftRadius: 15,\r\n  },\r\n  titulo: { fontSize: 19, color: '#fff', fontWeight: 'bold' },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/components/SugerenceCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/SugerenceCard.js",
    "static": true,
    "longname": "src/components/SugerenceCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/SugerenceCard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "GenericCard",
    "memberof": "src/components/SugerenceCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/SugerenceCard.js~GenericCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/SugerenceCard.js",
    "importStyle": "GenericCard",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"sugerenceType\": *, \"color\": *, \"comment\": *, \"onCommentChange\": *}"
        ],
        "defaultRaw": {
          "sugerenceType": null,
          "color": null,
          "comment": null,
          "onCommentChange": null
        },
        "defaultValue": "{\"sugerenceType\":null,\"color\":null,\"comment\":null,\"onCommentChange\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/constants/Colors.js",
    "content": "export default {\r\n  activeDrawerItemTintColor: 'white',\r\n  inactiveDrawerItemTintColor: '#829CE7',\r\n  primaryColor: '#4E73DF',\r\n  magenta: \"#860472\",\r\n  green: \"#ABBF39\",\r\n  blueColor:  \"#4E73DF\"\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/constants/Colors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/constants/URL.js",
    "content": "export default {\r\n  banco:\r\n    'https://tinmarin.org/wp-content/uploads/2019/11/banco-opt-1024x788.jpg',\r\n  avion: 'https://tinmarin.org/wp-content/uploads/2019/11/avion-1024x787.jpg',\r\n  hospital:\r\n    'https://tinmarin.org/wp-content/uploads/2020/04/hospital-1024x788.png',\r\n};\r\n\r\n/**\r\n * Constante que contiene el endpoint de producción\r\n * @type {string}\r\n * @example API_HOST = 'https://tin-marin-app.herokuapp.com/api/v1';\r\n */\r\nexport const API_HOST = 'https://tin-marin-app.herokuapp.com/api/v1';\r\n\r\n/**\r\n * Constante que contiene el endpoint de desarrollo\r\n * @type {string}\r\n * @example API_DEV = 'https://tinmarin.herokuapp.com/api/v1';\r\n */\r\nexport const API_DEV = 'https://tinmarin.herokuapp.com/api/v1';\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/constants/URL.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "API_HOST",
    "memberof": "src/constants/URL.js",
    "static": true,
    "longname": "src/constants/URL.js~API_HOST",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/constants/URL.js",
    "importStyle": "{API_HOST}",
    "description": "Constante que contiene el endpoint de producción",
    "examples": [
      "API_HOST = 'https://tin-marin-app.herokuapp.com/api/v1';"
    ],
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "API_DEV",
    "memberof": "src/constants/URL.js",
    "static": true,
    "longname": "src/constants/URL.js~API_DEV",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/constants/URL.js",
    "importStyle": "{API_DEV}",
    "description": "Constante que contiene el endpoint de desarrollo",
    "examples": [
      "API_DEV = 'https://tinmarin.herokuapp.com/api/v1';"
    ],
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "src/dummy-data/contacts.js",
    "content": "/**\r\n * @type {Array<Object>}\r\n * @property {string} CONTACT.id - Contiene el identificador de registro de contacto.\r\n * @property {string} CONTACT.name - Contiene el nombre del contacto.\r\n * @property {string} CONTACT.email - Contiene el email que identifica al contacto.\r\n * @property {string} CONTACT.charge - Se muestra el cargo asociado al contacto.\r\n * @property {string} CONTACT.image - Se guarda una imagen de contacto.\r\n */\r\nexport const CONTACTS = [\r\n  {\r\n    id: 'c9',\r\n    name: 'Rolando Rodríguez',\r\n    email: 'rrodriguez@tinmarin.org',\r\n    charge: 'ADMINISTRACION',\r\n    image: 'https://cdn.icon-icons.com/icons2/1737/PNG/512/worker_113306.png',\r\n  },\r\n  {\r\n    id: 'c2',\r\n    name: 'Patricia Gutiérrez',\r\n    email: 'pgutierrez@tinmarin.org',\r\n    charge: 'CELEBRACIONES',\r\n    image:\r\n      'https://cdn.icon-icons.com/icons2/2670/PNG/512/celebration_party_confetti_icon_161370.png',\r\n  },\r\n  {\r\n    id: 'c5',\r\n    name: '',\r\n    email: 'comunicaciones@tinmarin.org',\r\n    charge: 'COMUNICACIONES',\r\n    image:\r\n      'https://cdn.icon-icons.com/icons2/936/PNG/512/speech-bubbles-comment-option_icon-icons.com_73399.png',\r\n  },\r\n  {\r\n    id: 'cc',\r\n    name: ' Ing. Juan Carlos Novoa',\r\n    email: '--',\r\n    charge: 'DIRECCION EJECUTIVA',\r\n    image:\r\n      'https://cdn.icon-icons.com/icons2/2387/PNG/512/meetings_meeting_table_people_work_icon_144587.png',\r\n  },\r\n  {\r\n    id: 'c6',\r\n    name: 'Lyl Álvarez',\r\n    email: 'lylalvarez@tinmarin.org',\r\n    charge: 'EDUCACION',\r\n    image:\r\n      'https://cdn.icon-icons.com/icons2/936/PNG/512/book_icon-icons.com_73655.png',\r\n  },\r\n  {\r\n    id: 'c8',\r\n    name: 'Moisés Rauda',\r\n    email: 'moises@tinmarin.org',\r\n    charge: 'PROYECTOS',\r\n    image:\r\n      'https://cdn.icon-icons.com/icons2/875/PNG/512/work-tools-crossed_icon-icons.com_68107.png',\r\n  },\r\n  {\r\n    id: 'c7',\r\n    name: 'Jacqueline Martínez',\r\n    email: 'jmartinez@tinmarin.org',\r\n    charge: 'TIN MARIN MOVIL',\r\n    image:\r\n      'https://cdn.icon-icons.com/icons2/2450/PNG/512/summer_holidays_outdoor_holidays_relax_icon_148884.png',\r\n  },\r\n  {\r\n    id: 'c1',\r\n    name: 'Sandra de Villacorta',\r\n    email: 'sdevillacorta@tinmarin.org',\r\n    charge: 'VISITA ESCOLAR',\r\n    image:\r\n      'https://cdn.icon-icons.com/icons2/1364/PNG/512/frontalbussilhouette_89094.png',\r\n  },\r\n  {\r\n    id: 'c3',\r\n    name: 'Leticia de Schlageter',\r\n    email: 'leticia@tinmarin.org',\r\n    charge: 'VISITA PATROCINADA',\r\n    image: 'https://cdn.icon-icons.com/icons2/390/PNG/512/megaphone_39495.png',\r\n  },\r\n  {\r\n    id: 'c4',\r\n    name: 'Xiomara de Tenorio',\r\n    email: 'xkdetenorio@tinmarin.org',\r\n    charge: 'VOLUNTARIADO',\r\n    image: 'https://cdn.icon-icons.com/icons2/38/PNG/512/hand_hand_5532.png',\r\n  },\r\n];\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/dummy-data/contacts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "CONTACTS",
    "memberof": "src/dummy-data/contacts.js",
    "static": true,
    "longname": "src/dummy-data/contacts.js~CONTACTS",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/dummy-data/contacts.js",
    "importStyle": "{CONTACTS}",
    "description": "",
    "lineNumber": 9,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACT.id",
        "description": "Contiene el identificador de registro de contacto."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACT.name",
        "description": "Contiene el nombre del contacto."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACT.email",
        "description": "Contiene el email que identifica al contacto."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACT.charge",
        "description": "Se muestra el cargo asociado al contacto."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACT.image",
        "description": "Se guarda una imagen de contacto."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/helpers/audio.js",
    "content": "import Sound from 'react-native-sound';\r\n\r\nSound.setCategory('Ambient', true);\r\n\r\nconst buttonPress = new Sound(require('../audio/tuturu.mp3'), error => console.log(error));\r\nexport const playButtonPress = () => {\r\n  buttonPress.play();\r\n}\r\n\r\nconst heylisten = new Sound (require('../audio/heylisten.mp3'), error=> console.log(error));\r\nexport const heyListenButton = () =>{\r\n  heylisten.play();\r\n}\r\n\r\nconst wow = new Sound (require('../audio/wow.mp3'), error=> console.log(error));\r\nexport const wowButton = () =>{\r\n  wow.play();\r\n}\r\n\r\nconst msn = new Sound (require('../audio/msn.mp3'), error=> console.log(error));\r\nexport const msnButton = () =>{\r\n  msn.play();\r\n}\r\n\r\nconst catc = new Sound (require('../audio/catch.mp3'), error=> console.log(error));\r\nexport const catcButton = () =>{\r\n  catc.play();\r\n}\r\n\r\nconst coin = new Sound (require('../audio/coin.mp3'), error=> console.log(error));\r\nexport const coinButton = () =>{\r\n  coin.play();\r\n}\r\n\r\nconst ohh = new Sound (require('../audio/ohh.mp3'), error=> console.log(error));\r\nexport const ohhButton = () =>{\r\n  ohh.play();\r\n}\r\n\r\n\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/helpers/audio.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "buttonPress",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~buttonPress",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "playButtonPress",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~playButtonPress",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{playButtonPress}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "heylisten",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~heylisten",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "heyListenButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~heyListenButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{heyListenButton}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "wow",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~wow",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "wowButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~wowButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{wowButton}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "msn",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~msn",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "msnButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~msnButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{msnButton}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "catc",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~catc",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "catcButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~catcButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{catcButton}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "coin",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~coin",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "coinButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~coinButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{coinButton}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "ohh",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~ohh",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "ohhButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~ohhButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{ohhButton}",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/navigation/DrawerContent.js",
    "content": "import React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { DrawerContentScrollView } from '@react-navigation/drawer';\r\nimport { Drawer, Avatar } from 'react-native-paper';\r\nimport {\r\n  playButtonPress,\r\n} from '../helpers/audio'\r\nimport Colors from '../constants/Colors';\r\nconst DrawerContent = (props) => {\r\n  const { navigation } = props;\r\n  return (\r\n    <DrawerContentScrollView style={styles.drawer}>\r\n      <Drawer.Section style={styles.image}>\r\n        <Avatar.Image\r\n          backgroundColor={'#4E73DF'}\r\n          size={100}\r\n          source={require('../assets/logoDrawer.png')}\r\n        />\r\n      </Drawer.Section>\r\n      <Drawer.Section>\r\n        <Drawer.Item\r\n          label=\"Menu Principal\"\r\n          onPress={() => navigation.navigate('home')}\r\n          icon=\"home\"\r\n        />\r\n        <Drawer.Item\r\n          label=\"Exhibiciones\"\r\n          onPress={() =>{playButtonPress, navigation.navigate('exhibits')} }\r\n          icon=\"ticket\"\r\n        />\r\n        {/* <Drawer.Item\r\n                    label=\"Eventos\"\r\n                    onPress={()=> navigation.navigate(\"events\")}\r\n                    icon=\"gift\"\r\n                /> */}\r\n        <Drawer.Item\r\n          label=\"Recomendaciones Covid-19\"\r\n          onPress={() => navigation.navigate('covid')}\r\n          icon=\"virus\"\r\n        />\r\n        <Drawer.Item\r\n          label=\"Conócenos Más\"\r\n          onPress={() => navigation.navigate('knowMore')}\r\n          icon=\"card-account-mail\"\r\n        />\r\n        <Drawer.Item\r\n          label=\"Sugerencias\"\r\n          onPress={() => navigation.navigate('comments')}\r\n          icon=\"email-alert\"\r\n        />\r\n        {/* <Drawer.Item\r\n          label=\"Donaciones\"\r\n          onPress={() => navigation.navigate('donations')}\r\n          icon=\"heart\"\r\n        /> */}\r\n        <Drawer.Item\r\n          label=\"Preguntas Frecuentes\"\r\n          onPress={() => navigation.navigate('FAQs')}\r\n          icon=\"frequently-asked-questions\"\r\n        />\r\n        <Drawer.Item\r\n          label=\"Sitios de Interés\"\r\n          onPress={() => navigation.navigate('WebLinks')}\r\n          icon=\"web\"\r\n        />\r\n      </Drawer.Section>\r\n    </DrawerContentScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#4E73DF',\r\n  },\r\n  second: {\r\n    color: '#860472',\r\n  },\r\n  drawer: {\r\n    backgroundColor: Colors.primaryColor,\r\n    color: '#FFF',\r\n  },\r\n});\r\n\r\nexport default DrawerContent;\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/navigation/DrawerContent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/navigation/DrawerContent.js",
    "static": true,
    "longname": "src/navigation/DrawerContent.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/navigation/DrawerContent.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "DrawerContent",
    "memberof": "src/navigation/DrawerContent.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/navigation/DrawerContent.js~DrawerContent",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/navigation/DrawerContent.js",
    "importStyle": "DrawerContent",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/navigation/MainNavigator.js",
    "content": "import React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport StackNavigation from './StackNavigation';\r\nimport DrawerContent from './DrawerContent';\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nexport default MainNavigator = () => {\r\n  return (\r\n    <Drawer.Navigator\r\n      initialRouteName=\"app\"\r\n      drawerContent={(props) => <DrawerContent {...props} />}>\r\n      <Drawer.Screen name=\"app\" component={StackNavigation} />\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n\r\n// const styles = StyleSheet.create({\r\n//   drawerStyle: {\r\n//     backgroundColor: Colors.primaryColor,\r\n//     width: 240,\r\n//   },\r\n//   drawerIcon: {\r\n//     //backgroundColor: 'white',\r\n//   },\r\n//   drawerLabel: {fontWeight: 'bold'},\r\n// });\r\n\r\n// const drawerContentOptions = {\r\n//   activeTintColor: Colors.activeDrawerItemTintColor,\r\n//   inactiveTintColor: Colors.inactiveDrawerItemTintColor,\r\n//   itemStyle: {marginVertical: 5},\r\n// };\r\n\r\n// const screenOptions = (drawerLabel, iconName, iconType) => {\r\n//   return {\r\n//     headerShown: true,\r\n//     headerTitle: drawerLabel,\r\n//     drawerLabel: ({focused, color}) => (\r\n//       <Text style={{...styles.drawerLabel, color: color}}>{drawerLabel}</Text>\r\n//     ),\r\n//     drawerIcon: ({focused, color, size}) => (\r\n//       <Icon\r\n//         name={iconName}\r\n//         type={iconType}\r\n//         color={color}\r\n//         size={size}\r\n//         style={styles.drawerIcon}\r\n//         solid={true}\r\n//       />\r\n//     ),\r\n//   };\r\n// };\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/navigation/MainNavigator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "Drawer",
    "memberof": "src/navigation/MainNavigator.js",
    "static": true,
    "longname": "src/navigation/MainNavigator.js~Drawer",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/navigation/MainNavigator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "MainNavigator",
    "memberof": "src/navigation/MainNavigator.js",
    "static": true,
    "longname": "src/navigation/MainNavigator.js~MainNavigator",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/navigation/MainNavigator.js",
    "importStyle": "MainNavigator",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/navigation/StackNavigation.js",
    "content": "import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { IconButton } from 'react-native-paper';\r\n\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport ExhibitsScrn from '../screens/ExhibitsScreen';\r\nimport EventsScreen from '../screens/EventsScreen';\r\nimport CovidScreen from '../screens/CovidScreen';\r\nimport ContactScreen from '../screens/ContactScreen';\r\nimport SugerenceScreen from '../screens/SugerenceScreen';\r\nimport DonationScreen from '../screens/DonationScreen';\r\nimport InfoCard from '../screens/InfoCard';\r\nimport KnowMoreScreen from '../screens/KnowMoreScreen';\r\nimport MissionAndVisionScreen from '../screens/MissionAndVisionScreen';\r\nimport Search from '../screens/Search';\r\nimport FAQScreen from '../screens/FAQScreen';\r\nimport WebLinksScreen from '../screens/WebLinksScreen';\r\nimport CovidInfo from '../screens/CovidInfo';\r\n\r\nconst Stack = createStackNavigator();\r\nexport default function StackNavigation(props) {\r\n  const { navigation } = props;\r\n\r\n  const buttonLeft = (screen = 'not') => {\r\n    if (screen == 'information' || screen == 'search' || screen == 'FAQs')\r\n      return (\r\n        <IconButton\r\n          icon=\"arrow-left\"\r\n          onPress={() => navigation.goBack()}\r\n          color=\"#FFF\"\r\n        />\r\n      );\r\n    return (\r\n      <IconButton\r\n        icon=\"menu\"\r\n        onPress={() => navigation.openDrawer()}\r\n        color=\"#4E73DF\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const buttonRight = () => {\r\n    return (\r\n      <IconButton\r\n        icon=\"magnify\"\r\n        onPress={() => navigation.navigate('search')}\r\n        color=\"#4E73DF\"\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          title: '',\r\n          headerLeft: () => buttonLeft(),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"exhibits\"\r\n        component={ExhibitsScrn}\r\n        options={{\r\n          title: '',\r\n          headerLeft: () => buttonLeft(),\r\n          headerRight: () => buttonRight(),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"events\"\r\n        component={EventsScreen}\r\n        options={{\r\n          title: '',\r\n          headerLeft: () => buttonLeft(),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"covid\"\r\n        component={CovidScreen}\r\n        options={{\r\n          title: '',\r\n          headerLeft: () => buttonLeft(),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"contact\"\r\n        component={ContactScreen}\r\n        options={{\r\n          title: '',\r\n          headerLeft: () => buttonLeft(),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"comments\"\r\n        component={SugerenceScreen}\r\n        options={{\r\n          title: '',\r\n          headerLeft: () => buttonLeft(),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"donations\"\r\n        component={DonationScreen}\r\n        options={{\r\n          title: '',\r\n          headerLeft: () => buttonLeft(),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"information\"\r\n        component={InfoCard}\r\n        options={{\r\n          title: '',\r\n          headerTransparent: true,\r\n          headerLeft: () => buttonLeft('information'),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"knowMore\"\r\n        component={KnowMoreScreen}\r\n        options={{\r\n          title: '',\r\n          headerTransparent: false,\r\n          headerLeft: () => buttonLeft('knowMore'),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"missionAndVision\"\r\n        component={MissionAndVisionScreen}\r\n        options={{\r\n          title: '',\r\n          headerTransparent: false,\r\n          headerLeft: () => buttonLeft('missionAndVision'),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"search\"\r\n        component={Search}\r\n        options={{\r\n          title: '',\r\n          headerTransparent: true,\r\n          headerLeft: () => buttonLeft('search'),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"FAQs\"\r\n        component={FAQScreen}\r\n        options={{\r\n          title: '',\r\n          headerLeft: () => buttonLeft(),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"WebLinks\"\r\n        component={WebLinksScreen}\r\n        options={{\r\n          title: '',\r\n          headerLeft: () => buttonLeft(),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"InfoCovid\"\r\n        component={CovidInfo}\r\n        options={{\r\n          title: '',\r\n          headerLeft: () => buttonLeft(),\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/navigation/StackNavigation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "Stack",
    "memberof": "src/navigation/StackNavigation.js",
    "static": true,
    "longname": "src/navigation/StackNavigation.js~Stack",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/navigation/StackNavigation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "StackNavigation",
    "memberof": "src/navigation/StackNavigation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/navigation/StackNavigation.js~StackNavigation",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/navigation/StackNavigation.js",
    "importStyle": "StackNavigation",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/navigation/StackNavigation.js",
    "static": true,
    "longname": "src/navigation/StackNavigation.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/navigation/StackNavigation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/screens/ContactScreen.js",
    "content": "import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, Image } from 'react-native';\r\nimport ContactCard from '../components/ContactCard';\r\nimport Colors from '../constants/Colors';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { CONTACTS } from '../dummy-data/contacts';\r\nimport { TouchableOpacity } from 'react-native';\r\nimport { Linking } from 'react-native';\r\n\r\n/**\r\n * Pantalla que muestra información de contacto de los trabajadores de la entidad.\r\n * @param {prop} navigation - Contiene información básica de navegación\r\n * @property {string} contactEmail - Email de un contacto, cambia su valor dependiendo el valor que se seleccione en el componente Picker\r\n * @property {function} setContactEmail - Método de acceso indirecto para modificar la propieadad contactEmail.\r\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\r\n * @property {Array<Object>} CONTACTS - Arreglo que contiene información estática de los contactos Tin Marín.\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @see https://github.com/react-native-picker/picker\r\n * @see https://reactjs.org/docs/hooks-state.html\r\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\r\n */\r\nconst ContactScreen = ({ navigation }) => {\r\n  const [contactEmail, setContactEmail] = useState('');\r\n  return (\r\n    <ScrollView style={styles.container} showsVerticalScrollIndicator={true}>\r\n      <View style={styles.view}>\r\n        <Text style={styles.title}>Información de Contactos</Text>\r\n        <View style={styles.line}></View>\r\n        <View style={styles.containerlogo}>\r\n          <Image\r\n            style={styles.Logo}\r\n            source={require('../assets/logoTinMarin.png')}\r\n          />\r\n        </View>\r\n        <View style={styles.pickerContainer}>\r\n          <Picker\r\n            style={styles.picker}\r\n            mode=\"dropdown\"\r\n            selectedValue={contactEmail}\r\n            onValueChange={(itemValue, itemPosition) => {\r\n              setContactEmail(itemValue);\r\n            }}>\r\n            <Picker.Item label=\"Seleccione un contacto\" value=\"\" />\r\n            {CONTACTS.map((contact, key) => (\r\n              <Picker.Item\r\n                key={key}\r\n                label={contact.charge}\r\n                value={contact.email}\r\n              />\r\n            ))}\r\n          </Picker>\r\n        </View>\r\n        {CONTACTS.map(\r\n          (contact, key) =>\r\n            contact.email === contactEmail && (\r\n              <ContactCard\r\n                key={key}\r\n                charge={contact.charge}\r\n                color={Colors.blueColor}\r\n                name={contact.name}\r\n                email={contact.email}\r\n              />\r\n            ),\r\n        )}\r\n\r\n        <View style={styles.redes_sociales}>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              Linking.openURL('https://www.facebook.com/MuseoTinMarin/')\r\n            }>\r\n            <Image\r\n              style={styles.minilogo}\r\n              source={require('../assets/facebook.png')}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              Linking.openURL('https://www.instagram.com/museotinmarin/')\r\n            }>\r\n            <Image\r\n              style={styles.minilogo}\r\n              source={require('../assets/instagram.png')}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              Linking.openURL('https://twitter.com/MuseoTinMarin')\r\n            }>\r\n            <Image\r\n              style={styles.minilogo}\r\n              source={require('../assets/twitter.png')}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              Linking.openURL(\r\n                'https://www.youtube.com/channel/UCdpMf5DQvZlcjfX4wum4LmQ',\r\n              )\r\n            }>\r\n            <Image\r\n              style={styles.minilogo}\r\n              source={require('../assets/youtube.png')}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  pickerContainer: {\r\n    flexDirection: 'row',\r\n    borderRadius: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#d1d3e2',\r\n    overflow: 'hidden',\r\n  },\r\n  picker: {\r\n    height: 50,\r\n    width: '100%',\r\n    backgroundColor: '#858796',\r\n    color: 'white',\r\n  },\r\n  redes_sociales: {\r\n    marginTop: 10,\r\n    justifyContent: 'center',\r\n    width: 100,\r\n    flexDirection: 'row',\r\n    marginBottom: 50,\r\n  },\r\n  minilogo: {\r\n    margin: 5,\r\n    height: 60,\r\n    width: 60,\r\n  },\r\n  view: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontFamily: 'NunitoSans-Bold',\r\n    fontSize: 30,\r\n    color: '#566573',\r\n  },\r\n  line: {\r\n    height: 1,\r\n    width: '90%',\r\n    backgroundColor: '#D5D8DC',\r\n  },\r\n  Logo: {\r\n    width: 300,\r\n    height: 200,\r\n  },\r\n  containerlogo: {\r\n    alignItems: 'center',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 30,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    padding: 24,\r\n  },\r\n});\r\n\r\nexport default ContactScreen;\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/ContactScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/ContactScreen.js",
    "static": true,
    "longname": "src/screens/ContactScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/ContactScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 114,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "ContactScreen",
    "memberof": "src/screens/ContactScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/ContactScreen.js~ContactScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/ContactScreen.js",
    "importStyle": "ContactScreen",
    "description": "Pantalla que muestra información de contacto de los trabajadores de la entidad.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://github.com/react-native-picker/picker",
      "https://reactjs.org/docs/hooks-state.html"
    ],
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "contactEmail",
        "description": "Email de un contacto, cambia su valor dependiendo el valor que se seleccione en el componente Picker"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setContactEmail",
        "description": "Método de acceso indirecto para modificar la propieadad contactEmail."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      },
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACTS",
        "description": "Arreglo que contiene información estática de los contactos Tin Marín."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    }
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "src/screens/CovidInfo.js",
    "content": "import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { Card, Icon, Text } from 'react-native-elements';\r\nimport Colors from '../constants/Colors';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { coinButton } from '../helpers/audio';\r\n\r\n/**\r\n * Pantalla que muestra los detalles de una recomendación para prevenir COVID-19\r\n * @param {prop} navigation - Contiene información básica de navegación\r\n * @param {prop} route - Recibe parametros importantes para mostrar en pantalla\r\n * @param {string} title - Describe el título de una recomendación.\r\n * @param {Array<string>} description - Contiene un arreglo de párrafos.\r\n * @param {string} image - Contiene la imagen relacionada con la recomendación.\r\n * @param {Array<string>} steps - Contiene un arreglo con los pasos a seguir.\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @see https://reactnavigation.org/docs/route-prop/\r\n * @return {SafeAreaView} Retorna un componente que contiene maquetada la vista\r\n */\r\nconst CovidInfo = ({ navigation, route }) => {\r\n  const { title, description, image, steps } = route.params;\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        <View style={styles.view}>\r\n          <Text style={styles.title}>{title}</Text>\r\n          <View style={styles.line}></View>\r\n          <MainParagraph description={description} />\r\n          <RenderImage url={image} />\r\n          <Text style={styles.subtitle}>Recomendaciones a Seguir</Text>\r\n          <FollowSteps steps={steps} />\r\n          <Footer navigation={navigation} />\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n/**\r\n * Este componente muestra el párrafo principal que contiene la descripción\r\n * de una recomendación.\r\n * Se llama en la pantalla {@link CovidInfo}.\r\n * @param {Array<string>} description - Contiene una lista de tipo string con la descripción\r\n * @return {View} Devuelve una vista con los párrafos iterados en un componente <Text>\r\n */\r\nexport const MainParagraph = ({ description }) => {\r\n  return (\r\n    <View style={styles.view}>\r\n      {description.map((paragraph, index) => (\r\n        <Text key={index} style={styles.paragraph}>{`${paragraph}\\n`}</Text>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n * Este componente se encarga de Renderizar una imagen.\r\n * Se llama en la pantalla {@link CovidInfo}.\r\n * @param {string} url - Contiene la url de una imagen a mostrar.\r\n * @return {View} Retorna una vista con la imagen cargada.\r\n */\r\nexport const RenderImage = ({ url }) => {\r\n  return (\r\n    <View style={{ ...styles.imageContainer }}>\r\n      <Image style={styles.image} source={{ uri: url }} />\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n * Componente que muestra los pasos principales para seguir una recomendación.\r\n * Se llama en la pantalla {@link CovidInfo}.\r\n * @param {Array<string>} steps - contiene una lista de tipo string con la información de recomenadaciones a seguir.\r\n * @return {Card} Devuelve una tarjeta con el listado de recomendaciones a seguir.\r\n */\r\nexport const FollowSteps = ({ steps }) => {\r\n  return (\r\n    <Card containerStyle={{ borderRadius: 15 }}>\r\n      <Card.Title style={styles.card_title}>\r\n        A continuación se muestran las siguientes indicaciones:\r\n      </Card.Title>\r\n      <View>\r\n        {steps.map((step, index) => (\r\n          <View key={index}>\r\n            <Text style={{ ...styles.paragraph }}>{`\\u2022 ${step}`}</Text>\r\n            <Card.Divider />\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </Card>\r\n  );\r\n};\r\n\r\n/**\r\n * Componente que muestra un pie de página.\r\n * Se llama en la pantalla {@link CovidInfo}.\r\n * @param {prop} navigation\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @return {View} Devuelve una vista con Enlaces\r\n */\r\nexport const Footer = ({ navigation }) => {\r\n  return (\r\n    <View style={styles.footer}>\r\n      <FooterLinks\r\n        text=\"Preguntas Frecuentes\"\r\n        name=\"question-circle\"\r\n        color=\"darkturquoise\"\r\n        size={75}\r\n        navigation={navigation}\r\n        screenRouteName=\"FAQs\"\r\n      />\r\n      <FooterLinks\r\n        text=\"Sitios de Interes\"\r\n        name=\"exclamation-circle\"\r\n        color=\"green\"\r\n        size={75}\r\n        navigation={navigation}\r\n        screenRouteName=\"WebLinks\"\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n * Componente para mostrar un Enlace del pie de página que al presionarlo dirige a otra pantalla.\r\n * Se llama en el componente {@link Footer}.\r\n * @param {string} name - Nombre del Icono a mostrar.\r\n * @param {string} color - Color del Icono a mostrar.\r\n * @param {number} size - Tamaño del Icono.\r\n * @param {string} text - Texto a mostrar del enlace.\r\n * @param {string} screenRouteName - Nombre de la pantalla a la cuál se navegará.\r\n * @param {prop} navigation\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @return {TouchableOpacity} Devuelve una vista presionable\r\n */\r\nexport const FooterLinks = ({\r\n  navigation,\r\n  name,\r\n  color,\r\n  size,\r\n  text,\r\n  screenRouteName,\r\n}) => {\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ borderRadius: 15 }}\r\n      onPressIn={coinButton}\r\n      onPress={() => {\r\n        navigation.navigate(screenRouteName);\r\n      }}>\r\n      <View style={styles.footer_column}>\r\n        <Icon\r\n          name={name}\r\n          type=\"font-awesome-5\"\r\n          solid\r\n          color={color}\r\n          size={size}\r\n        />\r\n        <Text style={styles.footer_links}>{text}</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default CovidInfo;\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  view: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginHorizontal: 10,\r\n  },\r\n  title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginTop: 20,\r\n    fontSize: 30,\r\n    color: '#566573',\r\n  },\r\n  paragraph: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginVertical: 10,\r\n    textAlign: 'justify',\r\n    marginBottom: 10,\r\n    fontSize: 15,\r\n  },\r\n  imageContainer: {\r\n    width: '95%',\r\n    height: 200,\r\n  },\r\n  image: { width: '100%', height: 200, borderRadius: 15 },\r\n  subtitle: {\r\n    textAlign: 'center',\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginTop: 20,\r\n    fontSize: 25,\r\n    color: 'red',\r\n    fontWeight: 'bold',\r\n  },\r\n  subtitleView: {\r\n    flexDirection: 'row',\r\n    paddingLeft: 10,\r\n    paddingTop: 5,\r\n  },\r\n  card_title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    textAlign: 'justify',\r\n    backgroundColor: Colors.primaryColor,\r\n    color: 'white',\r\n    marginTop: -15,\r\n    marginHorizontal: -16,\r\n    padding: 15,\r\n    borderTopLeftRadius: 15,\r\n    borderTopRightRadius: 15,\r\n  },\r\n  footer: {\r\n    marginVertical: 20,\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  footer_column: {\r\n    width: Dimensions.get('window').width / 2,\r\n    marginHorizontal: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  footer_links: {\r\n    // padding: 10,\r\n    fontSize: Dimensions.get('window').width > 400 ? 15 : 12,\r\n    color: Colors.primaryColor,\r\n  },\r\n  line: {\r\n    height: 1,\r\n    width: '90%',\r\n    backgroundColor: '#D5D8DC',\r\n  },\r\n  ul: {\r\n    width: 5,\r\n    height: 5,\r\n    backgroundColor: 'black',\r\n    borderRadius: 15,\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/CovidInfo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "MainParagraph",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~MainParagraph",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "{MainParagraph}",
    "description": "Este componente muestra el párrafo principal que contiene la descripción\nde una recomendación.\nSe llama en la pantalla {@link CovidInfo}.",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "Contiene una lista de tipo string con la descripción"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "View"
      ],
      "spread": false,
      "description": "Devuelve una vista con los párrafos iterados en un componente <Text>"
    }
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "RenderImage",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~RenderImage",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "{RenderImage}",
    "description": "Este componente se encarga de Renderizar una imagen.\nSe llama en la pantalla {@link CovidInfo}.",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la url de una imagen a mostrar."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "View"
      ],
      "spread": false,
      "description": "Retorna una vista con la imagen cargada."
    }
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "FollowSteps",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~FollowSteps",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "{FollowSteps}",
    "description": "Componente que muestra los pasos principales para seguir una recomendación.\nSe llama en la pantalla {@link CovidInfo}.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "steps",
        "description": "contiene una lista de tipo string con la información de recomenadaciones a seguir."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Card"
      ],
      "spread": false,
      "description": "Devuelve una tarjeta con el listado de recomendaciones a seguir."
    }
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "Footer",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~Footer",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "{Footer}",
    "description": "Componente que muestra un pie de página.\nSe llama en la pantalla {@link CovidInfo}.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/"
    ],
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "View"
      ],
      "spread": false,
      "description": "Devuelve una vista con Enlaces"
    }
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "FooterLinks",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~FooterLinks",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "{FooterLinks}",
    "description": "Componente para mostrar un Enlace del pie de página que al presionarlo dirige a otra pantalla.\nSe llama en el componente {@link Footer}.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/"
    ],
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Nombre del Icono a mostrar."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "Color del Icono a mostrar."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Tamaño del Icono."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "Texto a mostrar del enlace."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "screenRouteName",
        "description": "Nombre de la pantalla a la cuál se navegará."
      },
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TouchableOpacity"
      ],
      "spread": false,
      "description": "Devuelve una vista presionable"
    }
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/CovidInfo.js",
    "static": true,
    "longname": "src/screens/CovidInfo.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 178,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "CovidInfo",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~CovidInfo",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "CovidInfo",
    "description": "Pantalla que muestra los detalles de una recomendación para prevenir COVID-19",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactnavigation.org/docs/route-prop/"
    ],
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      },
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Recibe parametros importantes para mostrar en pantalla"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Describe el título de una recomendación."
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "Contiene un arreglo de párrafos."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": "Contiene la imagen relacionada con la recomendación."
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "steps",
        "description": "Contiene un arreglo con los pasos a seguir."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Retorna un componente que contiene maquetada la vista"
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "src/screens/CovidScreen.js",
    "content": "import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  SafeAreaView,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { getAllCovidRecommendations } from '../api/covid';\r\nimport { Text } from 'react-native-elements';\r\nimport GenericCard from '../components/GenericCard';\r\nimport Colors from '../constants/Colors';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { size } from 'lodash';\r\n\r\n/**\r\n * Pantalla que muestra una lista de tarjetas sobre recomendaciones sobre el COVID-19\r\n * @param {prop} navigation - Contiene información básica de navegación\r\n * @property {Array<Object>} covid - Lista que contiene Objetos con estructura de una Recomendación Covid-19.\r\n * @property {function} setCovid - Método de acceso indirecto para modificar la propieadad covid.\r\n * @property {boolean} loading - Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene.\r\n * @property {function} setLoading - Método de acceso indirecto para modificar la propieadad loading.\r\n * @property {boolean} swapColor - Variable auxiliar para cambiar color de tarjetas cada posición: (índice mod 2).\r\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\r\n * @property {Promise} getAllCovidRecommendations - {@link getAllCovidRecommendations} | Promesa que devuelve la información dependiendo la respuesta del servidor.\r\n * @property {function} size - Función de la librería lodash | Devuelve el tamaño de una colección.\r\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @see https://reactjs.org/docs/hooks-effect.html\r\n * @see https://lodash.com/docs/4.17.15#size\r\n * @see https://reactjs.org/docs/hooks-state.html\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\n * @return {SafeAreaView} Regresa una layout con la maquetación de la pantalla\r\n */\r\nconst CovidScreen = ({ navigation }) => {\r\n  // const [covidInfo, setCovidInfo] = useState(null);\r\n  const [covid, setCovid] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  let swapColor = true;\r\n\r\n  useEffect(() => {\r\n    getAllCovidRecommendations().then((response) => {\r\n      // console.log(response);\r\n      setCovid(response);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        {loading ? (\r\n          <ActivityIndicator\r\n            style={{\r\n              marginTop: 200,\r\n            }}\r\n            size=\"large\"\r\n            color=\"#0000ff\"\r\n          />\r\n        ) : size(covid) == 0 ? (\r\n          <Text style={styles.text}>No se encontraron Recomendaciones</Text>\r\n        ) : (\r\n          <View style={styles.view}>\r\n            <Text style={styles.title}>Recomendaciones para el Covid-19</Text>\r\n            <View style={styles.line}></View>\r\n            <CovidList\r\n              covidRecs={covid}\r\n              navigation={navigation}\r\n              swapColor={swapColor}\r\n            />\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n/**\r\n * Componente que se utiliza para iterar las tarjetas\r\n * @param {prop} navigation\r\n * @param {Array<string>} covidRecs - Contiene la información del estado covid.\r\n * @param {boolean} swapColor - Variable de control para intercambiar color.\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @return {GenericCard} Retorna una lista de tarjetas de tipo {@link GenericCard}\r\n */\r\nconst CovidList = ({ navigation, covidRecs, swapColor }) => {\r\n  return covidRecs.map((covid, index) => {\r\n    if (index % 2 === 0) swapColor = !swapColor;\r\n    return (\r\n      <GenericCard\r\n        key={index}\r\n        id={covid._id}\r\n        title={covid.title}\r\n        description={covid.description}\r\n        imageURL={covid.image}\r\n        steps={covid.steps}\r\n        color={swapColor ? Colors.green : Colors.magenta}\r\n        textBtn=\"Saber Más\"\r\n        navigation={navigation}\r\n        screenName=\"InfoCovid\"\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\nexport default CovidScreen;\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  view: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginHorizontal: 10,\r\n  },\r\n  title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginTop: 20,\r\n    fontSize: 30,\r\n    color: '#566573',\r\n    textAlign: 'center',\r\n  },\r\n\r\n  line: {\r\n    height: 1,\r\n    width: '90%',\r\n    backgroundColor: '#D5D8DC',\r\n  },\r\n  text: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    color: 'gray',\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/CovidScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "CovidList",
    "memberof": "src/screens/CovidScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidScreen.js~CovidList",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/CovidScreen.js",
    "importStyle": null,
    "description": "Componente que se utiliza para iterar las tarjetas",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/"
    ],
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "covidRecs",
        "description": "Contiene la información del estado covid."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "swapColor",
        "description": "Variable de control para intercambiar color."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "GenericCard"
      ],
      "spread": false,
      "description": "Retorna una lista de tarjetas de tipo {@link GenericCard}"
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/CovidScreen.js",
    "static": true,
    "longname": "src/screens/CovidScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/CovidScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 111,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "CovidScreen",
    "memberof": "src/screens/CovidScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidScreen.js~CovidScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidScreen.js",
    "importStyle": "CovidScreen",
    "description": "Pantalla que muestra una lista de tarjetas sobre recomendaciones sobre el COVID-19",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactjs.org/docs/hooks-effect.html",
      "https://lodash.com/docs/4.17.15#size",
      "https://reactjs.org/docs/hooks-state.html",
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
    ],
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "covid",
        "description": "Lista que contiene Objetos con estructura de una Recomendación Covid-19."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setCovid",
        "description": "Método de acceso indirecto para modificar la propieadad covid."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "loading",
        "description": "Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setLoading",
        "description": "Método de acceso indirecto para modificar la propieadad loading."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "swapColor",
        "description": "Variable auxiliar para cambiar color de tarjetas cada posición: (índice mod 2)."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getAllCovidRecommendations",
        "description": "{@link getAllCovidRecommendations} | Promesa que devuelve la información dependiendo la respuesta del servidor."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Función de la librería lodash | Devuelve el tamaño de una colección."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Regresa una layout con la maquetación de la pantalla"
    }
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/screens/DonationScreen.js",
    "content": "import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst DonationScreen = () => {\r\n  return (\r\n    <View>\r\n      <Text>Donation Screen</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DonationScreen;\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/DonationScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/DonationScreen.js",
    "static": true,
    "longname": "src/screens/DonationScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/DonationScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 20,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "DonationScreen",
    "memberof": "src/screens/DonationScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/DonationScreen.js~DonationScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/DonationScreen.js",
    "importStyle": "DonationScreen",
    "description": "",
    "lineNumber": 7,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "file",
    "name": "src/screens/EventsScreen.js",
    "content": "import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst EventsScreen = () => {\r\n  return (\r\n    <View>\r\n      <Text>Pantalla eventos</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default EventsScreen;\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/EventsScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/EventsScreen.js",
    "static": true,
    "longname": "src/screens/EventsScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/EventsScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 20,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "EventsScreen",
    "memberof": "src/screens/EventsScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/EventsScreen.js~EventsScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/EventsScreen.js",
    "importStyle": "EventsScreen",
    "description": "",
    "lineNumber": 7,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "src/screens/ExhibitsScreen.js",
    "content": "import { map } from 'lodash';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { getAllExhibitions } from '../api/exhibitions';\r\nimport Card from '../components/Card';\r\nimport Colors from '../constants/Colors';\r\nimport { size } from 'lodash';\r\n\r\n/**\r\n * Pantalla que muestra una lista de tarjetas sobre las Exhibiciones\r\n * @param {prop} navigation - Contiene información básica de navegación\r\n * @property {Array<Object>} exhibitions - Lista que contiene Objetos con estructura de una Recomendación Covid-19.\r\n * @property {function} setExhibitions - Método de acceso indirecto para modificar la propieadad covid.\r\n * @property {boolean} loading - Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene.\r\n * @property {function} setLoading - Método de acceso indirecto para modificar la propieadad loading.\r\n * @property {boolean} swapColor - Variable auxiliar para cambiar color de tarjetas cada posición: (índice mod 2).\r\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\r\n * @property {Promise} getAllExhibitions - {@link getAllExhibitions} | Promesa que devuelve la información dependiendo la respuesta del servidor.\r\n * @property {function} size - Función de la librería lodash | Devuelve el tamaño de una colección.\r\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @see https://reactjs.org/docs/hooks-effect.html\r\n * @see https://lodash.com/docs/4.17.15#size\r\n * @see https://reactjs.org/docs/hooks-state.html\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\r\n */\r\nconst ExhibitsScreen = ({ navigation }) => {\r\n  const [exhibitions, setExhibitions] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  let swapColor = true;\r\n\r\n  useEffect(() => {\r\n    getAllExhibitions().then((response) => {\r\n      setExhibitions(response);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      {loading ? (\r\n        <ActivityIndicator\r\n          style={{\r\n            marginTop: 200,\r\n          }}\r\n          size=\"large\"\r\n          color=\"#0000ff\"\r\n        />\r\n      ) : size(exhibitions) == 0 ? (\r\n        <Text style={styles.text}>No se encontraron Exhibiciones</Text>\r\n      ) : (\r\n        <View style={styles.view}>\r\n          <Text style={styles.title}>Exhibiciones</Text>\r\n          <View style={styles.line}></View>\r\n          {map(exhibitions, (exhibition, index) => {\r\n            if (index % 2 === 0) {\r\n              swapColor = !swapColor;\r\n            }\r\n            return (\r\n              <Card\r\n                key={exhibition._id}\r\n                index={index}\r\n                textBtn=\"Conócela\"\r\n                color={swapColor ? Colors.green : Colors.magenta}\r\n                exhibition={exhibition}\r\n                navigation={navigation}\r\n              />\r\n            );\r\n          })}\r\n        </View>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\n/**\r\n *@ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  view: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginTop: 20,\r\n    fontSize: 30,\r\n    color: '#566573',\r\n  },\r\n  line: {\r\n    height: 1,\r\n    width: '90%',\r\n    backgroundColor: '#D5D8DC',\r\n  },\r\n  text: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    color: 'gray',\r\n  },\r\n});\r\n\r\nexport default ExhibitsScreen;\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/ExhibitsScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/ExhibitsScreen.js",
    "static": true,
    "longname": "src/screens/ExhibitsScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/ExhibitsScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 86,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "ExhibitsScreen",
    "memberof": "src/screens/ExhibitsScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/ExhibitsScreen.js~ExhibitsScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/ExhibitsScreen.js",
    "importStyle": "ExhibitsScreen",
    "description": "Pantalla que muestra una lista de tarjetas sobre las Exhibiciones",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactjs.org/docs/hooks-effect.html",
      "https://lodash.com/docs/4.17.15#size",
      "https://reactjs.org/docs/hooks-state.html",
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
    ],
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "exhibitions",
        "description": "Lista que contiene Objetos con estructura de una Recomendación Covid-19."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setExhibitions",
        "description": "Método de acceso indirecto para modificar la propieadad covid."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "loading",
        "description": "Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setLoading",
        "description": "Método de acceso indirecto para modificar la propieadad loading."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "swapColor",
        "description": "Variable auxiliar para cambiar color de tarjetas cada posición: (índice mod 2)."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getAllExhibitions",
        "description": "{@link getAllExhibitions} | Promesa que devuelve la información dependiendo la respuesta del servidor."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Función de la librería lodash | Devuelve el tamaño de una colección."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    }
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "src/screens/FAQScreen.js",
    "content": "import { map } from 'lodash';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  SafeAreaView,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { getAllFAQs } from '../api/faqs';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { Card } from 'react-native-elements';\r\nimport Colors from '../constants/Colors';\r\nimport { size } from 'lodash';\r\n\r\n/**\r\n * Pantalla que muestra una lista de tarjetas con preguntas frecuentes.\r\n * @param {prop} navigation - Contiene información básica de navegación\r\n * @property {Array<Object>} faqs - Lista que contiene Objetos con estructura de una Pregunta Frecuente.\r\n * @property {function} setFaqs - Método de acceso indirecto para modificar la propieadad faqs.\r\n * @property {boolean} loading - Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene.\r\n * @property {function} setLoading - Método de acceso indirecto para modificar la propieadad loading.\r\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\r\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\r\n * @property {Promise} getAllFAQs - {@link getAllFAQs} | Promesa que devuelve la información dependiendo la respuesta del servidor.\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @see https://reactjs.org/docs/hooks-effect.html\r\n * @see https://reactjs.org/docs/hooks-state.html\r\n * @see @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\n * @return {SafeAreaView} Regreesa una layout con la maquetación de la pantalla\r\n */\r\nconst FAQScreen = ({ navigation }) => {\r\n  const [faqs, setFaqs] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getAllFAQs().then((response) => {\r\n      setFaqs(response);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        {loading ? (\r\n          <ActivityIndicator\r\n            style={{\r\n              marginTop: 200,\r\n            }}\r\n            size=\"large\"\r\n            color=\"#0000ff\"\r\n          />\r\n        ) : size(faqs) == 0 ? (\r\n          <Text style={styles.text}>\r\n            No se encontraron Preguntas Frecuentes\r\n          </Text>\r\n        ) : (\r\n          <View style={styles.view}>\r\n            <Text style={styles.title}>Preguntas Frecuentes</Text>\r\n            <View style={styles.line}></View>\r\n            {faqs.map((faq, index) => {\r\n              return (\r\n                <Card key={index} containerStyle={{ borderRadius: 15 }}>\r\n                  <Card.Title style={styles.card_title}>\r\n                    {faq.question}\r\n                  </Card.Title>\r\n                  <View>\r\n                    <Text style={styles.paragraph}>{faq.answer}</Text>\r\n                  </View>\r\n                </Card>\r\n              );\r\n            })}\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  view: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginHorizontal: 10,\r\n    marginBottom: 30,\r\n  },\r\n  title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n    fontSize: 30,\r\n    color: '#566573',\r\n  },\r\n  paragraph: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    // marginVertical: 10,\r\n    textAlign: 'justify',\r\n    marginBottom: 10,\r\n    fontSize: 15,\r\n  },\r\n  card_title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    textAlign: 'justify',\r\n    backgroundColor: Colors.primaryColor,\r\n    color: 'white',\r\n    marginTop: -15,\r\n    marginHorizontal: -16,\r\n    padding: 15,\r\n    borderTopLeftRadius: 15,\r\n    borderTopRightRadius: 15,\r\n  },\r\n  line: {\r\n    height: 1,\r\n    width: '90%',\r\n    backgroundColor: '#D5D8DC',\r\n  },\r\n  text: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    color: 'gray',\r\n  },\r\n});\r\nexport default FAQScreen;\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/FAQScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/FAQScreen.js",
    "static": true,
    "longname": "src/screens/FAQScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/FAQScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 84,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "function",
    "name": "FAQScreen",
    "memberof": "src/screens/FAQScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/FAQScreen.js~FAQScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/FAQScreen.js",
    "importStyle": "FAQScreen",
    "description": "Pantalla que muestra una lista de tarjetas con preguntas frecuentes.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactjs.org/docs/hooks-effect.html",
      "https://reactjs.org/docs/hooks-state.html",
      ""
    ],
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "faqs",
        "description": "Lista que contiene Objetos con estructura de una Pregunta Frecuente."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setFaqs",
        "description": "Método de acceso indirecto para modificar la propieadad faqs."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "loading",
        "description": "Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setLoading",
        "description": "Método de acceso indirecto para modificar la propieadad loading."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getAllFAQs",
        "description": "{@link getAllFAQs} | Promesa que devuelve la información dependiendo la respuesta del servidor."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Regreesa una layout con la maquetación de la pantalla"
    }
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "src/screens/HomeScreen.js",
    "content": "import { noConflict } from 'lodash';\r\nimport React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ImageBackground,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport Covid from '../assets/Covid.jpeg';\r\nimport FAQs from '../assets/FAQs.jpeg';\r\nimport WebLinks from '../assets/WebLinks.jpg';\r\nimport Sugerencias from '../assets/Sugerencias.png';\r\nimport Exhibicion from '../assets/Exhibicion.jpg';\r\nimport {\r\n  playButtonPress,\r\n  heyListenButton,\r\n  wowButton,\r\n  msnButton,\r\n  catcButton,\r\n  ohhButton,\r\n} from '../helpers/audio';\r\nimport ConocenosMas from '../assets/ConocenosMas.jpg';\r\n\r\n/**\r\n * Pantalla Principal que contiene una lista de tarjetas con los accesos directos de los diferentes\r\n * módulos que posee la aplicación.\r\n * @param {prop} navigation - Contiene información básica de navegación\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla\r\n */\r\nconst HomeScreen = ({ navigation }) => {\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.view}>\r\n        <TouchableOpacity onPress={playButtonPress}>\r\n          <Text style={styles.title}>Menu Principal</Text>\r\n        </TouchableOpacity>\r\n\r\n        <View style={styles.line}></View>\r\n\r\n        <TouchableOpacity\r\n          onPressIn={playButtonPress}\r\n          onPress={() => {\r\n            navigation.navigate('exhibits');\r\n          }}\r\n          style={styles.cardContainer}>\r\n          <ImageBackground\r\n            imageStyle={{ opacity: 0.5, ...styles.image }}\r\n            source={Exhibicion}\r\n            style={styles.card}\r\n            borderRadius={10}>\r\n            <View style={styles.textContainer}>\r\n              <Text style={styles.text}>Exhibiciones</Text>\r\n              <Text style={styles.text2}>\r\n                Ven y conoce todas nuestras exhibiciones disponibles para que\r\n                las puedas visitar !\r\n              </Text>\r\n            </View>\r\n          </ImageBackground>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          onPressIn={heyListenButton}\r\n          onPress={() => {\r\n            navigation.navigate('covid');\r\n          }}\r\n          style={styles.cardContainer}>\r\n          <ImageBackground\r\n            imageStyle={{ opacity: 0.5, ...styles.image }}\r\n            source={Covid}\r\n            style={styles.card}\r\n            borderRadius={10}>\r\n            <View style={styles.textContainer}>\r\n              <Text style={styles.text}>Recomendaciones Covid-19</Text>\r\n              <Text style={styles.text2}>\r\n                Toma en cuenta las siguientes recomendaciones al visitarnos!\r\n              </Text>\r\n            </View>\r\n          </ImageBackground>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          onPressIn={ohhButton}\r\n          onPress={() => {\r\n            navigation.navigate('knowMore');\r\n          }}\r\n          style={styles.cardContainer}>\r\n          <ImageBackground\r\n            imageStyle={{ opacity: 0.5, ...styles.image }}\r\n            source={ConocenosMas}\r\n            style={styles.card}\r\n            borderRadius={10}>\r\n            <View style={styles.textContainer}>\r\n              <Text style={styles.text}>Conocenos Más</Text>\r\n              <Text style={styles.text2}>\r\n                Aqui puedes encontrar informacion de contacto, estamos a la\r\n                orden!\r\n              </Text>\r\n            </View>\r\n          </ImageBackground>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          onPressIn={msnButton}\r\n          onPress={() => {\r\n            navigation.navigate('comments');\r\n          }}\r\n          style={styles.cardContainer}>\r\n          <ImageBackground\r\n            imageStyle={{ opacity: 0.5, ...styles.image }}\r\n            source={Sugerencias}\r\n            style={styles.card}\r\n            borderRadius={10}>\r\n            <View style={styles.textContainer}>\r\n              <Text style={styles.text}>Sugerencias</Text>\r\n              <Text style={styles.text2}>\r\n                Para seguir mejorando, puedes dejarnos cualquier duda o\r\n                inquietud!\r\n              </Text>\r\n            </View>\r\n          </ImageBackground>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          onPressIn={catcButton}\r\n          onPress={() => {\r\n            navigation.navigate('FAQs');\r\n          }}\r\n          style={styles.cardContainer}>\r\n          <ImageBackground\r\n            imageStyle={{ opacity: 0.5, ...styles.image }}\r\n            source={FAQs}\r\n            style={styles.card}\r\n            borderRadius={10}>\r\n            <View style={styles.textContainer}>\r\n              <Text style={styles.text}>Preguntas Frecuentes</Text>\r\n              <Text style={styles.text2}>\r\n                Por si tienes alguna consulta para resolver de forma rápida!\r\n              </Text>\r\n            </View>\r\n          </ImageBackground>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          onPressIn={wowButton}\r\n          onPress={() => {\r\n            navigation.navigate('WebLinks');\r\n          }}\r\n          style={{ ...styles.cardContainer, marginBottom: 30 }}>\r\n          <ImageBackground\r\n            imageStyle={{ opacity: 0.5, ...styles.image }}\r\n            source={WebLinks}\r\n            style={styles.card}\r\n            borderRadius={10}>\r\n            <View style={styles.textContainer}>\r\n              <Text style={styles.text}>Sitios de Interés</Text>\r\n              <Text style={styles.text2}>\r\n                Si deseas profundizar un poco más en otros temas relevantes!\r\n              </Text>\r\n            </View>\r\n          </ImageBackground>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: '100%',\r\n  },\r\n  view: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginTop: 20,\r\n    fontSize: 30,\r\n    color: '#566573',\r\n    fontWeight: 'bold',\r\n  },\r\n  line: {\r\n    height: 1,\r\n    width: '90%',\r\n    backgroundColor: '#D5D8DC',\r\n  },\r\n  card: {\r\n    width: '90%',\r\n    height: 200,\r\n    backgroundColor: 'rgb(0,0,0)',\r\n    borderRadius: 10,\r\n  },\r\n\r\n  cardContainer: {\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    marginTop: 40,\r\n  },\r\n  textContainer: {\r\n    marginLeft: 20,\r\n    marginTop: 20,\r\n  },\r\n  text: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    color: 'white',\r\n    fontSize: 25,\r\n  },\r\n  text2: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    color: 'white',\r\n    fontSize: 15,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/HomeScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/HomeScreen.js",
    "static": true,
    "longname": "src/screens/HomeScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/HomeScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 173,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "HomeScreen",
    "memberof": "src/screens/HomeScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/HomeScreen.js~HomeScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/HomeScreen.js",
    "importStyle": "HomeScreen",
    "description": "Pantalla Principal que contiene una lista de tarjetas con los accesos directos de los diferentes\nmódulos que posee la aplicación.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/"
    ],
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla"
    }
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "src/screens/InfoCard.js",
    "content": "import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, SafeAreaView, View, Image } from 'react-native';\r\nimport { IconButton, Text, Title } from 'react-native-paper';\r\nimport { getExhibitionById } from '../api/exhibitions';\r\nimport ModalBody from '../components/ModalBody';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { map, size } from 'lodash';\r\n\r\n/**\r\n * Pantalla que muestra los detalles de una Exhibición.\r\n * @param {prop} route - Recibe parametros importantes para mostrar en pantalla\r\n * @param {string} _id - ID asociado a una Exhibición.\r\n * @property {Object} exhibition - Objeto que contiene la estructura de una Exhibición.\r\n * @property {function} setExhibition - Método de acceso indirecto para modificar la propieadad exhibition.\r\n * @property {boolean} visible - Variable auxiliar para controlar la visibilidad de un componente <Modal>.\r\n * @property {function} setVisible - Método de acceso indirecto para modificar la propieadad visible.\r\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\r\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\r\n * @property {Promise} getExhibitionById - {@link getExhibitionById} | Promesa que devuelve la información dependiendo la respuesta del servidor.\r\n * @property {function} size - Función de la librería lodash | Devuelve el tamaño de una colección.\r\n * @property {function} map - Función de la librería lodash | Crea un arreglo de valores a partir de cada elemento de una colección.\r\n * @listens {onPress} | El método showModal se dispara cuando ocurre este evento en un componente <ModalButton>.\r\n * @see https://lodash.com/docs/4.17.15#size\r\n * @see https://reactjs.org/docs/hooks-state.html\r\n * @see https://reactnavigation.org/docs/route-prop/\r\n * @see https://lodash.com/docs/4.17.15#map\r\n * @return {SafeAreaView} Retorna un componente que contiene maquetada la vista\r\n */\r\nconst InfoCard = ({ route }) => {\r\n  const { _id } = route.params;\r\n  const [visible, setVisible] = useState(false);\r\n  const [exhibition, setExhibition] = useState(null);\r\n\r\n  const showModal = () => setVisible(!visible);\r\n\r\n  useEffect(() => {\r\n    getExhibitionById(_id).then((response) => {\r\n      setExhibition(response);\r\n    });\r\n  }, []);\r\n\r\n  if (!exhibition) return null;\r\n\r\n  const [imageURL] = exhibition.images;\r\n  const [logoURL] = exhibition.sponsorLogo;\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        <InfoImage path={imageURL} />\r\n        <InfoModal setVisible={setVisible} />\r\n        <InfoTitle exhibition={exhibition} />\r\n        <Text style={styles.overview}>{exhibition.description}</Text>\r\n        {logoURL && <InfoSponsor url={logoURL} />}\r\n        <InfoFooter exhibition={exhibition} />\r\n      </ScrollView>\r\n      <ModalBody\r\n        visible={visible}\r\n        showModal={showModal}\r\n        curiousInfo={exhibition.curiousInfo}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n\r\n/**\r\n *@ignore\r\n */\r\nconst InfoImage = ({ path }) => {\r\n  return (\r\n    <View style={styles.viewPoster}>\r\n      <Image style={styles.poster} source={{ uri: path }} />\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n *@ignore\r\n */\r\nconst InfoModal = ({ setVisible }) => {\r\n  return (\r\n    <View style={styles.viewModal}>\r\n      <IconButton\r\n        icon=\"information-variant\"\r\n        size={30}\r\n        color=\"#000\"\r\n        style={styles.info}\r\n        onPress={() => setVisible(true)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n *@ignore\r\n */\r\nconst InfoTitle = ({ exhibition }) => {\r\n  return (\r\n    <View style={styles.viewInfo}>\r\n      <Title style={{ color: '#F29F05', fontWeight: 'bold', fontSize: 23 }}>\r\n        {exhibition.name}\r\n      </Title>\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n *@ignore\r\n */\r\nconst InfoSponsor = ({ url }) => {\r\n  return (\r\n    <View style={styles.viewSponsor}>\r\n      <Title\r\n        style={{\r\n          color: 'black',\r\n          fontSize: 17,\r\n          fontWeight: 'bold',\r\n          marginHorizontal: 30,\r\n          marginTop: 5,\r\n        }}>\r\n        Patrocina:{' '}\r\n      </Title>\r\n      <Image source={{ uri: url }} style={styles.imgSponsor} />\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n *@ignore\r\n */\r\nconst InfoFooter = ({ exhibition }) => {\r\n  const {\r\n    minimumAge,\r\n    maximumAge,\r\n    educationArea,\r\n    duration,\r\n    capacity,\r\n  } = exhibition;\r\n  return (\r\n    <View style={styles.viewFooter}>\r\n      <FooterItem\r\n        title=\"Educación:\"\r\n        desc={educationArea}\r\n        icon=\"book-open-variant\"\r\n      />\r\n      <FooterItem\r\n        title=\"Edades:\"\r\n        desc={`${minimumAge} a ${maximumAge} años`}\r\n        icon=\"human-male-boy\"\r\n      />\r\n      <FooterItem\r\n        title=\"Duración:\"\r\n        desc={duration == 1 ? `${duration} minuto` : `${duration} minutos`}\r\n        icon=\"clock-time-three-outline\"\r\n      />\r\n      <FooterItem\r\n        title=\"Capacidad:\"\r\n        desc={capacity == 1 ? `${capacity} niño` : `${capacity} niños`}\r\n        icon=\"account-group\"\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n *@ignore\r\n */\r\nconst FooterItem = ({ title, desc, icon }) => {\r\n  return (\r\n    <View>\r\n      <IconButton\r\n        icon={icon}\r\n        size={30}\r\n        color=\"#F87311\"\r\n        style={styles.footerItem}\r\n      />\r\n      <Text style={[styles.textItem, { fontWeight: 'bold' }]}>{title}</Text>\r\n      {Array.isArray(desc) ? (\r\n        map(desc, (d, index) => (\r\n          <Text key={index} style={styles.textItem}>\r\n            {d}\r\n            {index !== size(desc) - 1 && ', '}\r\n          </Text>\r\n        ))\r\n      ) : (\r\n        <Text style={styles.textItem}>{desc}</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n *@ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  viewPoster: {\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 10,\r\n    },\r\n    shadowOpacity: 1,\r\n    shadowRadius: 10,\r\n  },\r\n  poster: {\r\n    width: '100%',\r\n    height: 500,\r\n    borderBottomLeftRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n  },\r\n  info: {\r\n    backgroundColor: '#fff',\r\n    marginTop: -40,\r\n    marginRight: 30,\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 100,\r\n    borderColor: '#000',\r\n    borderWidth: 0.15,\r\n  },\r\n  viewInfo: {\r\n    marginHorizontal: 30,\r\n  },\r\n  viewRating: {\r\n    marginHorizontal: 30,\r\n    marginTop: 10,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  viewModal: {\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n  },\r\n  viewFooter: {\r\n    marginVertical: 20,\r\n    marginHorizontal: 20,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  footerItem: {\r\n    borderRadius: 100,\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: '#fff',\r\n    borderColor: '#F87311',\r\n    borderWidth: 2,\r\n  },\r\n  textItem: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    textAlign: 'center',\r\n    fontSize: 13,\r\n    color: '#000',\r\n  },\r\n  overview: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginHorizontal: 30,\r\n    marginTop: 20,\r\n    textAlign: 'justify',\r\n    color: '#929292',\r\n    fontSize: 16,\r\n  },\r\n  imgSponsor: {\r\n    width: 160,\r\n    height: 100,\r\n    alignSelf: 'center',\r\n    marginTop: 4,\r\n    marginBottom: 2,\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/InfoCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "InfoImage",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoImage",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 71,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *}"
        ],
        "defaultRaw": {
          "path": null
        },
        "defaultValue": "{\"path\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "InfoModal",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoModal",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 82,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"setVisible\": *}"
        ],
        "defaultRaw": {
          "setVisible": null
        },
        "defaultValue": "{\"setVisible\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "InfoTitle",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoTitle",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 99,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"exhibition\": *}"
        ],
        "defaultRaw": {
          "exhibition": null
        },
        "defaultValue": "{\"exhibition\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "InfoSponsor",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoSponsor",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 112,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"url\": *}"
        ],
        "defaultRaw": {
          "url": null
        },
        "defaultValue": "{\"url\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "function",
    "name": "InfoFooter",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoFooter",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 133,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"exhibition\": *}"
        ],
        "defaultRaw": {
          "exhibition": null
        },
        "defaultValue": "{\"exhibition\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "FooterItem",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~FooterItem",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 170,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"title\": *, \"desc\": *, \"icon\": *}"
        ],
        "defaultRaw": {
          "title": null,
          "desc": null,
          "icon": null
        },
        "defaultValue": "{\"title\":null,\"desc\":null,\"icon\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/InfoCard.js",
    "static": true,
    "longname": "src/screens/InfoCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 197,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "InfoCard",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": "InfoCard",
    "description": "Pantalla que muestra los detalles de una Exhibición.",
    "see": [
      "https://lodash.com/docs/4.17.15#size",
      "https://reactjs.org/docs/hooks-state.html",
      "https://reactnavigation.org/docs/route-prop/",
      "https://lodash.com/docs/4.17.15#map"
    ],
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Recibe parametros importantes para mostrar en pantalla"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "_id",
        "description": "ID asociado a una Exhibición."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "exhibition",
        "description": "Objeto que contiene la estructura de una Exhibición."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setExhibition",
        "description": "Método de acceso indirecto para modificar la propieadad exhibition."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": "Variable auxiliar para controlar la visibilidad de un componente <Modal>."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setVisible",
        "description": "Método de acceso indirecto para modificar la propieadad visible."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getExhibitionById",
        "description": "{@link getExhibitionById} | Promesa que devuelve la información dependiendo la respuesta del servidor."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Función de la librería lodash | Devuelve el tamaño de una colección."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "Función de la librería lodash | Crea un arreglo de valores a partir de cada elemento de una colección."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Retorna un componente que contiene maquetada la vista"
    },
    "listens": [
      {
        "types": [
          "onPress"
        ],
        "description": "| El método showModal se dispara cuando ocurre este evento en un componente <ModalButton>."
      }
    ]
  },
  {
    "__docId__": 161,
    "kind": "file",
    "name": "src/screens/KnowMoreScreen.js",
    "content": "import React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView } from 'react-native';\r\nimport KnoMoreCard from '../components/KnoMoreCard';\r\nimport Colors from '../constants/Colors';\r\nimport InformacionDeContacto from '../assets/InformacionDeContacto.jpg';\r\nimport MisionVisionValores from '../assets/MisionVisionValores.jpg';\r\n\r\n/**\r\n * Pantalla que muestra una lista de tarjetas con enlaces a pantallas para conocer más sobre Tin Marín.\r\n * @param {prop} navigation - Contiene información básica de navegación\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\r\n */\r\nconst KnowMoreScreen = ({ navigation }) => {\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={true}>\r\n      <View style={styles.view}>\r\n        <Text style={styles.title}>Conócenos Más</Text>\r\n        <View style={styles.line}></View>\r\n        <KnoMoreCard\r\n          title=\"Contactos\"\r\n          imageURL={InformacionDeContacto}\r\n          color={Colors.magenta}\r\n          textBtn=\"Saber Mas\"\r\n          navigation={navigation}\r\n          screenName=\"contact\"\r\n        />\r\n\r\n        <KnoMoreCard\r\n          title=\"Misión, Visión, Valores\"\r\n          imageURL={MisionVisionValores}\r\n          color={Colors.magenta}\r\n          textBtn=\"Saber Mas\"\r\n          navigation={navigation}\r\n          screenName=\"missionAndVision\"\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  view: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginTop: 20,\r\n    fontSize: 30,\r\n    color: '#566573',\r\n    fontWeight: 'bold',\r\n  },\r\n  line: {\r\n    height: 1,\r\n    width: '90%',\r\n    backgroundColor: '#D5D8DC',\r\n  },\r\n});\r\n\r\nexport default KnowMoreScreen;\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/KnowMoreScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 162,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/KnowMoreScreen.js",
    "static": true,
    "longname": "src/screens/KnowMoreScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/KnowMoreScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 45,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "KnowMoreScreen",
    "memberof": "src/screens/KnowMoreScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/KnowMoreScreen.js~KnowMoreScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/KnowMoreScreen.js",
    "importStyle": "KnowMoreScreen",
    "description": "Pantalla que muestra una lista de tarjetas con enlaces a pantallas para conocer más sobre Tin Marín.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/"
    ],
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    }
  },
  {
    "__docId__": 164,
    "kind": "file",
    "name": "src/screens/MissionAndVisionScreen.js",
    "content": "import React from 'react';\r\nimport { StyleSheet, Text, View, ScrollView, Image } from 'react-native';\r\n\r\n/**\r\n * Pantalla que muestra la misión y visión de la entidad.\r\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\r\n */\r\nconst MissionAndVisionScreen = () => {\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.view}>\r\n        <Text style={styles.titular}>Misión, Visión y Valores</Text>\r\n        <View style={styles.line}></View>\r\n        <View style={styles.containerlogo}>\r\n          <Image\r\n            style={styles.Logo}\r\n            source={require('../assets/logoTinMarin.png')}\r\n          />\r\n        </View>\r\n        <Text style={styles.tema}>Misión:</Text>\r\n        <Text style={styles.title2}>\r\n          Contribuir a la formación de los niños y sus acompañantes en\r\n          ciudadanos integrales y creativos, mediante el aprendizaje\r\n          significativo, la orientación cultural y la experimentración divertida\r\n          con integridad, innovación y trabajo en equipo.\r\n        </Text>\r\n        <Text style={styles.tema}>Visión:</Text>\r\n        <Text style={styles.title2}>\r\n          Ser el espacio favorito, cultural y divertido de los niños para\r\n          aprender y disfrutar de experiencias únicas, emocionantes e\r\n          inolvidables; y ser mejores protagonistas de su desarrollo a nivel\r\n          personal, escolar y social.\r\n        </Text>\r\n        <Text style={styles.tema}>Valores:</Text>\r\n        <Text style={styles.title}>\r\n          Innovación{'\\n'}\r\n          Integridad{'\\n'}\r\n          Lealtad{'\\n'}\r\n          Respeto{'\\n'}\r\n          Trabajo en equipo{'\\n'}\r\n        </Text>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default MissionAndVisionScreen;\r\n\r\n/**\r\n *@ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  line: {\r\n    height: 1,\r\n    width: '90%',\r\n    backgroundColor: '#D5D8DC',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingBottom: 24,\r\n    paddingHorizontal: 24,\r\n  },\r\n  view: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  title2: {\r\n    marginTop: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 6,\r\n    justifyContent: 'center',\r\n    color: '#20232a',\r\n    textAlign: 'justify',\r\n    fontFamily: 'NunitoSans-Bold',\r\n    fontSize: 18,\r\n  },\r\n  title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginTop: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 6,\r\n    justifyContent: 'center',\r\n    color: '#20232a',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n  },\r\n  tema: {\r\n    marginTop: 13,\r\n    textAlign: 'center',\r\n    fontFamily: 'NunitoSans-Bold',\r\n    fontSize: 24,\r\n    color: '#B22222',\r\n  },\r\n  Logo: {\r\n    width: 300,\r\n    height: 200,\r\n  },\r\n  containerlogo: {\r\n    alignItems: 'center',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 30,\r\n  },\r\n  titular: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginTop: 20,\r\n    fontSize: 30,\r\n    color: '#566573',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/MissionAndVisionScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 165,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/MissionAndVisionScreen.js",
    "static": true,
    "longname": "src/screens/MissionAndVisionScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/MissionAndVisionScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 52,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "function",
    "name": "MissionAndVisionScreen",
    "memberof": "src/screens/MissionAndVisionScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/MissionAndVisionScreen.js~MissionAndVisionScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/MissionAndVisionScreen.js",
    "importStyle": "MissionAndVisionScreen",
    "description": "Pantalla que muestra la misión y visión de la entidad.",
    "lineNumber": 8,
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    },
    "params": []
  },
  {
    "__docId__": 167,
    "kind": "file",
    "name": "src/screens/Search.js",
    "content": "import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Platform,\r\n  Text,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { Searchbar } from 'react-native-paper';\r\nimport { map, size } from 'lodash';\r\nimport { getExhibitionByName } from '../api/exhibitions';\r\nimport Card from '../components/Card';\r\nimport Colors from '../constants/Colors';\r\n\r\nconst Search = ({ navigation }) => {\r\n  const [search, setSearch] = useState('');\r\n  const [exhibitions, setExhibitions] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  let swapColor = true;\r\n\r\n  useEffect(() => {\r\n    if (size(search) >= 0) {\r\n      getExhibitionByName(search).then((response) => {\r\n        setExhibitions(response);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [search]);\r\n\r\n  const onChangeSearch = (e) => {\r\n    if (size(e) > 0) {\r\n      setLoading(true);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n    setSearch(e);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.view}>\r\n      <Searchbar\r\n        placeholder=\"Buscar tu exhibición\"\r\n        iconColor=\"#4E73DF\"\r\n        icon=\"arrow-left\"\r\n        style={styles.input}\r\n        inputStyle={{ color: '#000' }}\r\n        onChangeText={onChangeSearch}\r\n      />\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        {loading ? (\r\n          <ActivityIndicator\r\n            style={{\r\n              marginTop: 200,\r\n            }}\r\n            size=\"large\"\r\n            color=\"#0000ff\"\r\n          />\r\n        ) : size(exhibitions) == 0 ? (\r\n          <Text style={styles.text}>No se encontraron exhibiciones</Text>\r\n        ) : (\r\n          <View style={styles.container}>\r\n            {map(exhibitions, (exhibition, index) => {\r\n              if (index % 2 == 0) {\r\n                swapColor = !swapColor;\r\n              }\r\n              return (\r\n                <Card\r\n                  key={exhibition._id}\r\n                  index={index}\r\n                  textBtn=\"Conócela\"\r\n                  color={swapColor ? Colors.green : Colors.magenta}\r\n                  exhibition={exhibition}\r\n                  navigation={navigation}\r\n                />\r\n              );\r\n            })}\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    marginTop: -3,\r\n  },\r\n  container: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  view: {\r\n    marginBottom: 50,\r\n  },\r\n  text: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    color: 'gray',\r\n  },\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/Search.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/Search.js",
    "static": true,
    "longname": "src/screens/Search.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/Search.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "Search",
    "memberof": "src/screens/Search.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/Search.js~Search",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/Search.js",
    "importStyle": "Search",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"navigation\": *}"
        ],
        "defaultRaw": {
          "navigation": null
        },
        "defaultValue": "{\"navigation\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "src/screens/SugerenceScreen.js",
    "content": "import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  Image,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from 'react-native';\r\nimport SugerenceCard from '../components/SugerenceCard';\r\nimport Colors from '../constants/Colors';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { getAllSuperenceTypes, storeSugerence } from '../api/sugerences';\r\n\r\n/**\r\n * Pantalla que muestra el formulario de sugerencias, para poder enviar un mensaje a la entidad.\r\n * @param {prop} navigation - Contiene información básica de navegación\r\n * @property {Array<Object>} sugerenceTypes - Lista que contiene Objetos con estructura de un Tipo de Sugerencia.\r\n * @property {function} setSugerenceTypes - Método de acceso indirecto para modificar la propieadad sugerenceTypes.\r\n * @property {string} sugerenceType - Variable que guarda el tipo de sugerencia que seleccione un Usuario.\r\n * @property {function} setSugerenceType - Método de acceso indirecto para modificar la propieadad sugerenceType.\r\n * @property {string} comment - Variable que guarda el comentario que desea realizar un Usuario.\r\n * @property {function} setComment - Método de acceso indirecto para modificar la propieadad comment.\r\n * @property {string} error - Variable que contiene información de Errores cometidos por el Usuario.\r\n * @property {function} setError - Método de acceso indirecto para modificar la propieadad error.\r\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\r\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\r\n * @property {Promise} getAllSuperenceTypes - {@link getAllSuperenceTypes} | Promesa que devuelve los tipos de sugerencia dependiendo la respuesta del servidor.\r\n * @property {Promise} storeSugerence - {@link storeSugerence} | Promesa que crea un nuevo comentario en el servidor y regresa un estatus de 201.\r\n * @property {function} handleComment - Método que guarda un comentario de tipo string cada vez que se presiona una tecla en la caja de comentario.\r\n * @property {function} handleSend - Método que valida la información del formulario y envía la información al servidor usando la promesa {@link storeSugerence} o guarda errores de validación.\r\n * @listens {onChangeText} | El método handleComment se dispara cuando ocurre este evento en un componente <TextInput> que almacena un comentario.\r\n * @listens {onPress} | El método handleSend se dispara cuando ocurre este evento en un componente <TouchableOpacity> que representa el botón Enviar.\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @see https://reactjs.org/docs/hooks-effect.html\r\n * @see https://reactjs.org/docs/hooks-state.html\r\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201\r\n * @see https://reactnative.dev/docs/textinput#onchangetext\r\n * @see https://reactnative.dev/docs/touchableopacity\r\n * @see https://github.com/react-native-picker/picker/issues/209\r\n * @todo Validar la longitud el comentario.\r\n * @todo Mostrar el texto de error.\r\n * @todo validar promesas cuando no hay internet.\r\n * @experimental El componente Picker tiene limitaciones si se desea agregar estilos a Picker.Item.\r\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\r\n */\r\nconst SugerenceScreen = ({ navigation }) => {\r\n  // OBTIENE DATA, ES UNA COLLECCION\r\n  const [sugerenceTypes, setSugerenceTypes] = useState([]);\r\n  //GUARDA EN FORMULARIO ES UNICA\r\n  const [sugerenceType, setSugerenceType] = useState('');\r\n\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    getAllSuperenceTypes().then((response) => {\r\n      setSugerenceTypes(response);\r\n    });\r\n  }, []);\r\n\r\n  const handleComment = (comment) => {\r\n    // console.log(`Guardando texto: ${comment}`);\r\n    setComment(comment);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (comment === '' || sugerenceType === '') {\r\n      setError('Por favor, Ingrese un mensaje');\r\n      // console.log(sugerenceType);\r\n    } else {\r\n      storeSugerence(sugerenceType, comment).then((response) => {\r\n        // console.log(`Respuesta del server: ${response.status}`);\r\n        Alert.alert('Se envió tu Sugerencia con Éxito!!!');\r\n        setComment('');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container} showsVerticalScrollIndicator={true}>\r\n      <View style={styles.view}>\r\n        <Text style={styles.title}>Sugerencias O Comentarios</Text>\r\n        <View style={styles.line}></View>\r\n        <View style={styles.containerlogo}>\r\n          <Image\r\n            style={styles.Logo}\r\n            source={require('../assets/logoTinMarin.png')}\r\n          />\r\n        </View>\r\n        <View style={styles.pickerContainer}>\r\n          <Picker\r\n            style={styles.picker}\r\n            mode=\"dropdown\"\r\n            selectedValue={sugerenceType}\r\n            onValueChange={(itemValue, itemPosition) => {\r\n              setSugerenceType(itemValue);\r\n            }}>\r\n            {sugerenceTypes.map((sugerenceType, key) => (\r\n              <Picker.Item\r\n                key={key}\r\n                label={sugerenceType.name}\r\n                value={sugerenceType.name}\r\n              />\r\n            ))}\r\n          </Picker>\r\n        </View>\r\n      </View>\r\n      <SugerenceCard\r\n        sugerenceType={sugerenceType}\r\n        color={Colors.blueColor}\r\n        comment={comment}\r\n        onCommentChange={handleComment}\r\n      />\r\n      <View style={styles.view}>\r\n        <TouchableOpacity onPress={() => handleSend()} style={styles.button}>\r\n          <Text style={styles.buttonText}> Enviar! </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  pickerContainer: {\r\n    flexDirection: 'row',\r\n    borderRadius: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#d1d3e2',\r\n    overflow: 'hidden',\r\n  },\r\n  picker: {\r\n    height: 50,\r\n    width: '100%',\r\n    backgroundColor: '#858796',\r\n    color: 'white',\r\n  },\r\n  pickerItem: {\r\n    height: 100,\r\n    width: 500,\r\n    width: '100%',\r\n  },\r\n  view: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#e74a3b',\r\n    marginBottom: 100,\r\n    height: 55,\r\n    width: '60%',\r\n    borderRadius: 10,\r\n  },\r\n  buttonText: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    fontSize: 30,\r\n    color: '#566573',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  line: {\r\n    height: 1,\r\n    width: '90%',\r\n    backgroundColor: '#D5D8DC',\r\n  },\r\n  Logo: {\r\n    width: 300,\r\n    height: 200,\r\n  },\r\n  containerlogo: {\r\n    alignItems: 'center',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 30,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    padding: 24,\r\n    backgroundColor: '#ffffff',\r\n  },\r\n});\r\n\r\nexport default SugerenceScreen;\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/SugerenceScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/SugerenceScreen.js",
    "static": true,
    "longname": "src/screens/SugerenceScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/SugerenceScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 129,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "SugerenceScreen",
    "memberof": "src/screens/SugerenceScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/SugerenceScreen.js~SugerenceScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/SugerenceScreen.js",
    "importStyle": "SugerenceScreen",
    "description": "Pantalla que muestra el formulario de sugerencias, para poder enviar un mensaje a la entidad.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactjs.org/docs/hooks-effect.html",
      "https://reactjs.org/docs/hooks-state.html",
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201",
      "https://reactnative.dev/docs/textinput#onchangetext",
      "https://reactnative.dev/docs/touchableopacity",
      "https://github.com/react-native-picker/picker/issues/209"
    ],
    "lineNumber": 48,
    "experimental": "El componente Picker tiene limitaciones si se desea agregar estilos a Picker.Item.",
    "todo": [
      "Validar la longitud el comentario.",
      "Mostrar el texto de error.",
      "validar promesas cuando no hay internet."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "sugerenceTypes",
        "description": "Lista que contiene Objetos con estructura de un Tipo de Sugerencia."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setSugerenceTypes",
        "description": "Método de acceso indirecto para modificar la propieadad sugerenceTypes."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sugerenceType",
        "description": "Variable que guarda el tipo de sugerencia que seleccione un Usuario."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setSugerenceType",
        "description": "Método de acceso indirecto para modificar la propieadad sugerenceType."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "comment",
        "description": "Variable que guarda el comentario que desea realizar un Usuario."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setComment",
        "description": "Método de acceso indirecto para modificar la propieadad comment."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "Variable que contiene información de Errores cometidos por el Usuario."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setError",
        "description": "Método de acceso indirecto para modificar la propieadad error."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getAllSuperenceTypes",
        "description": "{@link getAllSuperenceTypes} | Promesa que devuelve los tipos de sugerencia dependiendo la respuesta del servidor."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "storeSugerence",
        "description": "{@link storeSugerence} | Promesa que crea un nuevo comentario en el servidor y regresa un estatus de 201."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handleComment",
        "description": "Método que guarda un comentario de tipo string cada vez que se presiona una tecla en la caja de comentario."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handleSend",
        "description": "Método que valida la información del formulario y envía la información al servidor usando la promesa {@link storeSugerence} o guarda errores de validación."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    },
    "listens": [
      {
        "types": [
          "onChangeText"
        ],
        "description": "| El método handleComment se dispara cuando ocurre este evento en un componente <TextInput> que almacena un comentario."
      },
      {
        "types": [
          "onPress"
        ],
        "description": "| El método handleSend se dispara cuando ocurre este evento en un componente <TouchableOpacity> que representa el botón Enviar."
      }
    ]
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "src/screens/WebLinksScreen.js",
    "content": "import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport BasicCard from '../components/BasicCard';\r\nimport Colors from '../constants/Colors';\r\nimport { getAllLinks } from '../api/weblinks';\r\nimport { LogBox } from 'react-native';\r\nimport { size } from 'lodash';\r\n\r\nLogBox.ignoreAllLogs();\r\n\r\n/**\r\n * Pantalla que muestra la lista de Sitios de Interés.\r\n * @param {prop} navigation - Contiene información básica de navegación\r\n * @property {Array<Object>} links - Lista que contiene Objetos con estructura de un Sitios de Interés.\r\n * @property {function} setlinks - Método de acceso indirecto para modificar la propieadad links.\r\n * @property {boolean} loading - Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene.\r\n * @property {function} setLoading - Método de acceso indirecto para modificar la propieadad loading.\r\n * @property {boolean} fetched - Variable auxiliar para validar el tiempo de respuesta de una promesa.\r\n * @property {function} setFetched - Método de acceso indirecto para modificar la propieadad fetched.\r\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\r\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\r\n * @property {Promise} getAllLinks - {@link getAllLinks} | Promesa que devuelve la información dependiendo la respuesta del servidor.\r\n * @property {AbortController} abortController - Patrón de diseño que se implementa para validar promesas.\r\n * @property {AbortSignal} signal - Objeto que se comunica con abortController en caso una promesa falle.\r\n * @see https://reactnavigation.org/docs/navigation-prop/\r\n * @see https://reactjs.org/docs/hooks-effect.html\r\n * @see https://reactjs.org/docs/hooks-state.html\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n * @experimental La promesa getAllLinks presenta un fallo de múltiples llamadas asíncronas.\r\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\r\n */\r\nconst WebLinksScreen = ({ navigation }) => {\r\n  const [links, setlinks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [fetched, setFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n    getAllLinks(signal).then((response) => {\r\n      setlinks(response);\r\n      setLoading(false);\r\n      setFetched(true);\r\n    });\r\n\r\n    if (fetched) abortController.abort();\r\n  });\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={true}>\r\n      {loading ? (\r\n        <ActivityIndicator\r\n          style={{\r\n            marginTop: 200,\r\n          }}\r\n          size=\"large\"\r\n          color=\"#0000ff\"\r\n        />\r\n      ) : size(links) == 0 ? (\r\n        <Text style={styles.text}>No se encontraron Sitios de Interés</Text>\r\n      ) : (\r\n        <View style={styles.view}>\r\n          <Text style={styles.title}>Sitios de Interes</Text>\r\n          <View style={styles.line}></View>\r\n          {links.map((link, key) => (\r\n            <BasicCard\r\n              key={key}\r\n              imageURL={link.image}\r\n              title={link.title}\r\n              color={Colors.magenta}\r\n              url={link.url}\r\n              textBtn=\"Saber Mas\"\r\n            />\r\n          ))}\r\n        </View>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n/**\r\n * @ignore\r\n */\r\nconst styles = StyleSheet.create({\r\n  view: {\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    paddingBottom: 30,\r\n  },\r\n  title: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    marginTop: 20,\r\n    fontSize: 30,\r\n    color: '#566573',\r\n  },\r\n  line: {\r\n    height: 1,\r\n    width: '90%',\r\n    backgroundColor: '#D5D8DC',\r\n  },\r\n  text: {\r\n    fontFamily: 'NunitoSans-Bold',\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    color: 'gray',\r\n  },\r\n});\r\n\r\nexport default WebLinksScreen;\r\n",
    "static": true,
    "longname": "C:/Users/Javier/Documents/tinmarin/tin-marin-app/src/screens/WebLinksScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/WebLinksScreen.js",
    "static": true,
    "longname": "src/screens/WebLinksScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/WebLinksScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 89,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "WebLinksScreen",
    "memberof": "src/screens/WebLinksScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/WebLinksScreen.js~WebLinksScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/WebLinksScreen.js",
    "importStyle": "WebLinksScreen",
    "description": "Pantalla que muestra la lista de Sitios de Interés.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactjs.org/docs/hooks-effect.html",
      "https://reactjs.org/docs/hooks-state.html",
      "https://developer.mozilla.org/en-US/docs/Web/API/AbortController",
      "https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal"
    ],
    "lineNumber": 39,
    "experimental": "La promesa getAllLinks presenta un fallo de múltiples llamadas asíncronas.",
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "links",
        "description": "Lista que contiene Objetos con estructura de un Sitios de Interés."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setlinks",
        "description": "Método de acceso indirecto para modificar la propieadad links."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "loading",
        "description": "Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setLoading",
        "description": "Método de acceso indirecto para modificar la propieadad loading."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "fetched",
        "description": "Variable auxiliar para validar el tiempo de respuesta de una promesa."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setFetched",
        "description": "Método de acceso indirecto para modificar la propieadad fetched."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getAllLinks",
        "description": "{@link getAllLinks} | Promesa que devuelve la información dependiendo la respuesta del servidor."
      },
      {
        "nullable": null,
        "types": [
          "AbortController"
        ],
        "spread": false,
        "optional": false,
        "name": "abortController",
        "description": "Patrón de diseño que se implementa para validar promesas."
      },
      {
        "nullable": null,
        "types": [
          "AbortSignal"
        ],
        "spread": false,
        "optional": false,
        "name": "signal",
        "description": "Objeto que se comunica con abortController en caso una promesa falle."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    }
  },
  {
    "kind": "index",
    "content": "",
    "longname": "C:\\Users\\Javier\\Documents\\tinmarin\\tin-marin-app\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"tinMarin\",\r\n  \"version\": \"0.0.1\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"android\": \"react-native run-android\",\r\n    \"ios\": \"react-native run-ios\",\r\n    \"start\": \"react-native start\",\r\n    \"test\": \"jest\",\r\n    \"lint\": \"eslint .\",\r\n    \"docs\": \"./node_modules/.bin/esdoc\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@react-native-community/masked-view\": \"^0.1.10\",\r\n    \"@react-native-picker/picker\": \"^1.9.10\",\r\n    \"@react-navigation/drawer\": \"^5.11.4\",\r\n    \"@react-navigation/native\": \"^5.8.10\",\r\n    \"@react-navigation/stack\": \"^5.12.8\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\r\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\r\n    \"esdoc-react-plugin\": \"^1.0.1\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"lodash\": \"^4.17.20\",\r\n    \"react\": \"16.13.1\",\r\n    \"react-native\": \"0.63.4\",\r\n    \"react-native-elements\": \"^3.0.0-alpha.1\",\r\n    \"react-native-gesture-handler\": \"^1.9.0\",\r\n    \"react-native-modals\": \"^0.22.3\",\r\n    \"react-native-paper\": \"^4.4.1\",\r\n    \"react-native-ratings\": \"^7.3.0\",\r\n    \"react-native-reanimated\": \"^1.13.2\",\r\n    \"react-native-safe-area-context\": \"^3.1.9\",\r\n    \"react-native-screens\": \"^2.15.0\",\r\n    \"react-native-sound\": \"^0.11.0\",\r\n    \"react-native-unordered-list\": \"^1.0.4\",\r\n    \"react-native-vector-icons\": \"^7.1.0\",\r\n    \"sweetalert2\": \"^10.13.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/core\": \"^7.8.4\",\r\n    \"@babel/runtime\": \"^7.8.4\",\r\n    \"@react-native-community/eslint-config\": \"^1.1.0\",\r\n    \"babel-jest\": \"^25.1.0\",\r\n    \"eslint\": \"^6.5.1\",\r\n    \"jest\": \"^25.1.0\",\r\n    \"metro-react-native-babel-preset\": \"^0.59.0\",\r\n    \"react-test-renderer\": \"16.13.1\"\r\n  },\r\n  \"jest\": {\r\n    \"preset\": \"react-native\"\r\n  }\r\n}\r\n",
    "longname": "C:\\Users\\Javier\\Documents\\tinmarin\\tin-marin-app\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]