[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/api/covid.js",
    "content": "import { API_DEV, API_HOST } from '../constants/URL';\n\n/**\n * Petición fetch que consume el endpoint para obtener un JSON con las Recomendaciones Covid-19\n * @property {string} url - Contiene la ruta del endpoint.\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo\n *  de tipo String con toda la\n * información de las recomendaciones.\n * @todo Agregue validaciones cuando hay problemas en la conectividad\n * @example getAllCovidRecommendations()\n * .then((response) => {...});\n */\nexport const getAllCovidRecommendations = () => {\n  const url = `${API_DEV}/recommendations`;\n\n  return fetch(url)\n    .then((response) => response.json())\n    .then((result) => result);\n};\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/api/covid.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "getAllCovidRecommendations",
    "memberof": "src/api/covid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/covid.js~getAllCovidRecommendations",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/covid.js",
    "importStyle": "{getAllCovidRecommendations}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con las Recomendaciones Covid-19",
    "examples": [
      "getAllCovidRecommendations()\n.then((response) => {...});"
    ],
    "lineNumber": 13,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo\n de tipo String con toda la\ninformación de las recomendaciones."
    },
    "params": []
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/api/exhibitions.js",
    "content": "import { API_HOST } from '../constants/URL';\n\n/**\n * Petición fetch que consume el endpoint para obtener un JSON con las Exhibiciones.\n * @property {string} url - Contiene la ruta del endpoint.\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo\n *  de tipo String con toda la\n * información de las exhibiciones.\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\n * @example getAllExhibitions()\n * .then((response) => {...});\n */\nexport function getAllExhibitions() {\n  const url = `${API_HOST}/exhibitions`;\n\n  return fetch(url)\n    .then((response) => {\n      return response.json();\n    })\n    .then((result) => {\n      return result;\n    });\n}\n\n/**\n * Petición fetch que consume el endpoint para obtener un JSON con el detalle de una Exhibición.\n * @param {string} idExhibition - ID de la exhibición a mostrar.\n * @property {string} url - Contiene la ruta del endpoint.\n * @return {Promise<string[], MyError>} Esta promesa retorna un objeto JSON\n * con el detalle de una exhibición.\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\n * @example getExhibitionById('5ff944b427c7c600175674ef')\n * .then((response) => {...});\n */\nexport function getExhibitionById(idExhibition) {\n  const url = `${API_HOST}/exhibitions/${idExhibition}`;\n\n  return fetch(url)\n    .then((response) => {\n      return response.json();\n    })\n    .then((result) => {\n      return result;\n    });\n}\n\n/**\n * Petición fetch que consume el endpoint para obtener un arreglo de Nombres que coincidan con una variable nombre definida por el Usuario.\n * @param {string} name - Nombre de la exhibición a mostrar.\n * @property {string} url - Contiene la ruta del endpoint.\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo\n *  de tipo String con toda la\n * información de las exhibiciones que coincidan con el nombre.\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\n * @example getExhibitionByName('El Avión')\n * .then((response) => {...});\n */\nexport function getExhibitionByName(name) {\n  const url = `${API_HOST}/exhibitions/?name=${name}`;\n\n  return fetch(url)\n    .then((response) => {\n      // console.log(response)\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(result)\n      return result;\n    });\n}\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/api/exhibitions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "getAllExhibitions",
    "memberof": "src/api/exhibitions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/exhibitions.js~getAllExhibitions",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/exhibitions.js",
    "importStyle": "{getAllExhibitions}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con las Exhibiciones.",
    "examples": [
      "getAllExhibitions()\n.then((response) => {...});"
    ],
    "lineNumber": 13,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo\n de tipo String con toda la\ninformación de las exhibiciones."
    },
    "params": []
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "getExhibitionById",
    "memberof": "src/api/exhibitions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/exhibitions.js~getExhibitionById",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/exhibitions.js",
    "importStyle": "{getExhibitionById}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con el detalle de una Exhibición.",
    "examples": [
      "getExhibitionById('5ff944b427c7c600175674ef')\n.then((response) => {...});"
    ],
    "lineNumber": 35,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "idExhibition",
        "description": "ID de la exhibición a mostrar."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un objeto JSON\ncon el detalle de una exhibición."
    }
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "getExhibitionByName",
    "memberof": "src/api/exhibitions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/exhibitions.js~getExhibitionByName",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/exhibitions.js",
    "importStyle": "{getExhibitionByName}",
    "description": "Petición fetch que consume el endpoint para obtener un arreglo de Nombres que coincidan con una variable nombre definida por el Usuario.",
    "examples": [
      "getExhibitionByName('El Avión')\n.then((response) => {...});"
    ],
    "lineNumber": 58,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Nombre de la exhibición a mostrar."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo\n de tipo String con toda la\ninformación de las exhibiciones que coincidan con el nombre."
    }
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/api/faqs.js",
    "content": "import { API_DEV, API_HOST } from '../constants/URL';\n\n/**\n * Petición fetch que consume el endpoint para obtener un JSON con las Preguntas Frecuentes.\n * @property {string} url - Contiene la ruta del endpoint.\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo.\n *  de tipo String con toda la\n * información de las preguntas frecuentes.\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\n *  @example getAllFAQs()\n * .then((response) => {...});\n */\nexport const getAllFAQs = () => {\n  const url = `${API_DEV}/faqs`;\n  return fetch(url)\n    .then((response) => response.json())\n    .then((result) => result);\n};\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/api/faqs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "getAllFAQs",
    "memberof": "src/api/faqs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/faqs.js~getAllFAQs",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/faqs.js",
    "importStyle": "{getAllFAQs}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con las Preguntas Frecuentes.",
    "examples": [
      "getAllFAQs()\n.then((response) => {...});"
    ],
    "lineNumber": 13,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo.\n de tipo String con toda la\ninformación de las preguntas frecuentes."
    },
    "params": []
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/api/sugerences.js",
    "content": "import { API_DEV, API_HOST } from '../constants/URL';\n\n/**\n * Petición fetch que consume el endpoint para obtener un JSON con los Tipos de Sugerencia.\n * @property {string} url - Contiene la ruta del endpoint.\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo\n *  de tipo String con toda la\n * información de los Tipos de Sugerencia.\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\n * @example getAllSuperenceTypes()\n * .then((response) => {...});\n */\nexport const getAllSuperenceTypes = () => {\n  const url = `${API_DEV}/suggestiontypes`;\n  return fetch(url)\n    .then((response) => response.json())\n    .then((result) => result);\n};\n\n/**\n * Petición fetch de tipo POST que consume el endpoint para enviar un JSON y crear una nueva Sugerencia en la base de datos.\n * @property {string} url - Contiene la ruta del endpoint\n * @return {Promise<string[], MyError>}\n * Esta promesa realiza una petición de tipo POST y crea un nuevo registro\n * con la información de una sugerencia.\n * @param {string} suggestionType - Aquí se almacena el tipo de sugerencia.\n * @param {string} suggestion - Aquí se guarda la sugerencia que realiza un usuario.\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\n * @example storeSugerence(sugerenceType, comment)\n * .then((response) => {...});\n */\nexport const storeSugerence = (suggestionType, suggestion) => {\n  const url = `${API_DEV}/suggestions`;\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      suggestionType,\n      suggestion,\n    }),\n  });\n};\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/api/sugerences.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "getAllSuperenceTypes",
    "memberof": "src/api/sugerences.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/sugerences.js~getAllSuperenceTypes",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/sugerences.js",
    "importStyle": "{getAllSuperenceTypes}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con los Tipos de Sugerencia.",
    "examples": [
      "getAllSuperenceTypes()\n.then((response) => {...});"
    ],
    "lineNumber": 13,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo\n de tipo String con toda la\ninformación de los Tipos de Sugerencia."
    },
    "params": []
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "storeSugerence",
    "memberof": "src/api/sugerences.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/sugerences.js~storeSugerence",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/sugerences.js",
    "importStyle": "{storeSugerence}",
    "description": "Petición fetch de tipo POST que consume el endpoint para enviar un JSON y crear una nueva Sugerencia en la base de datos.",
    "examples": [
      "storeSugerence(sugerenceType, comment)\n.then((response) => {...});"
    ],
    "lineNumber": 32,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "suggestionType",
        "description": "Aquí se almacena el tipo de sugerencia."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "suggestion",
        "description": "Aquí se guarda la sugerencia que realiza un usuario."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la ruta del endpoint"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa realiza una petición de tipo POST y crea un nuevo registro\ncon la información de una sugerencia."
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/api/weblinks.js",
    "content": "import { API_DEV, API_HOST } from '../constants/URL';\n\n/**\n * Petición fetch que consume el endpoint para obtener un JSON con los Sitios de Interés.\n * @return {Promise<string[], MyError>} Esta promesa retorna un arreglo\n *  de tipo String con toda la\n * información de los Sitios de Interés.\n * @todo Agregue validaciones cuando hay problemas en la conectividad.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @param {AbortController.signal} signal - Se le pasa como parámetro a la funcion fetch\n * permite abortar la petición en caso esta se tarde más de lo esperado.\n */\nexport const getAllLinks = (signal) => {\n  const url = `${API_DEV}/recommended-websites`;\n\n  return fetch(url, { signal: signal })\n    .then((response) => response.json())\n    .then((result) => result);\n};\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/api/weblinks.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "getAllLinks",
    "memberof": "src/api/weblinks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/api/weblinks.js~getAllLinks",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/api/weblinks.js",
    "importStyle": "{getAllLinks}",
    "description": "Petición fetch que consume el endpoint para obtener un JSON con los Sitios de Interés.",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal"
    ],
    "lineNumber": 13,
    "todo": [
      "Agregue validaciones cuando hay problemas en la conectividad."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "AbortController.signal"
        ],
        "spread": false,
        "optional": false,
        "name": "signal",
        "description": "Se le pasa como parámetro a la funcion fetch\npermite abortar la petición en caso esta se tarde más de lo esperado."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string[], MyError>"
      ],
      "spread": false,
      "description": "Esta promesa retorna un arreglo\n de tipo String con toda la\ninformación de los Sitios de Interés."
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/components/BasicCard.js",
    "content": "import React from 'react';\nimport { Linking } from 'react-native';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n} from 'react-native';\nimport { coinButton } from '../helpers/audio';\n\nconst BasicCard = ({ title, imageURL, color, textBtn, url }) => {\n  // console.log(`Width: ${Dimensions.get('window').width}`);\n  // console.log(`Height: ${Dimensions.get('window').height}`);\n  return (\n    <SafeAreaView style={styles.card}>\n      <View style={[styles.tituloView, { backgroundColor: color }]}>\n        <Text style={styles.titulo}>{title}</Text>\n      </View>\n      <Image source={{ uri: imageURL }} style={styles.img} />\n      <View style={styles.viewCard}>\n        <View style={[styles.button, { backgroundColor: color }]}>\n          <TouchableOpacity\n            onPressIn={coinButton}\n            style={styles.opacity}\n            onPress={() => Linking.openURL(url)}>\n            <Text style={styles.buttonText}>{textBtn}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default BasicCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 15,\n    marginVertical: 40,\n    width: '90%',\n    height: Dimensions.get('window').height / 3,\n  },\n  viewCard: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  tituloView: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n    height: '35%',\n  },\n  titulo: {\n    marginHorizontal: 10,\n    fontSize: Dimensions.get('window').height > 600 ? 19 : 14,\n    color: '#fff',\n    fontWeight: 'bold',\n    textAlign: 'justify',\n  },\n  button: {\n    paddingVertical: 7,\n    borderRadius: 10,\n    width: '35%',\n    opacity: 0.8,\n    height: 40,\n    marginTop: -60,\n  },\n  buttonText: {\n    textAlign: 'center',\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 17,\n    opacity: 1,\n  },\n  img: {\n    width: '100%',\n    height: '90%',\n    borderBottomLeftRadius: 15,\n    borderBottomRightRadius: 15,\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/components/BasicCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/BasicCard.js",
    "static": true,
    "longname": "src/components/BasicCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/BasicCard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "BasicCard",
    "memberof": "src/components/BasicCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/BasicCard.js~BasicCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/BasicCard.js",
    "importStyle": "BasicCard",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"title\": *, \"imageURL\": *, \"color\": *, \"textBtn\": *, \"url\": *}"
        ],
        "defaultRaw": {
          "title": null,
          "imageURL": null,
          "color": null,
          "textBtn": null,
          "url": null
        },
        "defaultValue": "{\"title\":null,\"imageURL\":null,\"color\":null,\"textBtn\":null,\"url\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/components/BasicCard2.js",
    "content": "import React from 'react';\nimport { Linking } from 'react-native';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  TouchableOpacity,\n  Image,\n} from 'react-native';\nimport { coinButton } from '../helpers/audio'\n\nconst BasicCard2 = ({title, imageURL,  color, textBtn, navigation,screenName}) => {\n\n  \n  return (\n    <SafeAreaView style={styles.card}>\n      <View style={[styles.tituloView, {backgroundColor: color}]}>\n        <Text style={styles.titulo}>{title}</Text>\n      </View>\n      <Image source={{uri: imageURL}} style={styles.img} />\n      <View style={styles.viewCard}>\n        <View style={[styles.button, {backgroundColor: color}]}>\n          <TouchableOpacity\n            style={styles.opacity}\n            onPressIn={coinButton}\n            onPress={()=> Linking.openURL('https://www.paho.org/es')}\n            >\n            <Text style={styles.buttonText}>{textBtn}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default BasicCard2;\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 15,\n    marginBottom: 40,\n    marginTop: 20,\n    width: '90%',\n    height: 200,\n  },\n  viewCard: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  tituloView: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 40,\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n  },\n  titulo: {fontSize: 19, color: '#fff', fontWeight: 'bold'},\n  button: {\n    paddingVertical: 7,\n    borderRadius: 10,\n    width: '35%',\n    opacity: 0.8,\n    height: 40,\n    marginTop: -60,\n  },\n  buttonText: {\n    textAlign: 'center',\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 17,\n    opacity: 1,\n  },\n  img: {\n    width: '100%',\n    height: '90%',\n    borderBottomLeftRadius: 15,\n    borderBottomRightRadius: 15,\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/components/BasicCard2.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/BasicCard2.js",
    "static": true,
    "longname": "src/components/BasicCard2.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/BasicCard2.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "BasicCard2",
    "memberof": "src/components/BasicCard2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/BasicCard2.js~BasicCard2",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/BasicCard2.js",
    "importStyle": "BasicCard2",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"title\": *, \"imageURL\": *, \"color\": *, \"textBtn\": *, \"navigation\": *, \"screenName\": *}"
        ],
        "defaultRaw": {
          "title": null,
          "imageURL": null,
          "color": null,
          "textBtn": null,
          "navigation": null,
          "screenName": null
        },
        "defaultValue": "{\"title\":null,\"imageURL\":null,\"color\":null,\"textBtn\":null,\"navigation\":null,\"screenName\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "src/components/Card.js",
    "content": "import React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  TouchableOpacity,\n  Image,\n} from 'react-native';\nimport { coinButton } from '../helpers/audio'\n\nconst Card = ({ exhibition, color, textBtn, navigation}) => {\n  const {images, name, _id } = exhibition;\n  const [imageURL] = images;\n  \n  return (\n    <SafeAreaView style={styles.card}>\n      <View style={[styles.tituloView, {backgroundColor: color}]}>\n        <Text style={styles.titulo}>{name}</Text>\n      </View>\n      <Image source={{uri: imageURL}} style={styles.img} />\n      <View style={styles.viewCard}>\n        <View style={[styles.button, {backgroundColor: color}]}>\n          <TouchableOpacity\n            style={styles.opacity}\n            onPressIn={coinButton}\n            onPress={() => navigation.navigate('information', {_id})}>\n            <Text style={styles.buttonText}>{textBtn}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default Card;\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 15,\n    marginBottom: 40,\n    marginTop: 20,\n    width: '90%',\n    height: 200,\n  },\n  viewCard: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  tituloView: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 40,\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n  },\n  titulo: {fontSize: 19, color: '#fff', fontWeight: 'bold'},\n  button: {\n    paddingVertical: 7,\n    borderRadius: 10,\n    width: '35%',\n    opacity: 0.8,\n    height: 40,\n    marginTop: -60,\n  },\n  buttonText: {\n    textAlign: 'center',\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 17,\n    opacity: 1,\n  },\n  img: {\n    width: '100%',\n    height: '90%',\n    borderBottomLeftRadius: 15,\n    borderBottomRightRadius: 15,\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/components/Card.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Card.js",
    "static": true,
    "longname": "src/components/Card.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/Card.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "Card",
    "memberof": "src/components/Card.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Card.js~Card",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/Card.js",
    "importStyle": "Card",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"exhibition\": *, \"color\": *, \"textBtn\": *, \"navigation\": *}"
        ],
        "defaultRaw": {
          "exhibition": null,
          "color": null,
          "textBtn": null,
          "navigation": null
        },
        "defaultValue": "{\"exhibition\":null,\"color\":null,\"textBtn\":null,\"navigation\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/components/ContactCard.js",
    "content": "import React from 'react';\nimport { StyleSheet, Text, View, SafeAreaView } from 'react-native';\n\nconst GenericCard = ({ charge, color, name, email }) => {\n  return (\n    <SafeAreaView style={styles.card}>\n      <View style={[styles.tituloView, { backgroundColor: color }]}>\n        <Text style={styles.titulo}>{charge}</Text>\n      </View>\n      <View style={styles.viewCard}>\n        <Text style={styles.subTitulo}>{name}</Text>\n        <Text style={styles.subTitulo}>{email}</Text>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default GenericCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    // marginBottom: 40,\n    marginTop: 20,\n    width: '100%',\n  },\n  viewCard: {\n    borderColor: '#d1d3e2',\n    borderWidth: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    height: 100,\n    borderBottomRightRadius: 15,\n    borderBottomLeftRadius: 15,\n  },\n  tituloView: {\n    borderColor: '#d1d3e2',\n    borderWidth: 1,\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 40,\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n  },\n  titulo: { fontSize: 19, color: '#fff', fontWeight: 'bold' },\n  subTitulo: { fontSize: 19, color: '#858796', fontWeight: 'normal' },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/components/ContactCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/ContactCard.js",
    "static": true,
    "longname": "src/components/ContactCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/ContactCard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "GenericCard",
    "memberof": "src/components/ContactCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/ContactCard.js~GenericCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/ContactCard.js",
    "importStyle": "GenericCard",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"charge\": *, \"color\": *, \"name\": *, \"email\": *}"
        ],
        "defaultRaw": {
          "charge": null,
          "color": null,
          "name": null,
          "email": null
        },
        "defaultValue": "{\"charge\":null,\"color\":null,\"name\":null,\"email\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/components/DrawerMenu.js",
    "content": "import React from 'react';\nimport {StyleSheet} from 'react-native';\nimport {Icon} from 'react-native-elements';\n\nexport const DrawerMenu = (props) => {\n  return (\n    <Icon\n      name=\"menu\"\n      type=\"material-community\"\n      size={30}\n      color=\"black\"\n      onPress={props.onPress}\n      containerStyle={styles.containerStyle}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  containerStyle: {flexDirection: 'row', marginLeft: 10},\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/components/DrawerMenu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "DrawerMenu",
    "memberof": "src/components/DrawerMenu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/DrawerMenu.js~DrawerMenu",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/DrawerMenu.js",
    "importStyle": "{DrawerMenu}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/DrawerMenu.js",
    "static": true,
    "longname": "src/components/DrawerMenu.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/DrawerMenu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "src/components/GenericCard.js",
    "content": "import React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n} from 'react-native';\nimport { coinButton } from '../helpers/audio';\n\nconst GenericCard = ({\n  id,\n  title,\n  description,\n  imageURL,\n  steps,\n  color,\n  textBtn,\n  navigation,\n  screenName,\n}) => {\n  const navigating = () => {\n    navigation.navigate(screenName, {\n      id: id,\n      title: title,\n      description: description,\n      image: imageURL,\n      steps: steps,\n    });\n  };\n\n  return (\n    <SafeAreaView style={styles.card}>\n      <View style={[styles.tituloView, { backgroundColor: color }]}>\n        <Text style={styles.titulo}>{title}</Text>\n      </View>\n      <Image source={{ uri: imageURL }} style={styles.img} />\n      <View style={styles.viewCard}>\n        <View style={[styles.button, { backgroundColor: color }]}>\n          <TouchableOpacity style={styles.opacity} onPressIn={coinButton} onPress={() => navigating()}>\n            <Text style={styles.buttonText}>{textBtn}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default GenericCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 15,\n    marginBottom: 40,\n    marginTop: 20,\n    width: '90%',\n    height: Dimensions.get('window').height / 3.4,\n  },\n  viewCard: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  tituloView: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 40,\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n  },\n  titulo: { fontSize: 19, color: '#fff', fontWeight: 'bold' },\n  button: {\n    paddingVertical: 7,\n    borderRadius: 10,\n    width: '35%',\n    opacity: 0.8,\n    height: 40,\n    marginTop: -60,\n  },\n  buttonText: {\n    textAlign: 'center',\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 17,\n    opacity: 1,\n  },\n  img: {\n    width: '100%',\n    height: '90%',\n    borderBottomLeftRadius: 15,\n    borderBottomRightRadius: 15,\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/components/GenericCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/GenericCard.js",
    "static": true,
    "longname": "src/components/GenericCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/GenericCard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "GenericCard",
    "memberof": "src/components/GenericCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/GenericCard.js~GenericCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/GenericCard.js",
    "importStyle": "GenericCard",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"id\": *, \"title\": *, \"description\": *, \"imageURL\": *, \"steps\": *, \"color\": *, \"textBtn\": *, \"navigation\": *, \"screenName\": *}"
        ],
        "defaultRaw": {
          "id": null,
          "title": null,
          "description": null,
          "imageURL": null,
          "steps": null,
          "color": null,
          "textBtn": null,
          "navigation": null,
          "screenName": null
        },
        "defaultValue": "{\"id\":null,\"title\":null,\"description\":null,\"imageURL\":null,\"steps\":null,\"color\":null,\"textBtn\":null,\"navigation\":null,\"screenName\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/components/KnoMoreCard.js",
    "content": "import React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n} from 'react-native';\nimport { coinButton } from '../helpers/audio';\n\nconst KnoMoreCard = ({\n  id,\n  title,\n  description,\n  imageURL,\n  steps,\n  color,\n  textBtn,\n  navigation,\n  screenName,\n}) => {\n  const navigating = () => {\n    navigation.navigate(screenName, {\n      id: id,\n      title: title,\n      description: description,\n      image: imageURL,\n      steps: steps,\n    });\n  };\n\n  return (\n    <SafeAreaView style={styles.card}>\n      <View style={[styles.tituloView, { backgroundColor: color }]}>\n        <Text style={styles.titulo}>{title}</Text>\n      </View>\n      <Image source={(imageURL)} style={styles.img} />\n      <View style={styles.viewCard}>\n        <View style={[styles.button, { backgroundColor: color }]}>\n          <TouchableOpacity style={styles.opacity} onPressIn={coinButton} onPress={() => navigating()}>\n            <Text style={styles.buttonText}>{textBtn}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default KnoMoreCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 15,\n    marginBottom: 40,\n    marginTop: 20,\n    width: '90%',\n    height: Dimensions.get('window').height / 3.4,\n  },\n  viewCard: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  tituloView: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 40,\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n  },\n  titulo: { fontSize: 19, color: '#fff', fontWeight: 'bold' },\n  button: {\n    paddingVertical: 7,\n    borderRadius: 10,\n    width: '35%',\n    opacity: 0.8,\n    height: 40,\n    marginTop: -60,\n  },\n  buttonText: {\n    textAlign: 'center',\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 17,\n    opacity: 1,\n  },\n  img: {\n    width: '100%',\n    height: '90%',\n    borderBottomLeftRadius: 15,\n    borderBottomRightRadius: 15,\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/components/KnoMoreCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/KnoMoreCard.js",
    "static": true,
    "longname": "src/components/KnoMoreCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/KnoMoreCard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "KnoMoreCard",
    "memberof": "src/components/KnoMoreCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/KnoMoreCard.js~KnoMoreCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/KnoMoreCard.js",
    "importStyle": "KnoMoreCard",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"id\": *, \"title\": *, \"description\": *, \"imageURL\": *, \"steps\": *, \"color\": *, \"textBtn\": *, \"navigation\": *, \"screenName\": *}"
        ],
        "defaultRaw": {
          "id": null,
          "title": null,
          "description": null,
          "imageURL": null,
          "steps": null,
          "color": null,
          "textBtn": null,
          "navigation": null,
          "screenName": null
        },
        "defaultValue": "{\"id\":null,\"title\":null,\"description\":null,\"imageURL\":null,\"steps\":null,\"color\":null,\"textBtn\":null,\"navigation\":null,\"screenName\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/components/Modal.js",
    "content": "import React from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport Tin from '../assets/tin.png';\n\nconst Modal = ({ curiousInfo }) => {\n  return (\n    <View style={styles.content}>\n      <Image source={Tin} style={styles.img} />\n      <Text style={styles.text}>{curiousInfo}</Text>\n    </View>\n  );\n};\n\nexport default Modal;\n\nconst styles = StyleSheet.create({\n  content: {\n    maxWidth: '90%',\n    minWidth: '60%',\n    height: 120,\n    marginTop: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  img: {\n    height: 110,\n    width: 110,\n    padding: 0,\n    margin: 0,\n  },\n  text: {\n    fontSize: 16.5,\n    width: '63%',\n    textAlign: 'left',\n    paddingLeft: 10,\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/components/Modal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/Modal.js",
    "static": true,
    "longname": "src/components/Modal.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/Modal.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "Modal",
    "memberof": "src/components/Modal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/Modal.js~Modal",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/Modal.js",
    "importStyle": "Modal",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"curiousInfo\": *}"
        ],
        "defaultRaw": {
          "curiousInfo": null
        },
        "defaultValue": "{\"curiousInfo\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/components/ModalBody.js",
    "content": "import React, { useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { playButtonPress } from '../helpers/audio';\nimport {\n  Modal,\n  ModalButton,\n  ModalContent,\n  ModalFooter,\n  SlideAnimation,\n  ModalTitle,\n} from 'react-native-modals';\n\nimport MContent from './Modal';\n\nconst ModalBody = ({ showModal, visible, curiousInfo }) => {\n  return (\n    <Modal\n      visible={visible}\n      onTouchOutside={showModal}\n      modalAnimation={\n        new SlideAnimation({\n          slideFrom: 'bottom',\n        })\n      }\n      modalTitle={<ModalTitle title=\"¿Sabías qué?\" />}\n      footer={\n        <ModalFooter>\n          <ModalButton text=\"OK\" onPress={showModal} />\n        </ModalFooter>\n      }>\n      <ModalContent>\n        <MContent curiousInfo={curiousInfo} />\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ModalBody;\n\nconst styles = StyleSheet.create({});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/components/ModalBody.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/ModalBody.js",
    "static": true,
    "longname": "src/components/ModalBody.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/ModalBody.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "ModalBody",
    "memberof": "src/components/ModalBody.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/ModalBody.js~ModalBody",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/ModalBody.js",
    "importStyle": "ModalBody",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"showModal\": *, \"visible\": *, \"curiousInfo\": *}"
        ],
        "defaultRaw": {
          "showModal": null,
          "visible": null,
          "curiousInfo": null
        },
        "defaultValue": "{\"showModal\":null,\"visible\":null,\"curiousInfo\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "src/components/SugerenceCard.js",
    "content": "import React from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, TextInput } from 'react-native';\n\nconst GenericCard = ({ sugerenceType, color, comment, onCommentChange }) => {\n  const handleComment = (text) => {\n    onCommentChange(text);\n  };\n\n  return (\n    <SafeAreaView style={styles.card}>\n      <View style={[styles.tituloView, { backgroundColor: color }]}>\n        <Text style={styles.titulo}>{`Comentario: ${sugerenceType}`}</Text>\n      </View>\n      <View style={styles.textAreaContainer}>\n        <TextInput\n          style={styles.textArea}\n          underlineColorAndroid=\"transparent\"\n          placeholder=\"Escribe tu comentario aqui\"\n          placeholderTextColor=\"grey\"\n          numberOfLines={10}\n          multiline={true}\n          value={comment}\n          onChangeText={(text) => {\n            handleComment(text);\n            // console.log(text);\n          }}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default GenericCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    marginBottom: 40,\n    marginTop: 20,\n    width: '100%',\n  },\n  textAreaContainer: {\n    paddingHorizontal: 10,\n    width: '100%',\n    borderColor: '#d1d3e2',\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderBottomRightRadius: 15,\n    borderBottomLeftRadius: 15,\n  },\n  textArea: {\n    textAlignVertical: 'top',\n  },\n  viewCard: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    height: 100,\n  },\n  tituloView: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 40,\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n  },\n  titulo: { fontSize: 19, color: '#fff', fontWeight: 'bold' },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/components/SugerenceCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/components/SugerenceCard.js",
    "static": true,
    "longname": "src/components/SugerenceCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/components/SugerenceCard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "GenericCard",
    "memberof": "src/components/SugerenceCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/SugerenceCard.js~GenericCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/components/SugerenceCard.js",
    "importStyle": "GenericCard",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"sugerenceType\": *, \"color\": *, \"comment\": *, \"onCommentChange\": *}"
        ],
        "defaultRaw": {
          "sugerenceType": null,
          "color": null,
          "comment": null,
          "onCommentChange": null
        },
        "defaultValue": "{\"sugerenceType\":null,\"color\":null,\"comment\":null,\"onCommentChange\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/constants/Colors.js",
    "content": "export default {\n  activeDrawerItemTintColor: 'white',\n  inactiveDrawerItemTintColor: '#829CE7',\n  primaryColor: '#4E73DF',\n  magenta: \"#860472\",\n  green: \"#ABBF39\",\n  blueColor:  \"#4E73DF\"\n};\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/constants/Colors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/constants/URL.js",
    "content": "export default {\n  banco:\n    'https://tinmarin.org/wp-content/uploads/2019/11/banco-opt-1024x788.jpg',\n  avion: 'https://tinmarin.org/wp-content/uploads/2019/11/avion-1024x787.jpg',\n  hospital:\n    'https://tinmarin.org/wp-content/uploads/2020/04/hospital-1024x788.png',\n};\n\n/**\n * Constante que contiene el endpoint de producción\n * @type {string}\n * @example API_HOST = 'https://tin-marin-app.herokuapp.com/api/v1';\n */\nexport const API_HOST = 'https://tin-marin-app.herokuapp.com/api/v1';\n\n/**\n * Constante que contiene el endpoint de desarrollo\n * @type {string}\n * @example API_DEV = 'https://tinmarin.herokuapp.com/api/v1';\n */\nexport const API_DEV = 'https://tinmarin.herokuapp.com/api/v1';\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/constants/URL.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "API_HOST",
    "memberof": "src/constants/URL.js",
    "static": true,
    "longname": "src/constants/URL.js~API_HOST",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/constants/URL.js",
    "importStyle": "{API_HOST}",
    "description": "Constante que contiene el endpoint de producción",
    "examples": [
      "API_HOST = 'https://tin-marin-app.herokuapp.com/api/v1';"
    ],
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "API_DEV",
    "memberof": "src/constants/URL.js",
    "static": true,
    "longname": "src/constants/URL.js~API_DEV",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/constants/URL.js",
    "importStyle": "{API_DEV}",
    "description": "Constante que contiene el endpoint de desarrollo",
    "examples": [
      "API_DEV = 'https://tinmarin.herokuapp.com/api/v1';"
    ],
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "src/dummy-data/contacts.js",
    "content": "/**\n * @type {Array<Object>}\n * @property {string} CONTACT.id - Contiene el identificador de registro de contacto.\n * @property {string} CONTACT.name - Contiene el nombre del contacto.\n * @property {string} CONTACT.email - Contiene el email que identifica al contacto.\n * @property {string} CONTACT.charge - Se muestra el cargo asociado al contacto.\n * @property {string} CONTACT.image - Se guarda una imagen de contacto.\n */\nexport const CONTACTS = [\n  {\n    id: 'c9',\n    name: 'Rolando Rodríguez',\n    email: 'rrodriguez@tinmarin.org',\n    charge: 'ADMINISTRACION',\n    image: 'https://cdn.icon-icons.com/icons2/1737/PNG/512/worker_113306.png',\n  },\n  {\n    id: 'c2',\n    name: 'Patricia Gutiérrez',\n    email: 'pgutierrez@tinmarin.org',\n    charge: 'CELEBRACIONES',\n    image:\n      'https://cdn.icon-icons.com/icons2/2670/PNG/512/celebration_party_confetti_icon_161370.png',\n  },\n  {\n    id: 'c5',\n    name: '',\n    email: 'comunicaciones@tinmarin.org',\n    charge: 'COMUNICACIONES',\n    image:\n      'https://cdn.icon-icons.com/icons2/936/PNG/512/speech-bubbles-comment-option_icon-icons.com_73399.png',\n  },\n  {\n    id: 'cc',\n    name: ' Ing. Juan Carlos Novoa',\n    email: '--',\n    charge: 'DIRECCION EJECUTIVA',\n    image:\n      'https://cdn.icon-icons.com/icons2/2387/PNG/512/meetings_meeting_table_people_work_icon_144587.png',\n  },\n  {\n    id: 'c6',\n    name: 'Lyl Álvarez',\n    email: 'lylalvarez@tinmarin.org',\n    charge: 'EDUCACION',\n    image:\n      'https://cdn.icon-icons.com/icons2/936/PNG/512/book_icon-icons.com_73655.png',\n  },\n  {\n    id: 'c8',\n    name: 'Moisés Rauda',\n    email: 'moises@tinmarin.org',\n    charge: 'PROYECTOS',\n    image:\n      'https://cdn.icon-icons.com/icons2/875/PNG/512/work-tools-crossed_icon-icons.com_68107.png',\n  },\n  {\n    id: 'c7',\n    name: 'Jacqueline Martínez',\n    email: 'jmartinez@tinmarin.org',\n    charge: 'TIN MARIN MOVIL',\n    image:\n      'https://cdn.icon-icons.com/icons2/2450/PNG/512/summer_holidays_outdoor_holidays_relax_icon_148884.png',\n  },\n  {\n    id: 'c1',\n    name: 'Sandra de Villacorta',\n    email: 'sdevillacorta@tinmarin.org',\n    charge: 'VISITA ESCOLAR',\n    image:\n      'https://cdn.icon-icons.com/icons2/1364/PNG/512/frontalbussilhouette_89094.png',\n  },\n  {\n    id: 'c3',\n    name: 'Leticia de Schlageter',\n    email: 'leticia@tinmarin.org',\n    charge: 'VISITA PATROCINADA',\n    image: 'https://cdn.icon-icons.com/icons2/390/PNG/512/megaphone_39495.png',\n  },\n  {\n    id: 'c4',\n    name: 'Xiomara de Tenorio',\n    email: 'xkdetenorio@tinmarin.org',\n    charge: 'VOLUNTARIADO',\n    image: 'https://cdn.icon-icons.com/icons2/38/PNG/512/hand_hand_5532.png',\n  },\n];\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/dummy-data/contacts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "CONTACTS",
    "memberof": "src/dummy-data/contacts.js",
    "static": true,
    "longname": "src/dummy-data/contacts.js~CONTACTS",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/dummy-data/contacts.js",
    "importStyle": "{CONTACTS}",
    "description": "",
    "lineNumber": 9,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACT.id",
        "description": "Contiene el identificador de registro de contacto."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACT.name",
        "description": "Contiene el nombre del contacto."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACT.email",
        "description": "Contiene el email que identifica al contacto."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACT.charge",
        "description": "Se muestra el cargo asociado al contacto."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACT.image",
        "description": "Se guarda una imagen de contacto."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array<Object>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/helpers/audio.js",
    "content": "import Sound from 'react-native-sound';\n\nSound.setCategory('Ambient', true);\n\nconst buttonPress = new Sound(require('../audio/tuturu.mp3'), error => console.log(error));\nexport const playButtonPress = () => {\n  buttonPress.play();\n}\n\nconst heylisten = new Sound (require('../audio/heylisten.mp3'), error=> console.log(error));\nexport const heyListenButton = () =>{\n  heylisten.play();\n}\n\nconst wow = new Sound (require('../audio/wow.mp3'), error=> console.log(error));\nexport const wowButton = () =>{\n  wow.play();\n}\n\nconst msn = new Sound (require('../audio/msn.mp3'), error=> console.log(error));\nexport const msnButton = () =>{\n  msn.play();\n}\n\nconst catc = new Sound (require('../audio/catch.mp3'), error=> console.log(error));\nexport const catcButton = () =>{\n  catc.play();\n}\n\nconst coin = new Sound (require('../audio/coin.mp3'), error=> console.log(error));\nexport const coinButton = () =>{\n  coin.play();\n}\n\nconst ohh = new Sound (require('../audio/ohh.mp3'), error=> console.log(error));\nexport const ohhButton = () =>{\n  ohh.play();\n}\n\n\n\n\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/helpers/audio.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "buttonPress",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~buttonPress",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "playButtonPress",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~playButtonPress",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{playButtonPress}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "heylisten",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~heylisten",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "heyListenButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~heyListenButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{heyListenButton}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "wow",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~wow",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "wowButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~wowButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{wowButton}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "msn",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~msn",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "msnButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~msnButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{msnButton}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "catc",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~catc",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "catcButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~catcButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{catcButton}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "coin",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~coin",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "coinButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~coinButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{coinButton}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "ohh",
    "memberof": "src/helpers/audio.js",
    "static": true,
    "longname": "src/helpers/audio.js~ohh",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "ohhButton",
    "memberof": "src/helpers/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helpers/audio.js~ohhButton",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/helpers/audio.js",
    "importStyle": "{ohhButton}",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/navigation/DrawerContent.js",
    "content": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { DrawerContentScrollView } from '@react-navigation/drawer';\nimport { Drawer, Avatar } from 'react-native-paper';\nimport {\n  playButtonPress,\n} from '../helpers/audio'\nimport Colors from '../constants/Colors';\nconst DrawerContent = (props) => {\n  const { navigation } = props;\n  return (\n    <DrawerContentScrollView style={styles.drawer}>\n      <Drawer.Section style={styles.image}>\n        <Avatar.Image\n          backgroundColor={'#4E73DF'}\n          size={100}\n          source={require('../assets/logoDrawer.png')}\n        />\n      </Drawer.Section>\n      <Drawer.Section>\n        <Drawer.Item\n          label=\"Menu Principal\"\n          onPress={() => navigation.navigate('home')}\n          icon=\"home\"\n        />\n        <Drawer.Item\n          label=\"Exhibiciones\"\n          onPress={() =>{playButtonPress, navigation.navigate('exhibits')} }\n          icon=\"ticket\"\n        />\n        {/* <Drawer.Item\n                    label=\"Eventos\"\n                    onPress={()=> navigation.navigate(\"events\")}\n                    icon=\"gift\"\n                /> */}\n        <Drawer.Item\n          label=\"Recomendaciones Covid-19\"\n          onPress={() => navigation.navigate('covid')}\n          icon=\"virus\"\n        />\n        <Drawer.Item\n          label=\"Conócenos Más\"\n          onPress={() => navigation.navigate('knowMore')}\n          icon=\"card-account-mail\"\n        />\n        <Drawer.Item\n          label=\"Sugerencias\"\n          onPress={() => navigation.navigate('comments')}\n          icon=\"email-alert\"\n        />\n        {/* <Drawer.Item\n          label=\"Donaciones\"\n          onPress={() => navigation.navigate('donations')}\n          icon=\"heart\"\n        /> */}\n        <Drawer.Item\n          label=\"Preguntas Frecuentes\"\n          onPress={() => navigation.navigate('FAQs')}\n          icon=\"frequently-asked-questions\"\n        />\n        <Drawer.Item\n          label=\"Sitios de Interés\"\n          onPress={() => navigation.navigate('WebLinks')}\n          icon=\"web\"\n        />\n      </Drawer.Section>\n    </DrawerContentScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    alignItems: 'center',\n    backgroundColor: '#4E73DF',\n  },\n  second: {\n    color: '#860472',\n  },\n  drawer: {\n    backgroundColor: Colors.primaryColor,\n    color: '#FFF',\n  },\n});\n\nexport default DrawerContent;\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/navigation/DrawerContent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/navigation/DrawerContent.js",
    "static": true,
    "longname": "src/navigation/DrawerContent.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/navigation/DrawerContent.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "DrawerContent",
    "memberof": "src/navigation/DrawerContent.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/navigation/DrawerContent.js~DrawerContent",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/navigation/DrawerContent.js",
    "importStyle": "DrawerContent",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/navigation/MainNavigator.js",
    "content": "import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport StackNavigation from './StackNavigation';\nimport DrawerContent from './DrawerContent';\n\nconst Drawer = createDrawerNavigator();\n\nexport default MainNavigator = () => {\n  return (\n    <Drawer.Navigator\n      initialRouteName=\"app\"\n      drawerContent={(props) => <DrawerContent {...props} />}>\n      <Drawer.Screen name=\"app\" component={StackNavigation} />\n    </Drawer.Navigator>\n  );\n};\n\n// const styles = StyleSheet.create({\n//   drawerStyle: {\n//     backgroundColor: Colors.primaryColor,\n//     width: 240,\n//   },\n//   drawerIcon: {\n//     //backgroundColor: 'white',\n//   },\n//   drawerLabel: {fontWeight: 'bold'},\n// });\n\n// const drawerContentOptions = {\n//   activeTintColor: Colors.activeDrawerItemTintColor,\n//   inactiveTintColor: Colors.inactiveDrawerItemTintColor,\n//   itemStyle: {marginVertical: 5},\n// };\n\n// const screenOptions = (drawerLabel, iconName, iconType) => {\n//   return {\n//     headerShown: true,\n//     headerTitle: drawerLabel,\n//     drawerLabel: ({focused, color}) => (\n//       <Text style={{...styles.drawerLabel, color: color}}>{drawerLabel}</Text>\n//     ),\n//     drawerIcon: ({focused, color, size}) => (\n//       <Icon\n//         name={iconName}\n//         type={iconType}\n//         color={color}\n//         size={size}\n//         style={styles.drawerIcon}\n//         solid={true}\n//       />\n//     ),\n//   };\n// };\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/navigation/MainNavigator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "Drawer",
    "memberof": "src/navigation/MainNavigator.js",
    "static": true,
    "longname": "src/navigation/MainNavigator.js~Drawer",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/navigation/MainNavigator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "MainNavigator",
    "memberof": "src/navigation/MainNavigator.js",
    "static": true,
    "longname": "src/navigation/MainNavigator.js~MainNavigator",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/navigation/MainNavigator.js",
    "importStyle": "MainNavigator",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/navigation/StackNavigation.js",
    "content": "import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { IconButton } from 'react-native-paper';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport ExhibitsScrn from '../screens/ExhibitsScreen';\nimport EventsScreen from '../screens/EventsScreen';\nimport CovidScreen from '../screens/CovidScreen';\nimport ContactScreen from '../screens/ContactScreen';\nimport SugerenceScreen from '../screens/SugerenceScreen';\nimport DonationScreen from '../screens/DonationScreen';\nimport InfoCard from '../screens/InfoCard';\nimport KnowMoreScreen from '../screens/KnowMoreScreen';\nimport MissionAndVisionScreen from '../screens/MissionAndVisionScreen';\nimport Search from '../screens/Search';\nimport FAQScreen from '../screens/FAQScreen';\nimport WebLinksScreen from '../screens/WebLinksScreen';\nimport CovidInfo from '../screens/CovidInfo';\n\nconst Stack = createStackNavigator();\nexport default function StackNavigation(props) {\n  const { navigation } = props;\n\n  const buttonLeft = (screen = 'not') => {\n    if (screen == 'information' || screen == 'search' || screen == 'FAQs')\n      return (\n        <IconButton\n          icon=\"arrow-left\"\n          onPress={() => navigation.goBack()}\n          color=\"#FFF\"\n        />\n      );\n    return (\n      <IconButton\n        icon=\"menu\"\n        onPress={() => navigation.openDrawer()}\n        color=\"#4E73DF\"\n      />\n    );\n  };\n\n  const buttonRight = () => {\n    return (\n      <IconButton\n        icon=\"magnify\"\n        onPress={() => navigation.navigate('search')}\n        color=\"#4E73DF\"\n      />\n    );\n  };\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"home\"\n        component={HomeScreen}\n        options={{\n          title: '',\n          headerLeft: () => buttonLeft(),\n        }}\n      />\n      <Stack.Screen\n        name=\"exhibits\"\n        component={ExhibitsScrn}\n        options={{\n          title: '',\n          headerLeft: () => buttonLeft(),\n          headerRight: () => buttonRight(),\n        }}\n      />\n      <Stack.Screen\n        name=\"events\"\n        component={EventsScreen}\n        options={{\n          title: '',\n          headerLeft: () => buttonLeft(),\n        }}\n      />\n      <Stack.Screen\n        name=\"covid\"\n        component={CovidScreen}\n        options={{\n          title: '',\n          headerLeft: () => buttonLeft(),\n        }}\n      />\n      <Stack.Screen\n        name=\"contact\"\n        component={ContactScreen}\n        options={{\n          title: '',\n          headerLeft: () => buttonLeft(),\n        }}\n      />\n      <Stack.Screen\n        name=\"comments\"\n        component={SugerenceScreen}\n        options={{\n          title: '',\n          headerLeft: () => buttonLeft(),\n        }}\n      />\n      <Stack.Screen\n        name=\"donations\"\n        component={DonationScreen}\n        options={{\n          title: '',\n          headerLeft: () => buttonLeft(),\n        }}\n      />\n      <Stack.Screen\n        name=\"information\"\n        component={InfoCard}\n        options={{\n          title: '',\n          headerTransparent: true,\n          headerLeft: () => buttonLeft('information'),\n        }}\n      />\n      <Stack.Screen\n        name=\"knowMore\"\n        component={KnowMoreScreen}\n        options={{\n          title: '',\n          headerTransparent: false,\n          headerLeft: () => buttonLeft('knowMore'),\n        }}\n      />\n      <Stack.Screen\n        name=\"missionAndVision\"\n        component={MissionAndVisionScreen}\n        options={{\n          title: '',\n          headerTransparent: false,\n          headerLeft: () => buttonLeft('missionAndVision'),\n        }}\n      />\n      <Stack.Screen\n        name=\"search\"\n        component={Search}\n        options={{\n          title: '',\n          headerTransparent: true,\n          headerLeft: () => buttonLeft('search'),\n        }}\n      />\n      <Stack.Screen\n        name=\"FAQs\"\n        component={FAQScreen}\n        options={{\n          title: '',\n          headerLeft: () => buttonLeft(),\n        }}\n      />\n      <Stack.Screen\n        name=\"WebLinks\"\n        component={WebLinksScreen}\n        options={{\n          title: '',\n          headerLeft: () => buttonLeft(),\n        }}\n      />\n      <Stack.Screen\n        name=\"InfoCovid\"\n        component={CovidInfo}\n        options={{\n          title: '',\n          headerLeft: () => buttonLeft(),\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/navigation/StackNavigation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "Stack",
    "memberof": "src/navigation/StackNavigation.js",
    "static": true,
    "longname": "src/navigation/StackNavigation.js~Stack",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/navigation/StackNavigation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "StackNavigation",
    "memberof": "src/navigation/StackNavigation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/navigation/StackNavigation.js~StackNavigation",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/navigation/StackNavigation.js",
    "importStyle": "StackNavigation",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/navigation/StackNavigation.js",
    "static": true,
    "longname": "src/navigation/StackNavigation.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/navigation/StackNavigation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/screens/ContactScreen.js",
    "content": "import React, { useState } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image } from 'react-native';\nimport ContactCard from '../components/ContactCard';\nimport Colors from '../constants/Colors';\nimport { Picker } from '@react-native-picker/picker';\nimport { CONTACTS } from '../dummy-data/contacts';\nimport { TouchableOpacity } from 'react-native';\nimport { Linking } from 'react-native';\n\n/**\n * Pantalla que muestra información de contacto de los trabajadores de la entidad.\n * @param {prop} navigation - Contiene información básica de navegación\n * @property {string} contactEmail - Email de un contacto, cambia su valor dependiendo el valor que se seleccione en el componente Picker\n * @property {function} setContactEmail - Método de acceso indirecto para modificar la propieadad contactEmail.\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\n * @property {Array<Object>} CONTACTS - Arreglo que contiene información estática de los contactos Tin Marín.\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @see https://github.com/react-native-picker/picker\n * @see https://reactjs.org/docs/hooks-state.html\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\n */\nconst ContactScreen = ({ navigation }) => {\n  const [contactEmail, setContactEmail] = useState('');\n  return (\n    <ScrollView style={styles.container} showsVerticalScrollIndicator={true}>\n      <View style={styles.view}>\n        <Text style={styles.title}>Información de Contactos</Text>\n        <View style={styles.line}></View>\n        <View style={styles.containerlogo}>\n          <Image\n            style={styles.Logo}\n            source={require('../assets/logoTinMarin.png')}\n          />\n        </View>\n        <View style={styles.pickerContainer}>\n          <Picker\n            style={styles.picker}\n            mode=\"dropdown\"\n            selectedValue={contactEmail}\n            onValueChange={(itemValue, itemPosition) => {\n              setContactEmail(itemValue);\n            }}>\n            <Picker.Item label=\"Seleccione un contacto\" value=\"\" />\n            {CONTACTS.map((contact, key) => (\n              <Picker.Item\n                key={key}\n                label={contact.charge}\n                value={contact.email}\n              />\n            ))}\n          </Picker>\n        </View>\n        {CONTACTS.map(\n          (contact, key) =>\n            contact.email === contactEmail && (\n              <ContactCard\n                key={key}\n                charge={contact.charge}\n                color={Colors.blueColor}\n                name={contact.name}\n                email={contact.email}\n              />\n            ),\n        )}\n\n        <View style={styles.redes_sociales}>\n          <TouchableOpacity\n            onPress={() =>\n              Linking.openURL('https://www.facebook.com/MuseoTinMarin/')\n            }>\n            <Image\n              style={styles.minilogo}\n              source={require('../assets/facebook.png')}\n            />\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() =>\n              Linking.openURL('https://www.instagram.com/museotinmarin/')\n            }>\n            <Image\n              style={styles.minilogo}\n              source={require('../assets/instagram.png')}\n            />\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() =>\n              Linking.openURL('https://twitter.com/MuseoTinMarin')\n            }>\n            <Image\n              style={styles.minilogo}\n              source={require('../assets/twitter.png')}\n            />\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() =>\n              Linking.openURL(\n                'https://www.youtube.com/channel/UCdpMf5DQvZlcjfX4wum4LmQ',\n              )\n            }>\n            <Image\n              style={styles.minilogo}\n              source={require('../assets/youtube.png')}\n            />\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\n/**\n * @ignore\n */\nconst styles = StyleSheet.create({\n  pickerContainer: {\n    flexDirection: 'row',\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: '#d1d3e2',\n    overflow: 'hidden',\n  },\n  picker: {\n    height: 50,\n    width: '100%',\n    backgroundColor: '#858796',\n    color: 'white',\n  },\n  redes_sociales: {\n    marginTop: 10,\n    justifyContent: 'center',\n    width: 100,\n    flexDirection: 'row',\n    marginBottom: 50,\n  },\n  minilogo: {\n    margin: 5,\n    height: 60,\n    width: 60,\n  },\n  view: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  title: {\n    textAlign: 'center',\n    fontFamily: 'NunitoSans-Bold',\n    fontSize: 30,\n    color: '#566573',\n  },\n  line: {\n    height: 1,\n    width: '90%',\n    backgroundColor: '#D5D8DC',\n  },\n  Logo: {\n    width: 300,\n    height: 200,\n  },\n  containerlogo: {\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingVertical: 30,\n  },\n  container: {\n    flex: 1,\n    padding: 24,\n  },\n});\n\nexport default ContactScreen;\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/ContactScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/ContactScreen.js",
    "static": true,
    "longname": "src/screens/ContactScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/ContactScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 114,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "ContactScreen",
    "memberof": "src/screens/ContactScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/ContactScreen.js~ContactScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/ContactScreen.js",
    "importStyle": "ContactScreen",
    "description": "Pantalla que muestra información de contacto de los trabajadores de la entidad.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://github.com/react-native-picker/picker",
      "https://reactjs.org/docs/hooks-state.html"
    ],
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "contactEmail",
        "description": "Email de un contacto, cambia su valor dependiendo el valor que se seleccione en el componente Picker"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setContactEmail",
        "description": "Método de acceso indirecto para modificar la propieadad contactEmail."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      },
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "CONTACTS",
        "description": "Arreglo que contiene información estática de los contactos Tin Marín."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    }
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "src/screens/CovidInfo.js",
    "content": "import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Image,\n  SafeAreaView,\n  TouchableOpacity,\n  Dimensions,\n} from 'react-native';\nimport { Card, Icon, Text } from 'react-native-elements';\nimport Colors from '../constants/Colors';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { coinButton } from '../helpers/audio';\n\n/**\n * Pantalla que muestra los detalles de una recomendación para prevenir COVID-19\n * @param {prop} navigation - Contiene información básica de navegación\n * @param {prop} route - Recibe parametros importantes para mostrar en pantalla\n * @param {string} title - Describe el título de una recomendación.\n * @param {Array<string>} description - Contiene un arreglo de párrafos.\n * @param {string} image - Contiene la imagen relacionada con la recomendación.\n * @param {Array<string>} steps - Contiene un arreglo con los pasos a seguir.\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @see https://reactnavigation.org/docs/route-prop/\n * @return {SafeAreaView} Retorna un componente que contiene maquetada la vista\n */\nconst CovidInfo = ({ navigation, route }) => {\n  const { title, description, image, steps } = route.params;\n\n  return (\n    <SafeAreaView>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <View style={styles.view}>\n          <Text style={styles.title}>{title}</Text>\n          <View style={styles.line}></View>\n          <MainParagraph description={description} />\n          <RenderImage url={image} />\n          <Text style={styles.subtitle}>Recomendaciones a Seguir</Text>\n          <FollowSteps steps={steps} />\n          <Footer navigation={navigation} />\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\n/**\n * Este componente muestra el párrafo principal que contiene la descripción\n * de una recomendación.\n * Se llama en la pantalla {@link CovidInfo}.\n * @param {Array<string>} description - Contiene una lista de tipo string con la descripción\n * @return {View} Devuelve una vista con los párrafos iterados en un componente <Text>\n */\nexport const MainParagraph = ({ description }) => {\n  return (\n    <View style={styles.view}>\n      {description.map((paragraph, index) => (\n        <Text key={index} style={styles.paragraph}>{`${paragraph}\\n`}</Text>\n      ))}\n    </View>\n  );\n};\n\n/**\n * Este componente se encarga de Renderizar una imagen.\n * Se llama en la pantalla {@link CovidInfo}.\n * @param {string} url - Contiene la url de una imagen a mostrar.\n * @return {View} Retorna una vista con la imagen cargada.\n */\nexport const RenderImage = ({ url }) => {\n  return (\n    <View style={{ ...styles.imageContainer }}>\n      <Image style={styles.image} source={{ uri: url }} />\n    </View>\n  );\n};\n\n/**\n * Componente que muestra los pasos principales para seguir una recomendación.\n * Se llama en la pantalla {@link CovidInfo}.\n * @param {Array<string>} steps - contiene una lista de tipo string con la información de recomenadaciones a seguir.\n * @return {Card} Devuelve una tarjeta con el listado de recomendaciones a seguir.\n */\nexport const FollowSteps = ({ steps }) => {\n  return (\n    <Card containerStyle={{ borderRadius: 15 }}>\n      <Card.Title style={styles.card_title}>\n        A continuación se muestran las siguientes indicaciones:\n      </Card.Title>\n      <View>\n        {steps.map((step, index) => (\n          <View key={index}>\n            <Text style={{ ...styles.paragraph }}>{`\\u2022 ${step}`}</Text>\n            <Card.Divider />\n          </View>\n        ))}\n      </View>\n    </Card>\n  );\n};\n\n/**\n * Componente que muestra un pie de página.\n * Se llama en la pantalla {@link CovidInfo}.\n * @param {prop} navigation\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @return {View} Devuelve una vista con Enlaces\n */\nexport const Footer = ({ navigation }) => {\n  return (\n    <View style={styles.footer}>\n      <FooterLinks\n        text=\"Preguntas Frecuentes\"\n        name=\"question-circle\"\n        color=\"darkturquoise\"\n        size={75}\n        navigation={navigation}\n        screenRouteName=\"FAQs\"\n      />\n      <FooterLinks\n        text=\"Sitios de Interes\"\n        name=\"exclamation-circle\"\n        color=\"green\"\n        size={75}\n        navigation={navigation}\n        screenRouteName=\"WebLinks\"\n      />\n    </View>\n  );\n};\n\n/**\n * Componente para mostrar un Enlace del pie de página que al presionarlo dirige a otra pantalla.\n * Se llama en el componente {@link Footer}.\n * @param {string} name - Nombre del Icono a mostrar.\n * @param {string} color - Color del Icono a mostrar.\n * @param {number} size - Tamaño del Icono.\n * @param {string} text - Texto a mostrar del enlace.\n * @param {string} screenRouteName - Nombre de la pantalla a la cuál se navegará.\n * @param {prop} navigation\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @return {TouchableOpacity} Devuelve una vista presionable\n */\nexport const FooterLinks = ({\n  navigation,\n  name,\n  color,\n  size,\n  text,\n  screenRouteName,\n}) => {\n  return (\n    <TouchableOpacity\n      style={{ borderRadius: 15 }}\n      onPressIn={coinButton}\n      onPress={() => {\n        navigation.navigate(screenRouteName);\n      }}>\n      <View style={styles.footer_column}>\n        <Icon\n          name={name}\n          type=\"font-awesome-5\"\n          solid\n          color={color}\n          size={size}\n        />\n        <Text style={styles.footer_links}>{text}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default CovidInfo;\n\n/**\n * @ignore\n */\nconst styles = StyleSheet.create({\n  view: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginHorizontal: 10,\n  },\n  title: {\n    fontFamily: 'NunitoSans-Bold',\n    marginTop: 20,\n    fontSize: 30,\n    color: '#566573',\n  },\n  paragraph: {\n    fontFamily: 'NunitoSans-Bold',\n    marginVertical: 10,\n    textAlign: 'justify',\n    marginBottom: 10,\n    fontSize: 15,\n  },\n  imageContainer: {\n    width: '95%',\n    height: 200,\n  },\n  image: { width: '100%', height: 200, borderRadius: 15 },\n  subtitle: {\n    textAlign: 'center',\n    fontFamily: 'NunitoSans-Bold',\n    marginTop: 20,\n    fontSize: 25,\n    color: 'red',\n    fontWeight: 'bold',\n  },\n  subtitleView: {\n    flexDirection: 'row',\n    paddingLeft: 10,\n    paddingTop: 5,\n  },\n  card_title: {\n    fontFamily: 'NunitoSans-Bold',\n    textAlign: 'justify',\n    backgroundColor: Colors.primaryColor,\n    color: 'white',\n    marginTop: -15,\n    marginHorizontal: -16,\n    padding: 15,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n  },\n  footer: {\n    marginVertical: 20,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  footer_column: {\n    width: Dimensions.get('window').width / 2,\n    marginHorizontal: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  footer_links: {\n    // padding: 10,\n    fontSize: Dimensions.get('window').width > 400 ? 15 : 12,\n    color: Colors.primaryColor,\n  },\n  line: {\n    height: 1,\n    width: '90%',\n    backgroundColor: '#D5D8DC',\n  },\n  ul: {\n    width: 5,\n    height: 5,\n    backgroundColor: 'black',\n    borderRadius: 15,\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/CovidInfo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "MainParagraph",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~MainParagraph",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "{MainParagraph}",
    "description": "Este componente muestra el párrafo principal que contiene la descripción\nde una recomendación.\nSe llama en la pantalla {@link CovidInfo}.",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "Contiene una lista de tipo string con la descripción"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "View"
      ],
      "spread": false,
      "description": "Devuelve una vista con los párrafos iterados en un componente <Text>"
    }
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "RenderImage",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~RenderImage",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "{RenderImage}",
    "description": "Este componente se encarga de Renderizar una imagen.\nSe llama en la pantalla {@link CovidInfo}.",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Contiene la url de una imagen a mostrar."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "View"
      ],
      "spread": false,
      "description": "Retorna una vista con la imagen cargada."
    }
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "FollowSteps",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~FollowSteps",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "{FollowSteps}",
    "description": "Componente que muestra los pasos principales para seguir una recomendación.\nSe llama en la pantalla {@link CovidInfo}.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "steps",
        "description": "contiene una lista de tipo string con la información de recomenadaciones a seguir."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Card"
      ],
      "spread": false,
      "description": "Devuelve una tarjeta con el listado de recomendaciones a seguir."
    }
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "Footer",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~Footer",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "{Footer}",
    "description": "Componente que muestra un pie de página.\nSe llama en la pantalla {@link CovidInfo}.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/"
    ],
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "View"
      ],
      "spread": false,
      "description": "Devuelve una vista con Enlaces"
    }
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "FooterLinks",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~FooterLinks",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "{FooterLinks}",
    "description": "Componente para mostrar un Enlace del pie de página que al presionarlo dirige a otra pantalla.\nSe llama en el componente {@link Footer}.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/"
    ],
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Nombre del Icono a mostrar."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "Color del Icono a mostrar."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Tamaño del Icono."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "Texto a mostrar del enlace."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "screenRouteName",
        "description": "Nombre de la pantalla a la cuál se navegará."
      },
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TouchableOpacity"
      ],
      "spread": false,
      "description": "Devuelve una vista presionable"
    }
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/CovidInfo.js",
    "static": true,
    "longname": "src/screens/CovidInfo.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 178,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "CovidInfo",
    "memberof": "src/screens/CovidInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidInfo.js~CovidInfo",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidInfo.js",
    "importStyle": "CovidInfo",
    "description": "Pantalla que muestra los detalles de una recomendación para prevenir COVID-19",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactnavigation.org/docs/route-prop/"
    ],
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      },
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Recibe parametros importantes para mostrar en pantalla"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Describe el título de una recomendación."
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "Contiene un arreglo de párrafos."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": "Contiene la imagen relacionada con la recomendación."
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "steps",
        "description": "Contiene un arreglo con los pasos a seguir."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Retorna un componente que contiene maquetada la vista"
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "src/screens/CovidScreen.js",
    "content": "import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Image,\n  SafeAreaView,\n  ActivityIndicator,\n} from 'react-native';\nimport { getAllCovidRecommendations } from '../api/covid';\nimport { Text } from 'react-native-elements';\nimport GenericCard from '../components/GenericCard';\nimport Colors from '../constants/Colors';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { size } from 'lodash';\n\n/**\n * Pantalla que muestra una lista de tarjetas sobre recomendaciones sobre el COVID-19\n * @param {prop} navigation - Contiene información básica de navegación\n * @property {Array<Object>} covid - Lista que contiene Objetos con estructura de una Recomendación Covid-19.\n * @property {function} setCovid - Método de acceso indirecto para modificar la propieadad covid.\n * @property {boolean} loading - Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene.\n * @property {function} setLoading - Método de acceso indirecto para modificar la propieadad loading.\n * @property {boolean} swapColor - Variable auxiliar para cambiar color de tarjetas cada posición: (índice mod 2).\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\n * @property {Promise} getAllCovidRecommendations - {@link getAllCovidRecommendations} | Promesa que devuelve la información dependiendo la respuesta del servidor.\n * @property {function} size - Función de la librería lodash | Devuelve el tamaño de una colección.\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @see https://reactjs.org/docs/hooks-effect.html\n * @see https://lodash.com/docs/4.17.15#size\n * @see https://reactjs.org/docs/hooks-state.html\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n * @return {SafeAreaView} Regresa una layout con la maquetación de la pantalla\n */\nconst CovidScreen = ({ navigation }) => {\n  // const [covidInfo, setCovidInfo] = useState(null);\n  const [covid, setCovid] = useState(null);\n  const [loading, setLoading] = useState(true);\n  let swapColor = true;\n\n  useEffect(() => {\n    getAllCovidRecommendations().then((response) => {\n      // console.log(response);\n      setCovid(response);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <SafeAreaView>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {loading ? (\n          <ActivityIndicator\n            style={{\n              marginTop: 200,\n            }}\n            size=\"large\"\n            color=\"#0000ff\"\n          />\n        ) : size(covid) == 0 ? (\n          <Text style={styles.text}>No se encontraron Recomendaciones</Text>\n        ) : (\n          <View style={styles.view}>\n            <Text style={styles.title}>Recomendaciones para el Covid-19</Text>\n            <View style={styles.line}></View>\n            <CovidList\n              covidRecs={covid}\n              navigation={navigation}\n              swapColor={swapColor}\n            />\n          </View>\n        )}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\n/**\n * Componente que se utiliza para iterar las tarjetas\n * @param {prop} navigation\n * @param {Array<string>} covidRecs - Contiene la información del estado covid.\n * @param {boolean} swapColor - Variable de control para intercambiar color.\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @return {GenericCard} Retorna una lista de tarjetas de tipo {@link GenericCard}\n */\nconst CovidList = ({ navigation, covidRecs, swapColor }) => {\n  return covidRecs.map((covid, index) => {\n    if (index % 2 === 0) swapColor = !swapColor;\n    return (\n      <GenericCard\n        key={index}\n        id={covid._id}\n        title={covid.title}\n        description={covid.description}\n        imageURL={covid.image}\n        steps={covid.steps}\n        color={swapColor ? Colors.green : Colors.magenta}\n        textBtn=\"Saber Más\"\n        navigation={navigation}\n        screenName=\"InfoCovid\"\n      />\n    );\n  });\n};\n\nexport default CovidScreen;\n\n/**\n * @ignore\n */\nconst styles = StyleSheet.create({\n  view: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginHorizontal: 10,\n  },\n  title: {\n    fontFamily: 'NunitoSans-Bold',\n    marginTop: 20,\n    fontSize: 30,\n    color: '#566573',\n    textAlign: 'center',\n  },\n\n  line: {\n    height: 1,\n    width: '90%',\n    backgroundColor: '#D5D8DC',\n  },\n  text: {\n    fontFamily: 'NunitoSans-Bold',\n    textAlign: 'center',\n    fontSize: 20,\n    color: 'gray',\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/CovidScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "CovidList",
    "memberof": "src/screens/CovidScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidScreen.js~CovidList",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/CovidScreen.js",
    "importStyle": null,
    "description": "Componente que se utiliza para iterar las tarjetas",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/"
    ],
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "covidRecs",
        "description": "Contiene la información del estado covid."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "swapColor",
        "description": "Variable de control para intercambiar color."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "GenericCard"
      ],
      "spread": false,
      "description": "Retorna una lista de tarjetas de tipo {@link GenericCard}"
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/CovidScreen.js",
    "static": true,
    "longname": "src/screens/CovidScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/CovidScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 111,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "CovidScreen",
    "memberof": "src/screens/CovidScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/CovidScreen.js~CovidScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/CovidScreen.js",
    "importStyle": "CovidScreen",
    "description": "Pantalla que muestra una lista de tarjetas sobre recomendaciones sobre el COVID-19",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactjs.org/docs/hooks-effect.html",
      "https://lodash.com/docs/4.17.15#size",
      "https://reactjs.org/docs/hooks-state.html",
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
    ],
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "covid",
        "description": "Lista que contiene Objetos con estructura de una Recomendación Covid-19."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setCovid",
        "description": "Método de acceso indirecto para modificar la propieadad covid."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "loading",
        "description": "Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setLoading",
        "description": "Método de acceso indirecto para modificar la propieadad loading."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "swapColor",
        "description": "Variable auxiliar para cambiar color de tarjetas cada posición: (índice mod 2)."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getAllCovidRecommendations",
        "description": "{@link getAllCovidRecommendations} | Promesa que devuelve la información dependiendo la respuesta del servidor."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Función de la librería lodash | Devuelve el tamaño de una colección."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Regresa una layout con la maquetación de la pantalla"
    }
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/screens/DonationScreen.js",
    "content": "import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\n/**\n * @ignore\n */\nconst DonationScreen = () => {\n  return (\n    <View>\n      <Text>Donation Screen</Text>\n    </View>\n  );\n};\n\nexport default DonationScreen;\n\n/**\n * @ignore\n */\nconst styles = StyleSheet.create({});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/DonationScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/DonationScreen.js",
    "static": true,
    "longname": "src/screens/DonationScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/DonationScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 20,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "DonationScreen",
    "memberof": "src/screens/DonationScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/DonationScreen.js~DonationScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/DonationScreen.js",
    "importStyle": "DonationScreen",
    "description": "",
    "lineNumber": 7,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "file",
    "name": "src/screens/EventsScreen.js",
    "content": "import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\n/**\n * @ignore\n */\nconst EventsScreen = () => {\n  return (\n    <View>\n      <Text>Pantalla eventos</Text>\n    </View>\n  );\n};\n\nexport default EventsScreen;\n\n/**\n * @ignore\n */\nconst styles = StyleSheet.create({});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/EventsScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/EventsScreen.js",
    "static": true,
    "longname": "src/screens/EventsScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/EventsScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 20,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "EventsScreen",
    "memberof": "src/screens/EventsScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/EventsScreen.js~EventsScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/EventsScreen.js",
    "importStyle": "EventsScreen",
    "description": "",
    "lineNumber": 7,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "src/screens/ExhibitsScreen.js",
    "content": "import { map } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  ActivityIndicator,\n} from 'react-native';\nimport { getAllExhibitions } from '../api/exhibitions';\nimport Card from '../components/Card';\nimport Colors from '../constants/Colors';\nimport { size } from 'lodash';\n\n/**\n * Pantalla que muestra una lista de tarjetas sobre las Exhibiciones\n * @param {prop} navigation - Contiene información básica de navegación\n * @property {Array<Object>} exhibitions - Lista que contiene Objetos con estructura de una Recomendación Covid-19.\n * @property {function} setExhibitions - Método de acceso indirecto para modificar la propieadad covid.\n * @property {boolean} loading - Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene.\n * @property {function} setLoading - Método de acceso indirecto para modificar la propieadad loading.\n * @property {boolean} swapColor - Variable auxiliar para cambiar color de tarjetas cada posición: (índice mod 2).\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\n * @property {Promise} getAllExhibitions - {@link getAllExhibitions} | Promesa que devuelve la información dependiendo la respuesta del servidor.\n * @property {function} size - Función de la librería lodash | Devuelve el tamaño de una colección.\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @see https://reactjs.org/docs/hooks-effect.html\n * @see https://lodash.com/docs/4.17.15#size\n * @see https://reactjs.org/docs/hooks-state.html\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\n */\nconst ExhibitsScreen = ({ navigation }) => {\n  const [exhibitions, setExhibitions] = useState(null);\n  const [loading, setLoading] = useState(true);\n  let swapColor = true;\n\n  useEffect(() => {\n    getAllExhibitions().then((response) => {\n      setExhibitions(response);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <ScrollView showsVerticalScrollIndicator={false}>\n      {loading ? (\n        <ActivityIndicator\n          style={{\n            marginTop: 200,\n          }}\n          size=\"large\"\n          color=\"#0000ff\"\n        />\n      ) : size(exhibitions) == 0 ? (\n        <Text style={styles.text}>No se encontraron Exhibiciones</Text>\n      ) : (\n        <View style={styles.view}>\n          <Text style={styles.title}>Exhibiciones</Text>\n          <View style={styles.line}></View>\n          {map(exhibitions, (exhibition, index) => {\n            if (index % 2 === 0) {\n              swapColor = !swapColor;\n            }\n            return (\n              <Card\n                key={exhibition._id}\n                index={index}\n                textBtn=\"Conócela\"\n                color={swapColor ? Colors.green : Colors.magenta}\n                exhibition={exhibition}\n                navigation={navigation}\n              />\n            );\n          })}\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\n/**\n *@ignore\n */\nconst styles = StyleSheet.create({\n  view: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  title: {\n    fontFamily: 'NunitoSans-Bold',\n    marginTop: 20,\n    fontSize: 30,\n    color: '#566573',\n  },\n  line: {\n    height: 1,\n    width: '90%',\n    backgroundColor: '#D5D8DC',\n  },\n  text: {\n    fontFamily: 'NunitoSans-Bold',\n    textAlign: 'center',\n    fontSize: 20,\n    color: 'gray',\n  },\n});\n\nexport default ExhibitsScreen;\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/ExhibitsScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/ExhibitsScreen.js",
    "static": true,
    "longname": "src/screens/ExhibitsScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/ExhibitsScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 86,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "ExhibitsScreen",
    "memberof": "src/screens/ExhibitsScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/ExhibitsScreen.js~ExhibitsScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/ExhibitsScreen.js",
    "importStyle": "ExhibitsScreen",
    "description": "Pantalla que muestra una lista de tarjetas sobre las Exhibiciones",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactjs.org/docs/hooks-effect.html",
      "https://lodash.com/docs/4.17.15#size",
      "https://reactjs.org/docs/hooks-state.html",
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
    ],
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "exhibitions",
        "description": "Lista que contiene Objetos con estructura de una Recomendación Covid-19."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setExhibitions",
        "description": "Método de acceso indirecto para modificar la propieadad covid."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "loading",
        "description": "Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setLoading",
        "description": "Método de acceso indirecto para modificar la propieadad loading."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "swapColor",
        "description": "Variable auxiliar para cambiar color de tarjetas cada posición: (índice mod 2)."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getAllExhibitions",
        "description": "{@link getAllExhibitions} | Promesa que devuelve la información dependiendo la respuesta del servidor."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Función de la librería lodash | Devuelve el tamaño de una colección."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    }
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "src/screens/FAQScreen.js",
    "content": "import { map } from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  SafeAreaView,\n  ActivityIndicator,\n} from 'react-native';\nimport { getAllFAQs } from '../api/faqs';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Card } from 'react-native-elements';\nimport Colors from '../constants/Colors';\nimport { size } from 'lodash';\n\n/**\n * Pantalla que muestra una lista de tarjetas con preguntas frecuentes.\n * @param {prop} navigation - Contiene información básica de navegación\n * @property {Array<Object>} faqs - Lista que contiene Objetos con estructura de una Pregunta Frecuente.\n * @property {function} setFaqs - Método de acceso indirecto para modificar la propieadad faqs.\n * @property {boolean} loading - Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene.\n * @property {function} setLoading - Método de acceso indirecto para modificar la propieadad loading.\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\n * @property {Promise} getAllFAQs - {@link getAllFAQs} | Promesa que devuelve la información dependiendo la respuesta del servidor.\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @see https://reactjs.org/docs/hooks-effect.html\n * @see https://reactjs.org/docs/hooks-state.html\n * @see @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n * @return {SafeAreaView} Regreesa una layout con la maquetación de la pantalla\n */\nconst FAQScreen = ({ navigation }) => {\n  const [faqs, setFaqs] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getAllFAQs().then((response) => {\n      setFaqs(response);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <SafeAreaView>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {loading ? (\n          <ActivityIndicator\n            style={{\n              marginTop: 200,\n            }}\n            size=\"large\"\n            color=\"#0000ff\"\n          />\n        ) : size(faqs) == 0 ? (\n          <Text style={styles.text}>\n            No se encontraron Preguntas Frecuentes\n          </Text>\n        ) : (\n          <View style={styles.view}>\n            <Text style={styles.title}>Preguntas Frecuentes</Text>\n            <View style={styles.line}></View>\n            {faqs.map((faq, index) => {\n              return (\n                <Card key={index} containerStyle={{ borderRadius: 15 }}>\n                  <Card.Title style={styles.card_title}>\n                    {faq.question}\n                  </Card.Title>\n                  <View>\n                    <Text style={styles.paragraph}>{faq.answer}</Text>\n                  </View>\n                </Card>\n              );\n            })}\n          </View>\n        )}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\n/**\n * @ignore\n */\nconst styles = StyleSheet.create({\n  view: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginHorizontal: 10,\n    marginBottom: 30,\n  },\n  title: {\n    fontFamily: 'NunitoSans-Bold',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 30,\n    color: '#566573',\n  },\n  paragraph: {\n    fontFamily: 'NunitoSans-Bold',\n    // marginVertical: 10,\n    textAlign: 'justify',\n    marginBottom: 10,\n    fontSize: 15,\n  },\n  card_title: {\n    fontFamily: 'NunitoSans-Bold',\n    textAlign: 'justify',\n    backgroundColor: Colors.primaryColor,\n    color: 'white',\n    marginTop: -15,\n    marginHorizontal: -16,\n    padding: 15,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n  },\n  line: {\n    height: 1,\n    width: '90%',\n    backgroundColor: '#D5D8DC',\n  },\n  text: {\n    fontFamily: 'NunitoSans-Bold',\n    textAlign: 'center',\n    fontSize: 20,\n    color: 'gray',\n  },\n});\nexport default FAQScreen;\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/FAQScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/FAQScreen.js",
    "static": true,
    "longname": "src/screens/FAQScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/FAQScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 84,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "function",
    "name": "FAQScreen",
    "memberof": "src/screens/FAQScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/FAQScreen.js~FAQScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/FAQScreen.js",
    "importStyle": "FAQScreen",
    "description": "Pantalla que muestra una lista de tarjetas con preguntas frecuentes.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactjs.org/docs/hooks-effect.html",
      "https://reactjs.org/docs/hooks-state.html",
      ""
    ],
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "faqs",
        "description": "Lista que contiene Objetos con estructura de una Pregunta Frecuente."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setFaqs",
        "description": "Método de acceso indirecto para modificar la propieadad faqs."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "loading",
        "description": "Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setLoading",
        "description": "Método de acceso indirecto para modificar la propieadad loading."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getAllFAQs",
        "description": "{@link getAllFAQs} | Promesa que devuelve la información dependiendo la respuesta del servidor."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Regreesa una layout con la maquetación de la pantalla"
    }
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "src/screens/HomeScreen.js",
    "content": "import { noConflict } from 'lodash';\nimport React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  ScrollView,\n  TouchableOpacity,\n} from 'react-native';\nimport Covid from '../assets/Covid.jpeg';\nimport FAQs from '../assets/FAQs.jpeg';\nimport WebLinks from '../assets/WebLinks.jpg';\nimport Sugerencias from '../assets/Sugerencias.png';\nimport Exhibicion from '../assets/Exhibicion.jpg';\nimport {\n  playButtonPress,\n  heyListenButton,\n  wowButton,\n  msnButton,\n  catcButton,\n  ohhButton,\n} from '../helpers/audio';\nimport ConocenosMas from '../assets/ConocenosMas.jpg';\n\n/**\n * Pantalla Principal que contiene una lista de tarjetas con los accesos directos de los diferentes\n * módulos que posee la aplicación.\n * @param {prop} navigation - Contiene información básica de navegación\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla\n */\nconst HomeScreen = ({ navigation }) => {\n  return (\n    <ScrollView>\n      <View style={styles.view}>\n        <TouchableOpacity onPress={playButtonPress}>\n          <Text style={styles.title}>Menu Principal</Text>\n        </TouchableOpacity>\n\n        <View style={styles.line}></View>\n\n        <TouchableOpacity\n          onPressIn={playButtonPress}\n          onPress={() => {\n            navigation.navigate('exhibits');\n          }}\n          style={styles.cardContainer}>\n          <ImageBackground\n            imageStyle={{ opacity: 0.5, ...styles.image }}\n            source={Exhibicion}\n            style={styles.card}\n            borderRadius={10}>\n            <View style={styles.textContainer}>\n              <Text style={styles.text}>Exhibiciones</Text>\n              <Text style={styles.text2}>\n                Ven y conoce todas nuestras exhibiciones disponibles para que\n                las puedas visitar !\n              </Text>\n            </View>\n          </ImageBackground>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          onPressIn={heyListenButton}\n          onPress={() => {\n            navigation.navigate('covid');\n          }}\n          style={styles.cardContainer}>\n          <ImageBackground\n            imageStyle={{ opacity: 0.5, ...styles.image }}\n            source={Covid}\n            style={styles.card}\n            borderRadius={10}>\n            <View style={styles.textContainer}>\n              <Text style={styles.text}>Recomendaciones Covid-19</Text>\n              <Text style={styles.text2}>\n                Toma en cuenta las siguientes recomendaciones al visitarnos!\n              </Text>\n            </View>\n          </ImageBackground>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          onPressIn={ohhButton}\n          onPress={() => {\n            navigation.navigate('knowMore');\n          }}\n          style={styles.cardContainer}>\n          <ImageBackground\n            imageStyle={{ opacity: 0.5, ...styles.image }}\n            source={ConocenosMas}\n            style={styles.card}\n            borderRadius={10}>\n            <View style={styles.textContainer}>\n              <Text style={styles.text}>Conocenos Más</Text>\n              <Text style={styles.text2}>\n                Aqui puedes encontrar informacion de contacto, estamos a la\n                orden!\n              </Text>\n            </View>\n          </ImageBackground>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          onPressIn={msnButton}\n          onPress={() => {\n            navigation.navigate('comments');\n          }}\n          style={styles.cardContainer}>\n          <ImageBackground\n            imageStyle={{ opacity: 0.5, ...styles.image }}\n            source={Sugerencias}\n            style={styles.card}\n            borderRadius={10}>\n            <View style={styles.textContainer}>\n              <Text style={styles.text}>Sugerencias</Text>\n              <Text style={styles.text2}>\n                Para seguir mejorando, puedes dejarnos cualquier duda o\n                inquietud!\n              </Text>\n            </View>\n          </ImageBackground>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          onPressIn={catcButton}\n          onPress={() => {\n            navigation.navigate('FAQs');\n          }}\n          style={styles.cardContainer}>\n          <ImageBackground\n            imageStyle={{ opacity: 0.5, ...styles.image }}\n            source={FAQs}\n            style={styles.card}\n            borderRadius={10}>\n            <View style={styles.textContainer}>\n              <Text style={styles.text}>Preguntas Frecuentes</Text>\n              <Text style={styles.text2}>\n                Por si tienes alguna consulta para resolver de forma rápida!\n              </Text>\n            </View>\n          </ImageBackground>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          onPressIn={wowButton}\n          onPress={() => {\n            navigation.navigate('WebLinks');\n          }}\n          style={{ ...styles.cardContainer, marginBottom: 30 }}>\n          <ImageBackground\n            imageStyle={{ opacity: 0.5, ...styles.image }}\n            source={WebLinks}\n            style={styles.card}\n            borderRadius={10}>\n            <View style={styles.textContainer}>\n              <Text style={styles.text}>Sitios de Interés</Text>\n              <Text style={styles.text2}>\n                Si deseas profundizar un poco más en otros temas relevantes!\n              </Text>\n            </View>\n          </ImageBackground>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n};\n\n/**\n * @ignore\n */\nconst styles = StyleSheet.create({\n  image: {\n    width: '100%',\n  },\n  view: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  title: {\n    fontFamily: 'NunitoSans-Bold',\n    marginTop: 20,\n    fontSize: 30,\n    color: '#566573',\n    fontWeight: 'bold',\n  },\n  line: {\n    height: 1,\n    width: '90%',\n    backgroundColor: '#D5D8DC',\n  },\n  card: {\n    width: '90%',\n    height: 200,\n    backgroundColor: 'rgb(0,0,0)',\n    borderRadius: 10,\n  },\n\n  cardContainer: {\n    width: '100%',\n    alignItems: 'center',\n    marginTop: 40,\n  },\n  textContainer: {\n    marginLeft: 20,\n    marginTop: 20,\n  },\n  text: {\n    fontFamily: 'NunitoSans-Bold',\n    color: 'white',\n    fontSize: 25,\n  },\n  text2: {\n    fontFamily: 'NunitoSans-Bold',\n    color: 'white',\n    fontSize: 15,\n  },\n});\n\nexport default HomeScreen;\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/HomeScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/HomeScreen.js",
    "static": true,
    "longname": "src/screens/HomeScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/HomeScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 173,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "HomeScreen",
    "memberof": "src/screens/HomeScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/HomeScreen.js~HomeScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/HomeScreen.js",
    "importStyle": "HomeScreen",
    "description": "Pantalla Principal que contiene una lista de tarjetas con los accesos directos de los diferentes\nmódulos que posee la aplicación.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/"
    ],
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla"
    }
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "src/screens/InfoCard.js",
    "content": "import React, { useState, useEffect } from 'react';\nimport { StyleSheet, SafeAreaView, View, Image } from 'react-native';\nimport { IconButton, Text, Title } from 'react-native-paper';\nimport { getExhibitionById } from '../api/exhibitions';\nimport ModalBody from '../components/ModalBody';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { map, size } from 'lodash';\n\n/**\n * Pantalla que muestra los detalles de una Exhibición.\n * @param {prop} route - Recibe parametros importantes para mostrar en pantalla\n * @param {string} _id - ID asociado a una Exhibición.\n * @property {Object} exhibition - Objeto que contiene la estructura de una Exhibición.\n * @property {function} setExhibition - Método de acceso indirecto para modificar la propieadad exhibition.\n * @property {boolean} visible - Variable auxiliar para controlar la visibilidad de un componente <Modal>.\n * @property {function} setVisible - Método de acceso indirecto para modificar la propieadad visible.\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\n * @property {Promise} getExhibitionById - {@link getExhibitionById} | Promesa que devuelve la información dependiendo la respuesta del servidor.\n * @property {function} size - Función de la librería lodash | Devuelve el tamaño de una colección.\n * @property {function} map - Función de la librería lodash | Crea un arreglo de valores a partir de cada elemento de una colección.\n * @listens {onPress} | El método showModal se dispara cuando ocurre este evento en un componente <ModalButton>.\n * @see https://lodash.com/docs/4.17.15#size\n * @see https://reactjs.org/docs/hooks-state.html\n * @see https://reactnavigation.org/docs/route-prop/\n * @see https://lodash.com/docs/4.17.15#map\n * @return {SafeAreaView} Retorna un componente que contiene maquetada la vista\n */\nconst InfoCard = ({ route }) => {\n  const { _id } = route.params;\n  const [visible, setVisible] = useState(false);\n  const [exhibition, setExhibition] = useState(null);\n\n  const showModal = () => setVisible(!visible);\n\n  useEffect(() => {\n    getExhibitionById(_id).then((response) => {\n      setExhibition(response);\n    });\n  }, []);\n\n  if (!exhibition) return null;\n\n  const [imageURL] = exhibition.images;\n  const [logoURL] = exhibition.sponsorLogo;\n\n  return (\n    <SafeAreaView>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <InfoImage path={imageURL} />\n        <InfoModal setVisible={setVisible} />\n        <InfoTitle exhibition={exhibition} />\n        <Text style={styles.overview}>{exhibition.description}</Text>\n        {logoURL && <InfoSponsor url={logoURL} />}\n        <InfoFooter exhibition={exhibition} />\n      </ScrollView>\n      <ModalBody\n        visible={visible}\n        showModal={showModal}\n        curiousInfo={exhibition.curiousInfo}\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default InfoCard;\n\n/**\n *@ignore\n */\nconst InfoImage = ({ path }) => {\n  return (\n    <View style={styles.viewPoster}>\n      <Image style={styles.poster} source={{ uri: path }} />\n    </View>\n  );\n};\n\n/**\n *@ignore\n */\nconst InfoModal = ({ setVisible }) => {\n  return (\n    <View style={styles.viewModal}>\n      <IconButton\n        icon=\"information-variant\"\n        size={30}\n        color=\"#000\"\n        style={styles.info}\n        onPress={() => setVisible(true)}\n      />\n    </View>\n  );\n};\n\n/**\n *@ignore\n */\nconst InfoTitle = ({ exhibition }) => {\n  return (\n    <View style={styles.viewInfo}>\n      <Title style={{ color: '#F29F05', fontWeight: 'bold', fontSize: 23 }}>\n        {exhibition.name}\n      </Title>\n    </View>\n  );\n};\n\n/**\n *@ignore\n */\nconst InfoSponsor = ({ url }) => {\n  return (\n    <View style={styles.viewSponsor}>\n      <Title\n        style={{\n          color: 'black',\n          fontSize: 17,\n          fontWeight: 'bold',\n          marginHorizontal: 30,\n          marginTop: 5,\n        }}>\n        Patrocina:{' '}\n      </Title>\n      <Image source={{ uri: url }} style={styles.imgSponsor} />\n    </View>\n  );\n};\n\n/**\n *@ignore\n */\nconst InfoFooter = ({ exhibition }) => {\n  const {\n    minimumAge,\n    maximumAge,\n    educationArea,\n    duration,\n    capacity,\n  } = exhibition;\n  return (\n    <View style={styles.viewFooter}>\n      <FooterItem\n        title=\"Educación:\"\n        desc={educationArea}\n        icon=\"book-open-variant\"\n      />\n      <FooterItem\n        title=\"Edades:\"\n        desc={`${minimumAge} a ${maximumAge} años`}\n        icon=\"human-male-boy\"\n      />\n      <FooterItem\n        title=\"Duración:\"\n        desc={duration == 1 ? `${duration} minuto` : `${duration} minutos`}\n        icon=\"clock-time-three-outline\"\n      />\n      <FooterItem\n        title=\"Capacidad:\"\n        desc={capacity == 1 ? `${capacity} niño` : `${capacity} niños`}\n        icon=\"account-group\"\n      />\n    </View>\n  );\n};\n\n/**\n *@ignore\n */\nconst FooterItem = ({ title, desc, icon }) => {\n  return (\n    <View>\n      <IconButton\n        icon={icon}\n        size={30}\n        color=\"#F87311\"\n        style={styles.footerItem}\n      />\n      <Text style={[styles.textItem, { fontWeight: 'bold' }]}>{title}</Text>\n      {Array.isArray(desc) ? (\n        map(desc, (d, index) => (\n          <Text key={index} style={styles.textItem}>\n            {d}\n            {index !== size(desc) - 1 && ', '}\n          </Text>\n        ))\n      ) : (\n        <Text style={styles.textItem}>{desc}</Text>\n      )}\n    </View>\n  );\n};\n\n/**\n *@ignore\n */\nconst styles = StyleSheet.create({\n  viewPoster: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 10,\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n  },\n  poster: {\n    width: '100%',\n    height: 500,\n    borderBottomLeftRadius: 30,\n    borderBottomRightRadius: 30,\n  },\n  info: {\n    backgroundColor: '#fff',\n    marginTop: -40,\n    marginRight: 30,\n    width: 60,\n    height: 60,\n    borderRadius: 100,\n    borderColor: '#000',\n    borderWidth: 0.15,\n  },\n  viewInfo: {\n    marginHorizontal: 30,\n  },\n  viewRating: {\n    marginHorizontal: 30,\n    marginTop: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  viewModal: {\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n  },\n  viewFooter: {\n    marginVertical: 20,\n    marginHorizontal: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  footerItem: {\n    borderRadius: 100,\n    width: 60,\n    height: 60,\n    backgroundColor: '#fff',\n    borderColor: '#F87311',\n    borderWidth: 2,\n  },\n  textItem: {\n    fontFamily: 'NunitoSans-Bold',\n    textAlign: 'center',\n    fontSize: 13,\n    color: '#000',\n  },\n  overview: {\n    fontFamily: 'NunitoSans-Bold',\n    marginHorizontal: 30,\n    marginTop: 20,\n    textAlign: 'justify',\n    color: '#929292',\n    fontSize: 16,\n  },\n  imgSponsor: {\n    width: 160,\n    height: 100,\n    alignSelf: 'center',\n    marginTop: 4,\n    marginBottom: 2,\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/InfoCard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "InfoImage",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoImage",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 71,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"path\": *}"
        ],
        "defaultRaw": {
          "path": null
        },
        "defaultValue": "{\"path\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "InfoModal",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoModal",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 82,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"setVisible\": *}"
        ],
        "defaultRaw": {
          "setVisible": null
        },
        "defaultValue": "{\"setVisible\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "InfoTitle",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoTitle",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 99,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"exhibition\": *}"
        ],
        "defaultRaw": {
          "exhibition": null
        },
        "defaultValue": "{\"exhibition\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "InfoSponsor",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoSponsor",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 112,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"url\": *}"
        ],
        "defaultRaw": {
          "url": null
        },
        "defaultValue": "{\"url\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "function",
    "name": "InfoFooter",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoFooter",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 133,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"exhibition\": *}"
        ],
        "defaultRaw": {
          "exhibition": null
        },
        "defaultValue": "{\"exhibition\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "FooterItem",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~FooterItem",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 170,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"title\": *, \"desc\": *, \"icon\": *}"
        ],
        "defaultRaw": {
          "title": null,
          "desc": null,
          "icon": null
        },
        "defaultValue": "{\"title\":null,\"desc\":null,\"icon\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/InfoCard.js",
    "static": true,
    "longname": "src/screens/InfoCard.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 197,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "InfoCard",
    "memberof": "src/screens/InfoCard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/InfoCard.js~InfoCard",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/InfoCard.js",
    "importStyle": "InfoCard",
    "description": "Pantalla que muestra los detalles de una Exhibición.",
    "see": [
      "https://lodash.com/docs/4.17.15#size",
      "https://reactjs.org/docs/hooks-state.html",
      "https://reactnavigation.org/docs/route-prop/",
      "https://lodash.com/docs/4.17.15#map"
    ],
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Recibe parametros importantes para mostrar en pantalla"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "_id",
        "description": "ID asociado a una Exhibición."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "exhibition",
        "description": "Objeto que contiene la estructura de una Exhibición."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setExhibition",
        "description": "Método de acceso indirecto para modificar la propieadad exhibition."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": "Variable auxiliar para controlar la visibilidad de un componente <Modal>."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setVisible",
        "description": "Método de acceso indirecto para modificar la propieadad visible."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getExhibitionById",
        "description": "{@link getExhibitionById} | Promesa que devuelve la información dependiendo la respuesta del servidor."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Función de la librería lodash | Devuelve el tamaño de una colección."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "Función de la librería lodash | Crea un arreglo de valores a partir de cada elemento de una colección."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SafeAreaView"
      ],
      "spread": false,
      "description": "Retorna un componente que contiene maquetada la vista"
    },
    "listens": [
      {
        "types": [
          "onPress"
        ],
        "description": "| El método showModal se dispara cuando ocurre este evento en un componente <ModalButton>."
      }
    ]
  },
  {
    "__docId__": 161,
    "kind": "file",
    "name": "src/screens/KnowMoreScreen.js",
    "content": "import React from 'react';\nimport { StyleSheet, Text, View, ScrollView } from 'react-native';\nimport KnoMoreCard from '../components/KnoMoreCard';\nimport Colors from '../constants/Colors';\nimport InformacionDeContacto from '../assets/InformacionDeContacto.jpg';\nimport MisionVisionValores from '../assets/MisionVisionValores.jpg';\n\n/**\n * Pantalla que muestra una lista de tarjetas con enlaces a pantallas para conocer más sobre Tin Marín.\n * @param {prop} navigation - Contiene información básica de navegación\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\n */\nconst KnowMoreScreen = ({ navigation }) => {\n  return (\n    <ScrollView showsVerticalScrollIndicator={true}>\n      <View style={styles.view}>\n        <Text style={styles.title}>Conócenos Más</Text>\n        <View style={styles.line}></View>\n        <KnoMoreCard\n          title=\"Contactos\"\n          imageURL={InformacionDeContacto}\n          color={Colors.magenta}\n          textBtn=\"Saber Mas\"\n          navigation={navigation}\n          screenName=\"contact\"\n        />\n\n        <KnoMoreCard\n          title=\"Misión, Visión, Valores\"\n          imageURL={MisionVisionValores}\n          color={Colors.magenta}\n          textBtn=\"Saber Mas\"\n          navigation={navigation}\n          screenName=\"missionAndVision\"\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\n/**\n * @ignore\n */\nconst styles = StyleSheet.create({\n  view: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  title: {\n    fontFamily: 'NunitoSans-Bold',\n    marginTop: 20,\n    fontSize: 30,\n    color: '#566573',\n    fontWeight: 'bold',\n  },\n  line: {\n    height: 1,\n    width: '90%',\n    backgroundColor: '#D5D8DC',\n  },\n});\n\nexport default KnowMoreScreen;\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/KnowMoreScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 162,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/KnowMoreScreen.js",
    "static": true,
    "longname": "src/screens/KnowMoreScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/KnowMoreScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 45,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "KnowMoreScreen",
    "memberof": "src/screens/KnowMoreScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/KnowMoreScreen.js~KnowMoreScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/KnowMoreScreen.js",
    "importStyle": "KnowMoreScreen",
    "description": "Pantalla que muestra una lista de tarjetas con enlaces a pantallas para conocer más sobre Tin Marín.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/"
    ],
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    }
  },
  {
    "__docId__": 164,
    "kind": "file",
    "name": "src/screens/MissionAndVisionScreen.js",
    "content": "import React from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image } from 'react-native';\n\n/**\n * Pantalla que muestra la misión y visión de la entidad.\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\n */\nconst MissionAndVisionScreen = () => {\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.view}>\n        <Text style={styles.titular}>Misión, Visión y Valores</Text>\n        <View style={styles.line}></View>\n        <View style={styles.containerlogo}>\n          <Image\n            style={styles.Logo}\n            source={require('../assets/logoTinMarin.png')}\n          />\n        </View>\n        <Text style={styles.tema}>Misión:</Text>\n        <Text style={styles.title2}>\n          Contribuir a la formación de los niños y sus acompañantes en\n          ciudadanos integrales y creativos, mediante el aprendizaje\n          significativo, la orientación cultural y la experimentración divertida\n          con integridad, innovación y trabajo en equipo.\n        </Text>\n        <Text style={styles.tema}>Visión:</Text>\n        <Text style={styles.title2}>\n          Ser el espacio favorito, cultural y divertido de los niños para\n          aprender y disfrutar de experiencias únicas, emocionantes e\n          inolvidables; y ser mejores protagonistas de su desarrollo a nivel\n          personal, escolar y social.\n        </Text>\n        <Text style={styles.tema}>Valores:</Text>\n        <Text style={styles.title}>\n          Innovación{'\\n'}\n          Integridad{'\\n'}\n          Lealtad{'\\n'}\n          Respeto{'\\n'}\n          Trabajo en equipo{'\\n'}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default MissionAndVisionScreen;\n\n/**\n *@ignore\n */\nconst styles = StyleSheet.create({\n  line: {\n    height: 1,\n    width: '90%',\n    backgroundColor: '#D5D8DC',\n  },\n  container: {\n    flex: 1,\n    paddingBottom: 24,\n    paddingHorizontal: 24,\n  },\n  view: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  title2: {\n    marginTop: 16,\n    paddingVertical: 8,\n    borderRadius: 6,\n    justifyContent: 'center',\n    color: '#20232a',\n    textAlign: 'justify',\n    fontFamily: 'NunitoSans-Bold',\n    fontSize: 18,\n  },\n  title: {\n    fontFamily: 'NunitoSans-Bold',\n    marginTop: 16,\n    paddingVertical: 8,\n    borderRadius: 6,\n    justifyContent: 'center',\n    color: '#20232a',\n    textAlign: 'center',\n    fontSize: 18,\n  },\n  tema: {\n    marginTop: 13,\n    textAlign: 'center',\n    fontFamily: 'NunitoSans-Bold',\n    fontSize: 24,\n    color: '#B22222',\n  },\n  Logo: {\n    width: 300,\n    height: 200,\n  },\n  containerlogo: {\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingVertical: 30,\n  },\n  titular: {\n    fontFamily: 'NunitoSans-Bold',\n    marginTop: 20,\n    fontSize: 30,\n    color: '#566573',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/MissionAndVisionScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 165,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/MissionAndVisionScreen.js",
    "static": true,
    "longname": "src/screens/MissionAndVisionScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/MissionAndVisionScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 52,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "function",
    "name": "MissionAndVisionScreen",
    "memberof": "src/screens/MissionAndVisionScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/MissionAndVisionScreen.js~MissionAndVisionScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/MissionAndVisionScreen.js",
    "importStyle": "MissionAndVisionScreen",
    "description": "Pantalla que muestra la misión y visión de la entidad.",
    "lineNumber": 8,
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    },
    "params": []
  },
  {
    "__docId__": 167,
    "kind": "file",
    "name": "src/screens/Search.js",
    "content": "import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  SafeAreaView,\n  ScrollView,\n  Platform,\n  Text,\n  ActivityIndicator,\n} from 'react-native';\nimport { Searchbar } from 'react-native-paper';\nimport { map, size } from 'lodash';\nimport { getExhibitionByName } from '../api/exhibitions';\nimport Card from '../components/Card';\nimport Colors from '../constants/Colors';\n\nconst Search = ({ navigation }) => {\n  const [search, setSearch] = useState('');\n  const [exhibitions, setExhibitions] = useState(null);\n  const [loading, setLoading] = useState(true);\n  let swapColor = true;\n\n  useEffect(() => {\n    if (size(search) >= 0) {\n      getExhibitionByName(search).then((response) => {\n        setExhibitions(response);\n        setLoading(false);\n      });\n    }\n  }, [search]);\n\n  const onChangeSearch = (e) => {\n    if (size(e) > 0) {\n      setLoading(true);\n    } else {\n      setLoading(false);\n    }\n    setSearch(e);\n  };\n\n  return (\n    <SafeAreaView style={styles.view}>\n      <Searchbar\n        placeholder=\"Buscar tu exhibición\"\n        iconColor=\"#4E73DF\"\n        icon=\"arrow-left\"\n        style={styles.input}\n        inputStyle={{ color: '#000' }}\n        onChangeText={onChangeSearch}\n      />\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {loading ? (\n          <ActivityIndicator\n            style={{\n              marginTop: 200,\n            }}\n            size=\"large\"\n            color=\"#0000ff\"\n          />\n        ) : size(exhibitions) == 0 ? (\n          <Text style={styles.text}>No se encontraron exhibiciones</Text>\n        ) : (\n          <View style={styles.container}>\n            {map(exhibitions, (exhibition, index) => {\n              if (index % 2 == 0) {\n                swapColor = !swapColor;\n              }\n              return (\n                <Card\n                  key={exhibition._id}\n                  index={index}\n                  textBtn=\"Conócela\"\n                  color={swapColor ? Colors.green : Colors.magenta}\n                  exhibition={exhibition}\n                  navigation={navigation}\n                />\n              );\n            })}\n          </View>\n        )}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default Search;\n\nconst styles = StyleSheet.create({\n  input: {\n    marginTop: -3,\n  },\n  container: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  view: {\n    marginBottom: 50,\n  },\n  text: {\n    fontFamily: 'NunitoSans-Bold',\n    textAlign: 'center',\n    fontSize: 20,\n    color: 'gray',\n  },\n});\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/Search.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/Search.js",
    "static": true,
    "longname": "src/screens/Search.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/Search.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "Search",
    "memberof": "src/screens/Search.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/Search.js~Search",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/Search.js",
    "importStyle": "Search",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"navigation\": *}"
        ],
        "defaultRaw": {
          "navigation": null
        },
        "defaultValue": "{\"navigation\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "src/screens/SugerenceScreen.js",
    "content": "import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  Image,\n  TouchableOpacity,\n  Alert,\n} from 'react-native';\nimport SugerenceCard from '../components/SugerenceCard';\nimport Colors from '../constants/Colors';\nimport { Picker } from '@react-native-picker/picker';\nimport { getAllSuperenceTypes, storeSugerence } from '../api/sugerences';\n\n/**\n * Pantalla que muestra el formulario de sugerencias, para poder enviar un mensaje a la entidad.\n * @param {prop} navigation - Contiene información básica de navegación\n * @property {Array<Object>} sugerenceTypes - Lista que contiene Objetos con estructura de un Tipo de Sugerencia.\n * @property {function} setSugerenceTypes - Método de acceso indirecto para modificar la propieadad sugerenceTypes.\n * @property {string} sugerenceType - Variable que guarda el tipo de sugerencia que seleccione un Usuario.\n * @property {function} setSugerenceType - Método de acceso indirecto para modificar la propieadad sugerenceType.\n * @property {string} comment - Variable que guarda el comentario que desea realizar un Usuario.\n * @property {function} setComment - Método de acceso indirecto para modificar la propieadad comment.\n * @property {string} error - Variable que contiene información de Errores cometidos por el Usuario.\n * @property {function} setError - Método de acceso indirecto para modificar la propieadad error.\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\n * @property {Promise} getAllSuperenceTypes - {@link getAllSuperenceTypes} | Promesa que devuelve los tipos de sugerencia dependiendo la respuesta del servidor.\n * @property {Promise} storeSugerence - {@link storeSugerence} | Promesa que crea un nuevo comentario en el servidor y regresa un estatus de 201.\n * @property {function} handleComment - Método que guarda un comentario de tipo string cada vez que se presiona una tecla en la caja de comentario.\n * @property {function} handleSend - Método que valida la información del formulario y envía la información al servidor usando la promesa {@link storeSugerence} o guarda errores de validación.\n * @listens {onChangeText} | El método handleComment se dispara cuando ocurre este evento en un componente <TextInput> que almacena un comentario.\n * @listens {onPress} | El método handleSend se dispara cuando ocurre este evento en un componente <TouchableOpacity> que representa el botón Enviar.\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @see https://reactjs.org/docs/hooks-effect.html\n * @see https://reactjs.org/docs/hooks-state.html\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201\n * @see https://reactnative.dev/docs/textinput#onchangetext\n * @see https://reactnative.dev/docs/touchableopacity\n * @see https://github.com/react-native-picker/picker/issues/209\n * @todo Validar la longitud el comentario.\n * @todo Mostrar el texto de error.\n * @todo validar promesas cuando no hay internet.\n * @experimental El componente Picker tiene limitaciones si se desea agregar estilos a Picker.Item.\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\n */\nconst SugerenceScreen = ({ navigation }) => {\n  // OBTIENE DATA, ES UNA COLLECCION\n  const [sugerenceTypes, setSugerenceTypes] = useState([]);\n  //GUARDA EN FORMULARIO ES UNICA\n  const [sugerenceType, setSugerenceType] = useState('');\n\n  const [comment, setComment] = useState('');\n\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getAllSuperenceTypes().then((response) => {\n      setSugerenceTypes(response);\n    });\n  }, []);\n\n  const handleComment = (comment) => {\n    // console.log(`Guardando texto: ${comment}`);\n    setComment(comment);\n  };\n\n  const handleSend = () => {\n    if (comment === '' || sugerenceType === '') {\n      setError('Por favor, Ingrese un mensaje');\n      // console.log(sugerenceType);\n    } else {\n      storeSugerence(sugerenceType, comment).then((response) => {\n        // console.log(`Respuesta del server: ${response.status}`);\n        Alert.alert('Se envió tu Sugerencia con Éxito!!!');\n        setComment('');\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container} showsVerticalScrollIndicator={true}>\n      <View style={styles.view}>\n        <Text style={styles.title}>Sugerencias O Comentarios</Text>\n        <View style={styles.line}></View>\n        <View style={styles.containerlogo}>\n          <Image\n            style={styles.Logo}\n            source={require('../assets/logoTinMarin.png')}\n          />\n        </View>\n        <View style={styles.pickerContainer}>\n          <Picker\n            style={styles.picker}\n            mode=\"dropdown\"\n            selectedValue={sugerenceType}\n            onValueChange={(itemValue, itemPosition) => {\n              setSugerenceType(itemValue);\n            }}>\n            {sugerenceTypes.map((sugerenceType, key) => (\n              <Picker.Item\n                key={key}\n                label={sugerenceType.name}\n                value={sugerenceType.name}\n              />\n            ))}\n          </Picker>\n        </View>\n      </View>\n      <SugerenceCard\n        sugerenceType={sugerenceType}\n        color={Colors.blueColor}\n        comment={comment}\n        onCommentChange={handleComment}\n      />\n      <View style={styles.view}>\n        <TouchableOpacity onPress={() => handleSend()} style={styles.button}>\n          <Text style={styles.buttonText}> Enviar! </Text>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n};\n\n/**\n * @ignore\n */\nconst styles = StyleSheet.create({\n  pickerContainer: {\n    flexDirection: 'row',\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: '#d1d3e2',\n    overflow: 'hidden',\n  },\n  picker: {\n    height: 50,\n    width: '100%',\n    backgroundColor: '#858796',\n    color: 'white',\n  },\n  pickerItem: {\n    height: 100,\n    width: 500,\n    width: '100%',\n  },\n  view: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  button: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#e74a3b',\n    marginBottom: 100,\n    height: 55,\n    width: '60%',\n    borderRadius: 10,\n  },\n  buttonText: {\n    fontFamily: 'NunitoSans-Bold',\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  title: {\n    fontFamily: 'NunitoSans-Bold',\n    fontSize: 30,\n    color: '#566573',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  line: {\n    height: 1,\n    width: '90%',\n    backgroundColor: '#D5D8DC',\n  },\n  Logo: {\n    width: 300,\n    height: 200,\n  },\n  containerlogo: {\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingVertical: 30,\n  },\n  container: {\n    flex: 1,\n    padding: 24,\n    backgroundColor: '#ffffff',\n  },\n});\n\nexport default SugerenceScreen;\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/SugerenceScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/SugerenceScreen.js",
    "static": true,
    "longname": "src/screens/SugerenceScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/SugerenceScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 129,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "SugerenceScreen",
    "memberof": "src/screens/SugerenceScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/SugerenceScreen.js~SugerenceScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/SugerenceScreen.js",
    "importStyle": "SugerenceScreen",
    "description": "Pantalla que muestra el formulario de sugerencias, para poder enviar un mensaje a la entidad.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactjs.org/docs/hooks-effect.html",
      "https://reactjs.org/docs/hooks-state.html",
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201",
      "https://reactnative.dev/docs/textinput#onchangetext",
      "https://reactnative.dev/docs/touchableopacity",
      "https://github.com/react-native-picker/picker/issues/209"
    ],
    "lineNumber": 48,
    "experimental": "El componente Picker tiene limitaciones si se desea agregar estilos a Picker.Item.",
    "todo": [
      "Validar la longitud el comentario.",
      "Mostrar el texto de error.",
      "validar promesas cuando no hay internet."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "sugerenceTypes",
        "description": "Lista que contiene Objetos con estructura de un Tipo de Sugerencia."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setSugerenceTypes",
        "description": "Método de acceso indirecto para modificar la propieadad sugerenceTypes."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sugerenceType",
        "description": "Variable que guarda el tipo de sugerencia que seleccione un Usuario."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setSugerenceType",
        "description": "Método de acceso indirecto para modificar la propieadad sugerenceType."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "comment",
        "description": "Variable que guarda el comentario que desea realizar un Usuario."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setComment",
        "description": "Método de acceso indirecto para modificar la propieadad comment."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "Variable que contiene información de Errores cometidos por el Usuario."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setError",
        "description": "Método de acceso indirecto para modificar la propieadad error."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getAllSuperenceTypes",
        "description": "{@link getAllSuperenceTypes} | Promesa que devuelve los tipos de sugerencia dependiendo la respuesta del servidor."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "storeSugerence",
        "description": "{@link storeSugerence} | Promesa que crea un nuevo comentario en el servidor y regresa un estatus de 201."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handleComment",
        "description": "Método que guarda un comentario de tipo string cada vez que se presiona una tecla en la caja de comentario."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handleSend",
        "description": "Método que valida la información del formulario y envía la información al servidor usando la promesa {@link storeSugerence} o guarda errores de validación."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    },
    "listens": [
      {
        "types": [
          "onChangeText"
        ],
        "description": "| El método handleComment se dispara cuando ocurre este evento en un componente <TextInput> que almacena un comentario."
      },
      {
        "types": [
          "onPress"
        ],
        "description": "| El método handleSend se dispara cuando ocurre este evento en un componente <TouchableOpacity> que representa el botón Enviar."
      }
    ]
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "src/screens/WebLinksScreen.js",
    "content": "import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ScrollView,\n  ActivityIndicator,\n} from 'react-native';\nimport BasicCard from '../components/BasicCard';\nimport Colors from '../constants/Colors';\nimport { getAllLinks } from '../api/weblinks';\nimport { LogBox } from 'react-native';\nimport { size } from 'lodash';\n\nLogBox.ignoreAllLogs();\n\n/**\n * Pantalla que muestra la lista de Sitios de Interés.\n * @param {prop} navigation - Contiene información básica de navegación\n * @property {Array<Object>} links - Lista que contiene Objetos con estructura de un Sitios de Interés.\n * @property {function} setlinks - Método de acceso indirecto para modificar la propieadad links.\n * @property {boolean} loading - Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene.\n * @property {function} setLoading - Método de acceso indirecto para modificar la propieadad loading.\n * @property {boolean} fetched - Variable auxiliar para validar el tiempo de respuesta de una promesa.\n * @property {function} setFetched - Método de acceso indirecto para modificar la propieadad fetched.\n * @property {function} useEffect - Hook de React que permite realizar tareas asíncronas a la vista.\n * @property {function} useState - Hook de React que permite crear una variable de estado con su método accesor.\n * @property {Promise} getAllLinks - {@link getAllLinks} | Promesa que devuelve la información dependiendo la respuesta del servidor.\n * @property {AbortController} abortController - Patrón de diseño que se implementa para validar promesas.\n * @property {AbortSignal} signal - Objeto que se comunica con abortController en caso una promesa falle.\n * @see https://reactnavigation.org/docs/navigation-prop/\n * @see https://reactjs.org/docs/hooks-effect.html\n * @see https://reactjs.org/docs/hooks-state.html\n * @seee https://developer.mozilla.org/en-US/docs/Web/API/AbortController\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @experimental La promesa getAllLinks presenta un fallo de múltiples llamadas asíncronas.\n * @return {ScrollView} Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla.\n */\nconst WebLinksScreen = ({ navigation }) => {\n  const [links, setlinks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [fetched, setFetched] = useState(false);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    getAllLinks(signal).then((response) => {\n      setlinks(response);\n      setLoading(false);\n      setFetched(true);\n    });\n\n    if (fetched) abortController.abort();\n  });\n  return (\n    <ScrollView showsVerticalScrollIndicator={true}>\n      {loading ? (\n        <ActivityIndicator\n          style={{\n            marginTop: 200,\n          }}\n          size=\"large\"\n          color=\"#0000ff\"\n        />\n      ) : size(links) == 0 ? (\n        <Text style={styles.text}>No se encontraron Sitios de Interés</Text>\n      ) : (\n        <View style={styles.view}>\n          <Text style={styles.title}>Sitios de Interes</Text>\n          <View style={styles.line}></View>\n          {links.map((link, key) => (\n            <BasicCard\n              key={key}\n              imageURL={link.image}\n              title={link.title}\n              color={Colors.magenta}\n              url={link.url}\n              textBtn=\"Saber Mas\"\n            />\n          ))}\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n/**\n * @ignore\n */\nconst styles = StyleSheet.create({\n  view: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingBottom: 30,\n  },\n  title: {\n    fontFamily: 'NunitoSans-Bold',\n    marginTop: 20,\n    fontSize: 30,\n    color: '#566573',\n  },\n  line: {\n    height: 1,\n    width: '90%',\n    backgroundColor: '#D5D8DC',\n  },\n  text: {\n    fontFamily: 'NunitoSans-Bold',\n    textAlign: 'center',\n    fontSize: 20,\n    color: 'gray',\n  },\n});\n\nexport default WebLinksScreen;\n",
    "static": true,
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/src/screens/WebLinksScreen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/screens/WebLinksScreen.js",
    "static": true,
    "longname": "src/screens/WebLinksScreen.js~styles",
    "access": "public",
    "export": false,
    "importPath": "tinMarin/src/screens/WebLinksScreen.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 89,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "WebLinksScreen",
    "memberof": "src/screens/WebLinksScreen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screens/WebLinksScreen.js~WebLinksScreen",
    "access": "public",
    "export": true,
    "importPath": "tinMarin/src/screens/WebLinksScreen.js",
    "importStyle": "WebLinksScreen",
    "description": "Pantalla que muestra la lista de Sitios de Interés.",
    "see": [
      "https://reactnavigation.org/docs/navigation-prop/",
      "https://reactjs.org/docs/hooks-effect.html",
      "https://reactjs.org/docs/hooks-state.html",
      "https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal"
    ],
    "lineNumber": 39,
    "experimental": "La promesa getAllLinks presenta un fallo de múltiples llamadas asíncronas.",
    "unknown": [
      {
        "tagName": "@seee",
        "tagValue": "https://developer.mozilla.org/en-US/docs/Web/API/AbortController"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "prop"
        ],
        "spread": false,
        "optional": false,
        "name": "navigation",
        "description": "Contiene información básica de navegación"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<Object>"
        ],
        "spread": false,
        "optional": false,
        "name": "links",
        "description": "Lista que contiene Objetos con estructura de un Sitios de Interés."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setlinks",
        "description": "Método de acceso indirecto para modificar la propieadad links."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "loading",
        "description": "Variable auxiliar para indicar si ya hay respuesta del servidor para cargar la vista que contiene."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setLoading",
        "description": "Método de acceso indirecto para modificar la propieadad loading."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "fetched",
        "description": "Variable auxiliar para validar el tiempo de respuesta de una promesa."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "setFetched",
        "description": "Método de acceso indirecto para modificar la propieadad fetched."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useEffect",
        "description": "Hook de React que permite realizar tareas asíncronas a la vista."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "useState",
        "description": "Hook de React que permite crear una variable de estado con su método accesor."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "getAllLinks",
        "description": "{@link getAllLinks} | Promesa que devuelve la información dependiendo la respuesta del servidor."
      },
      {
        "nullable": null,
        "types": [
          "AbortController"
        ],
        "spread": false,
        "optional": false,
        "name": "abortController",
        "description": "Patrón de diseño que se implementa para validar promesas."
      },
      {
        "nullable": null,
        "types": [
          "AbortSignal"
        ],
        "spread": false,
        "optional": false,
        "name": "signal",
        "description": "Objeto que se comunica con abortController en caso una promesa falle."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollView"
      ],
      "spread": false,
      "description": "Regresa una layout con scroll vertical, y muestra la maquetación de la pantalla."
    }
  },
  {
    "kind": "index",
    "content": "",
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"tinMarin\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"android\": \"react-native run-android\",\n    \"ios\": \"react-native run-ios\",\n    \"start\": \"react-native start\",\n    \"test\": \"jest\",\n    \"lint\": \"eslint .\"\n  },\n  \"dependencies\": {\n    \"@react-native-community/masked-view\": \"^0.1.10\",\n    \"@react-native-picker/picker\": \"^1.9.10\",\n    \"@react-navigation/drawer\": \"^5.11.4\",\n    \"@react-navigation/native\": \"^5.8.10\",\n    \"@react-navigation/stack\": \"^5.12.8\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-react-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"lodash\": \"^4.17.20\",\n    \"react\": \"16.13.1\",\n    \"react-native\": \"0.63.4\",\n    \"react-native-elements\": \"^3.0.0-alpha.1\",\n    \"react-native-gesture-handler\": \"^1.9.0\",\n    \"react-native-modals\": \"^0.22.3\",\n    \"react-native-paper\": \"^4.4.1\",\n    \"react-native-ratings\": \"^7.3.0\",\n    \"react-native-reanimated\": \"^1.13.2\",\n    \"react-native-safe-area-context\": \"^3.1.9\",\n    \"react-native-screens\": \"^2.15.0\",\n    \"react-native-sound\": \"^0.11.0\",\n    \"react-native-unordered-list\": \"^1.0.4\",\n    \"react-native-vector-icons\": \"^7.1.0\",\n    \"sweetalert2\": \"^10.13.0\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.8.4\",\n    \"@babel/runtime\": \"^7.8.4\",\n    \"@react-native-community/eslint-config\": \"^1.1.0\",\n    \"babel-jest\": \"^25.1.0\",\n    \"eslint\": \"^6.5.1\",\n    \"jest\": \"^25.1.0\",\n    \"metro-react-native-babel-preset\": \"^0.59.0\",\n    \"react-test-renderer\": \"16.13.1\"\n  },\n  \"jest\": {\n    \"preset\": \"react-native\"\n  }\n}\n",
    "longname": "/Users/didiercruz/Public/Proyectos/tin-marin-app/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]